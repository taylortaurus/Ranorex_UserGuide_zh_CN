{"./":{"url":"./","title":"关于本书","keywords":"","body":" Ranorex User Guide 中文版 Ranorex 相关翻译项目相关感谢 Ranorex User Guide 中文版 变强按钮 | 将我拖到收藏夹栏上 Ranorex 相关 Ranorex 官网地址 &#x1F449; Ranorex Studio Ranorex 用户手册官方地址 &#x1F449; Ranorex User Guide Ranorex 维基介绍 &#x1F449; Ranorex Studio-Wiki Ranorex Studio 各版本百度云分流下载 &#x1F449; Ranorex Studio BaiduPan Download 翻译项目相关 我的站点 &#x1F449; TaylorTaurus's Site 我的博客 &#x1F449; TaylorTaurus's Blog 项目地址点击右上角章鱼猫图标跳转，多多Star，多多Fork 扫描或是点击二维码，下载 Ranorex用户手册官方App 感谢 本项目基于GitBook 使用TravisCI自动化构建和部署 项目托管于GitHub 使用Coding的Page服务 Hosted by Coding Pages © 2018 ranorex.xyz            updated: 2020-06-18 "},"ranorex-studio-fundamentals/":{"url":"ranorex-studio-fundamentals/","title":"Ranorex Studio 基础教程","keywords":"","body":"[译] Ranorex Studio 基础教程本章章节结构如下标识的意义[译] Ranorex Studio 基础教程 本章将会介绍在Ranorex Studio中进行自动化基本测试所需的工具和概念。每个主题都包含易于操作的分步指南和相关示例，以便你可以立即获得实践经验。如果你喜欢从书面教程中学习，我们建议你学习章节 &#x1F449; 在20分钟内了解 Ranorex，以便在进行第一次测试时体验Ranorex Studio。如果你希望从视频教程中学习，我们建议你观看Ranorex Studio快速入门视频系列。 本章章节结构如下 方法 概念 在20分钟内了解 Ranorex Ranorex Studio 动作 Ranorex 录制器 控件库 测试套件 验证测试 白名单 报告 标识的意义 方法： 包含对过程的详细描述。含有对流程的解释、流程的目标，以及对成功完成流程所需的操作的逐步说明。 概念： 在一个或多个Ranorex Studio工具和/或方法中应用的原理，技术概念或关键思想的详细描述。这些概念对于理解和使用引用的工具或方法很重要。 © 2018 ranorex.xyz            updated: 2020-06-18 "},"ranorex-studio-fundamentals/ranorize-20-minutes/":{"url":"ranorex-studio-fundamentals/ranorize-20-minutes/","title":"在20分钟内了解 Ranorex","keywords":"","body":"本页说明本页说明 为了可以和官方同步URL，gitbook默认章节的README.md内容暂时不放翻译内容。 待日后放置本章节的实践示例！ 吼吼！加油！！！ © 2018 ranorex.xyz            updated: 2020-06-18 "},"ranorex-studio-fundamentals/ranorize-20-minutes/introduction.html":{"url":"ranorex-studio-fundamentals/ranorize-20-minutes/introduction.html","title":"介绍","keywords":"","body":"[译] 介绍[译] 介绍 欢迎来到在20分钟内了解Ranorex板块。在本指南中，你将在Ranorex Studio中迈出第一步，并熟悉其一些基本功能。在这里你将通过6个简单步骤创建你的第一个自动化软件测试项目。 在未来的20分钟内，你需要一台工作电脑，我们将继续介绍其他所有内容。                                  下载并安装Ranorex Studio &#x1F449; © 2018 ranorex.xyz            updated: 2020-06-18 "},"ranorex-studio-fundamentals/ranorize-20-minutes/1-download-install-ranorex-studio.html":{"url":"ranorex-studio-fundamentals/ranorize-20-minutes/1-download-install-ranorex-studio.html","title":"下载并安装RanorexStudio","keywords":"","body":"[译] 下载并安装Ranorex Studio说明[译] 下载并安装Ranorex Studio 用时：3min 如果你已经安装了Ranorex Studio，你可以直接跳过进入下一章 &#x1F449; 创建一个新的解决方案 说明 前往/免费试用/并按照说明下载Ranorex Studio免费试用 下载后，运行安装文件并按照安装向导中的说明动作。为了确保完整的安装，不要取消选择此对话框中的任何功能 a. 如果你已经购买了一个有效的许可证密钥，那么选择并插入一个有效的许可证密钥 b. 如果你只想使用Ranorex Studio30天的试用版 许可证类型选择 一旦完成，Ranorex Studio会自动启动并显示“Start page”页面。 &#x1F448;介绍                                                    规划你的首个测试&#x1F449; © 2018 ranorex.xyz            updated: 2020-06-18 "},"ranorex-studio-fundamentals/ranorize-20-minutes/3-plan-first-test.html":{"url":"ranorex-studio-fundamentals/ranorize-20-minutes/3-plan-first-test.html","title":"规划你的首个测试","keywords":"","body":"[译] 规划你的首个测试规划我们想测试什么我们可以怎么测试它[译] 规划你的首个测试 用时：3min 在开始构建测试之前，我们需要考虑我们实际上要做什么。这有助于防止错误和冗长的测试重构。 规划 为了规划我们本指南中将要创建的测试，我们将问自己以下问题，当你创建更复杂的测试时，这些也适用。 我们想做什么测试 我们可以怎么测试它 我们想测试什么 在本指南中，我们将测试Ranorex Studio 演示应用程序，这是一个简单的程序，可以帮助你学习如何使用Ranorex Studio。 演示应用程序下载 演示应用程序可以在这里下载 &#x1F449; Ranorex 演示应用程序将应用程序解压缩到你选择的任何文件夹中。出于本指南的目的，我们假设它已保存到系统的/Downloads/文件夹中。 演示程序起始页 我们将创建一个测试，以确认在Enter your name字段中输入的文本在单击Submit之后出现在右侧的欢迎消息中。 我们可以怎么测试它 为了测试上面描述的动作，我们的测试需要包括以下动作: 启动演示程序 点击文本框 在文本框中输入Harry 点击Submit 验证在欢迎界面显示的文本 关闭程序 &#x1F448;下载并安装Ranorex Studio                      创建一个新的解决方案&#x1F449; © 2018 ranorex.xyz            updated: 2020-06-18 "},"ranorex-studio-fundamentals/ranorize-20-minutes/2-create-new-solution.html":{"url":"ranorex-studio-fundamentals/ranorize-20-minutes/2-create-new-solution.html","title":"创建一个新的解决方案","keywords":"","body":"[译] 创建一个新的解决方案创建一个新的测试解决方案Ranorex Studio用户界面[译] 创建一个新的解决方案 用时：2min 在这个步骤中，你将创建一个新的解决方案，首先了解一下Ranorex Studio的用户界面。 本章导视 创建一个新的测试解决方案 Ranorex Studio用户界面 创建一个新的测试解决方案 在Ranorex Studio Start Page的Start部分中，单击New test solutio。 在打开的对话框中，输入名称并单击Create。 Ranorex Studio的用户界面将会出现，一个空的录制模块已经打开。 创建一个新的测试解决方案 Ranorex Studio用户界面 让我们快速浏览一下Ranorex Studio用户界面的不同元素。 项目文件视图 项目文件视图将显示与测试解决方案关联的所有项目、文件夹、引用和文件。 模块浏览器视图 模块浏览器提供对所有模块和按项目排序的模块组的快速访问。 录制模块视图--动作表 在这个视图中，你可以用动作填充录制模块并编辑它们。它们将按时间顺序排列在“动作表”中。 录制模块视图--控件库 控件库包含动作引用的所有控件库项，控件库项表示UI元素。 &#x1F448;规划你的首个测试                            录制你的首个测试&#x1F449; © 2018 ranorex.xyz            updated: 2020-06-18 "},"ranorex-studio-fundamentals/ranorize-20-minutes/4-record-first-test.html":{"url":"ranorex-studio-fundamentals/ranorize-20-minutes/4-record-first-test.html","title":"录制你的首个测试","keywords":"","body":"[译] 录制你的首个测试成功录制的步骤选择应用开始录制录制测试验证UI元素退出应用并停止录制总结[译] 录制你的首个测试 用时：6min 是时候录制我们的测试了!这意味着我们将手动执行我们在上一章中确定的动作，并让Ranorex Studio录制它们。 本章导视 成功录制的步骤 选择应用开始录制 录制测试 验证UI元素 退出应用并停止录制 总结 成功录制的步骤 Ranorex Studio支持各种环境，测试规范和技术设置。 因此，无论你的环境如何，你的首次录制都是成功的，我们建议你执行以下动作： 录制时，只使用鼠标进行导航 避免使用其他输入设备，如图形平板电脑，触摸板，笔 点击每一步骤 不要使用Tab键浏览表单 关闭提前应用 关闭你不需要进行测试的任何其他应用程序或工具 在另一台计算机上打开用户指南 如果可能，请在另一台计算机或平板电脑上打开用户指南，以便在录制测试时参考 单击录像机中的暂停/继续 要查看用户指南或执行你不想操作的动作，只需单击录制器控制中心中的暂停按钮 将显示缩放设置为100％ 在Windows显示设置中，将所有显示的显示比例设置为100％。 选择应用开始录制 单击录制视图中的RECORD按钮 在打开的对话框中单击Desktop 在下一个窗口中，单击Add app... 打开保存Ranorex演示应用程序的位置，例如 你的计算机的/Downloads/文件夹。 在该文件夹中，选择RxDemoApp.exe并单击Open，选择Ranorex演示应用程序作为测试应用程序。 注意 不要单击录制按钮。 点击它后，将录制所有按键和大多数用户交互。首先阅读下一节，然后执行其中的说明。 录制测试 单击Record按钮开始录制。Ranorex Studio自动切换到演示应用程序，录制器控件出现。 单击Enter your name文本字段，输入Harry，然后单击Submit。 验证UI元素 我们可以看到Harry出现在欢迎辞中。现在我们将添加一个验证，以便Ranorex Studio在测试期间验证这一点。 单击录像机控件中的Validate以暂停录制并切换到验证模式。 将鼠标悬停在欢迎消息上，出现紫色框，这意味着已经识别了UI元素，点击它。 选择元素窗口打开。检查右下角的屏幕截图是否显示要验证的UI元素。在我们的例子中，这就是欢迎信息。单击Next确认。 打开验证设置窗口。在这里，你可以选择要验证的属性。在我们的例子中，text是正确的预选择。单击OK确认并切换回录制模式。 退出应用并停止录制 单击演示应用程序右下角的Exit将其关闭。 单击“录制器”控件中的Stop以停止录制。 总结 下图显示了本章中描述的所有录制步骤。你可以在录制时将其用作屏幕辅助。 &#x1F448;创建一个新的解决方案                          分析你的录制动作&#x1F449; © 2018 ranorex.xyz            updated: 2020-06-18 "},"ranorex-studio-fundamentals/ranorize-20-minutes/5-analyze-recording.html":{"url":"ranorex-studio-fundamentals/ranorize-20-minutes/5-analyze-recording.html","title":"分析你的录制动作","keywords":"","body":"[译] 分析你的录制动作录制的动作控件库项在动作和控件库项之间的连接[译] 分析你的录制动作 用时：3min 每次录制后，分析录制的动作和生成的控件库库项目，以及它们的连接方式，这有助于防止错误。 本章导视 录制的动作 控件库项 在动作和控件库项之间的连接 录制的动作 录制视图中的表包含6个单独的，相应编号。让我们仔细看看它们。 动作#1 -- 运行应用 该动作是启动Ranorex演示程序 动作#2 -- 鼠标点击 该动作在EnterYourName文本框中执行单击 动作#3 -- 键值序列 该动作在EnterYourName文本框输入Harry 动作#4 -- 鼠标点击 该动作是单击Submit，使用在步骤3中输入的名称更新欢迎消息 动作#5 -- 验证 该动作验证欢迎消息是否已正确更新 动作#6 -- 鼠标点击 该动作单击Exit，关闭演示应用程序 贴士 如果你没有准确地遵循录制说明进行操作，则可能会有额外的录制动作。如果是，请确定不属于预期测试的并将其删除。 注意 关于验证 - 验证输入键序列是否与验证参考文本序列完全匹配！验证区分大写字母和小写字母。 控件库项 上面列出的一些动作操纵UI元素。这些UI元素表示为控件库中的控件库项目，它出现在录制视图的下半部分。 控件#1 -- RxButtonExit 该控件表示Exit按钮 控件#2 -- EnterYourName 该控件表示文本框EnterYourName 控件#3 -- BtnSubmitUserName 该控件表示Submit按钮 控件#4 -- LblWelcomeMessage 该控件表示欢迎辞文本 在动作和控件库项之间的连接 操纵UI元素的动作（例如单击按钮）会自动链接到相应的控件库项中的控件，控件库项显示在动作表中的动作旁边，单击该动作时，该项目也会在控件库中突出显示。 不操纵UI元素的动作（例如启动应用程序）不会链接到控件库项。 操作EnterYourName文本框的动作 “Mouse”动作会在文本框中执行鼠标单击。“Key sequence”动作则在文本框中输入Harry。这两个动作都链接到名为EnterYourName控件库项 表示受操纵的UI元素的控件库项 &#x1F448;录制你的首个测试                           运行测试并检查报告&#x1F449; © 2018 ranorex.xyz            updated: 2020-06-18 "},"ranorex-studio-fundamentals/ranorize-20-minutes/6-run-test-check-report.html":{"url":"ranorex-studio-fundamentals/ranorize-20-minutes/6-run-test-check-report.html","title":"运行测试并检查报告","keywords":"","body":"[译] 运行测试并检查报告开始运行测试观察测试运行查看测试报告报告详情[译] 运行测试并检查报告 用时：3min 是时候执行测试并查看报告了。 本章导视 开始运行测试 观察测试运行 查看测试报告 开始运行测试 以下列方式之一开始测试： a.　单击测试套件FirstTest.rxtst的选项卡，从录制视图切换到测试套件视图，测试套件是你管理和运行测试的地方。 b.　或是点击View test suite按钮 在测试套件中点击RUN按钮 注意单击RUN后，请勿使用键盘或鼠标，这样做会干扰测试动作并导致测试失败。 观察测试运行 测试运行开始时，Ranorex Studio会在录制中执行动作时出现两个状态窗口。 测试运行状态和进度信息 查看测试报告 测试运行完成后，报告将在Ranorex Studio的新选项卡中打开。 如果一切按预期进行，你应该会看到一个大的绿色饼图。 报告详情 单击测试用例和录制模块旁边的箭头以显示有关测试运行的更多详细信息，例如验证动作详细信息。 按钮可展开/折叠详细信息 有关成功验证的详细信息 &#x1F448;分析你的录制动作                                  总结&#x1F449; © 2018 ranorex.xyz            updated: 2020-06-18 "},"ranorex-studio-fundamentals/ranorize-20-minutes/summary.html":{"url":"ranorex-studio-fundamentals/ranorize-20-minutes/summary.html","title":"总结","keywords":"","body":"[译] 总结创建一个失败的测试你和Ranorex的下一个小时Ranorex StudioRanorex 录制器测试套件[译] 总结 恭喜你!你刚刚用Ranorex Studio完成了你的第一个自动化软件测试。 如果你想要更多的测试动作，请继续尝试下面关于导致测试失败的简短教程。 或者，简单地翻到页面底部，就如何在Ranorex Studio度过你的下一个小时提出建议。 本章导视 创建一个失败的测试 你和Ranorex的下一个小时 创建一个失败的测试 测试失败是测试的一部分。 让我们在受控的环境中制作一个，看看它们在Ranorex Studio中的样子。 要返回录制视图，请单击Recording1.rxrec选项卡 选择动作#3并将文本输入更改为Sally 返回测试套件视图并运行测试 测试失败，报告显示发生了什么 失败的测试报告 测试失败，因为欢迎消息的验证失败，验证期望值“Welcome, Harry!”，但它实际上找到了值“Welcome, Sally!”，因此，测试中止。 你和Ranorex的下一个小时 对于Ranorex的下一个小时，我们建议你查看下面列出的用户指南Ranorex Studio基础部分的第一章。 Ranorex Studio Ranorex Studio是在统一界面中组织Ranorex功能的中央平台。在本章中，你将： 获得起始页面的概述 学习如何创建和启动新的解决方案 并熟悉Ranorex Studio用户界面的主要组件 章节预览跳转到 > Ranorex Studio 基础教程 > Ranorex Studio > &#x1F449; RanorexStudio起始页 Ranorex 录制器 录制是你录制测试的地方，在这一章中，你会发现关于以下主题的详细信息: 录制测试 分析录制 并设置运行和调试选项 章节预览跳转到 > Ranorex Studio 基础教程 > Ranorex录制器 > &#x1F449; 介绍 测试套件 测试套件是你管理、结构和模块化测试用例和测试模块的地方。在这一章中，你会发现关于以下主题的详细信息: 测试套件的结构和元素 模块化 建立复杂的测试 章节预览跳转到 > Ranorex Studio 基础教程 > &#x1F449; 测试套件 &#x1F448;运行测试并检查报告 © 2018 ranorex.xyz            updated: 2020-06-18 "},"ranorex-studio-fundamentals/ranorex-studio/":{"url":"ranorex-studio-fundamentals/ranorex-studio/","title":"Ranorex Studio","keywords":"","body":"本页说明本页说明 为了可以和官方同步URL，gitbook默认章节的README.md内容暂时不放翻译内容。 待日后放置本章节的实践示例！ 吼吼！加油！！！ © 2018 ranorex.xyz            updated: 2020-06-18 "},"ranorex-studio-fundamentals/ranorex-studio/introduction.html":{"url":"ranorex-studio-fundamentals/ranorex-studio/introduction.html","title":"介绍","keywords":"","body":"[译] 介绍--Ranorex Studio下载Ranorex StudioRanorex安装向导完成Ranorex安装30天免费试用 VS 付费许可证书打开Ranorex Studio结果[译] 介绍--Ranorex Studio 在本章中，您将下载并安装Ranorex Studio。这是一个简单的过程，大约需要3分钟完成。按照下面的说明。 本章导视 下载Ranorex Studio Ranorex安装向导 完成Ranorex安装 30天免费试用 VS 付费许可证书 打开Ranorex Studio 下载Ranorex Studio 访问Ranorex工作室免费试用下载网页 输入您的姓名、公司和有效的商业电子邮件地址 点击图片打开免费试用版的下载地址 检查收件箱中是否有包含下载链接的电子邮件 单击链接开始下载 Ranorex安装向导 开始安装并按照下述说明动作 接受许可协议 确保在出现提示时不要取消选择任何功能！ Ranorex设置向导--功能选择 完成Ranorex安装 观察安装过程 您应该会看到一条消息，说明安装成功 单击Finish退出安装向导并启动Ranorex Studio Ranorex设置向导-安装进度（左）和最终成功信息（右） 30天免费试用 VS 付费许可证书 a. 选择并输入购买的Ranorex许可证的许可证信息 b. 您可以使用Ranorex Studio的全功能版本，免费试用30天。之后，您必须购买许可证才能继续使用Ranorex Studio。 Ranorex Studio许可证类型选择 章节预览在 > Ranorex Studio 系统详情 > &#x1F449; 许可证书章节中详细介绍可用的许可证模式和Ranorex许可证管理器，价格信息可在我们的网站上获得。 打开Ranorex Studio 打开Windows开始菜单 搜索Ranorex工作室程序图标 Windows“开始”菜单中的Ranorex Studio程序图标 结果 Ranorex Studio启动并显示起始页 Ranorex Studio起始页                                     Ranorex Studio起始页&#x1F449; © 2018 ranorex.xyz            updated: 2020-06-18 "},"ranorex-studio-fundamentals/ranorex-studio/ranorex-studio-startpage.html":{"url":"ranorex-studio-fundamentals/ranorex-studio/ranorex-studio-startpage.html","title":"RanorexStudio起始页","keywords":"","body":"[译] Ranorex Studio起始页Ranorex起始页概览版本信息可获得的更新许可证信息[译] Ranorex Studio起始页 Ranorex Studio 起始页可以让你启动新测试解决方案或打开现有测试解决方案，在这里也能获取Ranorex最新信息。 本章导视 Ranorex起始页概览 版本信息 可获得的更新 许可证信息 Ranorex起始页概览 Ranorex Studio起始页面是打开程序后的初始工作环境。下面描述的许多页面组件都在不断更新，因此需要有效的Internet连接。 Ranorex Studio起始页主要组件 开始部分 控制中心，用于启动新的测试解决方案或打开现有的测试解决方案 最近项目 最近打开的测试项目和文件列表 示例项目 “用户指南”中描述的可用示例项目 许可证信息 当前许可证类型，包含到期日期。单击此区域以了解有关当前许可证的更多信息。如果您使用的是30天免费试用版，则会显示剩余使用时间。 试用版--剩余使用时间 信息区域 链接到用户指南等资源以及有关自动化测试的特征信息 发布重点和公告 发布重点介绍Ranorex Studio的当前版本以及发行说明的链接 公告部分包括新Ranorex版本，即将举行的网络研讨会以及我们的自动化测试博客中的最​​新文章等信息 版本信息 要查看有关您的Ranorex Studio版本的详细信息，请按照以下步骤动作。 转到菜单栏中的Help > About 当前Ranorex Studio的版本信息 可获得的更新 当您连接到Internet时，Ranorex Studio会自动验证当前版本是否已安装。如果有更新版本，则开始页面上会显示绿色信息栏，类似于以下示例。 Ranorex新版本的通知 许可证信息 单击许可证信息区域以获得关于当前许可证的详细信息。 当前许可证示例 章节预览在 > Ranorex Studio 系统详情 > &#x1F449; 许可证章节介绍了可获得的许可证模式和许可证管理器相关内容 &#x1F448;介绍                                      示例项目&#x1F449; © 2018 ranorex.xyz            updated: 2020-06-18 "},"ranorex-studio-fundamentals/ranorex-studio/sample-projects.html":{"url":"ranorex-studio-fundamentals/ranorex-studio/sample-projects.html","title":"示例项目","keywords":"","body":"[译] 示例项目桌面示例Web示例Android和iOS上的移动应用跨平台示例[译] 示例项目 Ranorex Studio起始页面上的示例项目介绍了自动化测试的关键概念。研究这些示例来了解如何为桌面，Web和移动应用程序创建自动化测试。还有一个跨平台示例项目，演示如何在单个测试场景中对桌面，Web和移动执行测试。 桌面示例 此示例在桌面演示应用程序上执行自动测试。 学习的相关内容：变量绑定，数据连接器，用户代码动作，参数，可选动作，嵌套测试用例，模块组和全局安装/拆卸区域 Web示例 此示例在在线博客工具上执行自动测试。 学习的相关内容：模块库、弹出窗口监视程序、项目组织、报表截图、验证、web测试、处理弹出菜单、安装/拆卸区域和数据绑定。 Android和iOS上的移动应用 这些Android和iOS示例在移动应用程序上执行自动测试。 学习的相关内容：移动测试，android，ios，部署移动应用程序，模块组，用户代码动作，安装/拆卸区域，数据连接器和参数。 跨平台示例 此示例在桌面，Web和移动应用程序上执行自动测试。 学习的相关内容：跨平台测试，端到端测试，ios，android，部署移动应用程序，模块库，项目组织，弹出观察器，Web测试，移动Web测试，安装/拆卸区域和数据绑定 &#x1F448;Ranorex Studio起始页                        创建一个新解决方案&#x1F449; © 2018 ranorex.xyz            updated: 2020-06-18 "},"ranorex-studio-fundamentals/ranorex-studio/creating-new-solution.html":{"url":"ranorex-studio-fundamentals/ranorex-studio/creating-new-solution.html","title":"创建新的解决方案","keywords":"","body":"[译] 创建新的解决方案RocketStart解决方案向导选择要测试的应用程序选择录制动作终端窗口和教程面板桌面解决方案及其项目的结构StartAUT和CloseAUT模块[译] 创建新的解决方案 在Ranorex Studio中，解决方案是包含所有其他测试文件的顶级容器。解决方案组织成一个或多个项目。Ranorex Studio中有不同的项目类型，但测试套件项目通常用于构建测试。测试套件项目包含一个或多个测试套件，这些测试套件又代表测试结构及其测试用例和模块。 在本章中，您将学习如何创建一个新的解决方案来测试桌面应用程序。您创建的新解决方案始终带有测试套件项目。 章节预览如果要将项目添加到现有解决方案，请参阅Ranorex Studio基础知识> Ranorex Studio> &#x1F449;创建一个新的测试项目如果要为Web或移动测试创建解决方案，请参阅Web和移动测试> &#x1F449;Web测试 以及网络和移动测试> &#x1F449;Android测试 / &#x1F449;iOS测试 本章导视 RocketStart解决方案向导 选择要测试的应用程序 选择录制动作 终端窗口和教程面板 桌面解决方案及其项目的结构 StartAUT和CloseAUT模块 RocketStart解决方案向导 单击文件>新建>使用向导解决方案...以打开RocketStart解决方案向导。在出现的对话框中， 单击“桌面”。 配置您的解决方案（参见下面的解释）; 然后 单击继续。 测试创建对话框 解决方案名称 为解决方案提供有意义的名称或使用默认名称。 默认情况下，解决方案名称也用作此解决方案中测试套件项目的名称。 位置 除非更改，否则将在中创建新项目目录 \\Ranorex\\RanorexStudio Projects\\ 单击其他选项以访问更多选项： 如上所述，默认情况下，测试套件项目名称与解决方案名称相同。您可以在此处为项目指定其他名称。 项目的编程语言。C＃是默认的，VBNet也可用。 取消选择后，解决方案文件将保存在项目的文件夹中，而不是保存在项目文件夹的父文件夹中。 如果需要，选中此框以将解决方案和项目添加到&#x1F449;源代码管理系统。 视频向导观看视频“改进的启动和关闭AUT动作”，了解版本9.1如何提高测试和解决方案向导的稳定性。立即观看 选择要测试的应用程序 选择一个： a. 单击“运行应用程序”并选择一个列出的应用程序 b. 单击“浏览应用程序”>“浏览” 应用并使用Windows资源管理器浏览到应用程序。 单击Continue 桌面运行中的应用程序的列表。 用于浏览应用程序并指定可选命令行参数的部分。 选择录制动作 使用此屏幕可配置Ranorex Studio在搜索UI元素时是仅评估一个应用程序，多个应用程序或所有正在运行的应用程序。这是Ranorex Studio的&#x1F449;白名单功能的一部分。 选择一个： a. focus on single applicationRanorex Studio仅在您之前选择的测试应用程序中录制用户交互。其他一切都被忽略了。白名单仅包含您的AUT。 b. focus on multiple applications除了AUT之外，您还可以将其他流程添加到由Ranorex Studio录制的白名单中。 c. No focus applied录制所有用户交互。白名单是空的。 单击Continue。 终端窗口和教程面板 终端窗口会解释了当设置安装完成将会发生什么，即教程面板将出现并为您提供快速教程，指导您完成测试的第一步。 阅读说明，然后单击“finish”以完成设置。 桌面解决方案及其项目的结构 完成设置后，Ranorex Studio将在测试套件视图中打开一个简单的预构建桌面测试套件。此测试套件是使用此桌面解决方案自动创建的测试套件项目的一部分。 测试套件视图 您可以在此处构建和控制测试。 您的解决方案附带一个包含简单预构建测试套件的项目。它包含一个带有三个录制模块的测试用例：StartAUT 它启动演示应用程序， Recording1 为空并准备好录制测试动作，以及CloseAUT 关闭演示应用程序。 录像模块视图 在Recording1的录像模块视图中，您可以录制和管理测试动作。 空动作表 这是您录制的动作的显示位置。 章节预览有关录制测试的更多信息，请参阅：Ranorex Studio基础> &#x1F449;Ranorex录制器有关测试套件的更多信息，请参阅：Ranorex Studio基础> &#x1F449;测试套件 StartAUT和CloseAUT模块 桌面解决方案模板中的StartAUT和CloseAUT模块使用特殊机制来确保关闭已启动AUT的正确实例。这样可以提高基于模板的测试的稳定性。该机制基于变量和参数的高级概念，这就是为什么解决方案带有绑定到两个模块的变量的原因。 贴士 您无需熟悉变量和参数即可使用桌面解决方案模板。 章节预览如果要了解有关变量和参数的更多信息，请参阅Ranorex Studio高级>数据驱动测试> &#x1F449;定义变量Ranorex Studio高级>数据驱动测试> &#x1F449;参数 &#x1F448;示例项目                               创建一个新的测试项目&#x1F449; © 2018 ranorex.xyz            updated: 2020-06-18 "},"ranorex-studio-fundamentals/ranorex-studio/creating-new-test-project.html":{"url":"ranorex-studio-fundamentals/ranorex-studio/creating-new-test-project.html","title":"创建一个新的测试项目","keywords":"","body":"[译] 创建一个新的测试项目[译] 创建一个新的测试项目 创建新的测试解决方案很简单。本章介绍如何执行此动作。 在起始页面的开始部分，单击New test solution 打开New project对话框窗口，如下所示。 单击Create以确认测试项目创建 测试创建对话框 测试项目策略 根据测试需求，有不同的测试项目类别 默认类别是标准的c#测试套件模板 项目名称/解决方案名称 给测试项目一个有意义的名称 项目名称也用作解决方案名称 除非更改，否则将在Ranorex\\RanorexStudio Projects中创建新的项目目录 源码控制 如果需要，选中该复选框以将新测试项目添加到源码控制系统 贴士 项目目录是从相应的环境变量％USERPROFILE％引用的，可以在Ranorex设置中设置和更改 &#x1F448;创建新的解决方案                              工作环境和视图&#x1F449; © 2018 ranorex.xyz            updated: 2020-06-18 "},"ranorex-studio-fundamentals/ranorex-studio/working-environments-views.html":{"url":"ranorex-studio-fundamentals/ranorex-studio/working-environments-views.html","title":"工作环境和视图","keywords":"","body":"[译] 工作环境和视图基本工作环境结构新增视图更改和选择视图[译] 工作环境和视图 Ranorex Studio工作环境提供了一个管理测试解决方案及其所有组件的中心位置。本章介绍基本工作环境和默认视图。 本章导视 基本工作环境结构 新增视图 更改和选择视图 基本工作环境结构 Ranorex Studio提供了一个简单的工作环境，并根据共同的原则进行组织，例如分层组织。有关工作环境结构的介绍，请参阅下面的概述。 基本的工作环境结构 项目视图 Ranorex Studio项目基于文件，并使用与Microsoft Visual Studio 2008/2010相同的项目文件格式 项目视图显示当前与项目关联的所有文件和引用 模块浏览器 模块浏览器列出项目代码文件中的所有可用代码和录制模块。它还列出了项目模块组文件中的所有模块组 此外，它还显示模块或模块组定义的所有变量 此视图主要用于拖放自动化模块和模块组，以及在测试套件视图中重用模块和模块组 文件视图 双击项目视图中的文件或模块浏览器中的模块，以在Ranorex Studio的文件视图中打开关联文件 此视图显示所有可用文件，例如测试套件视图，带有动作表和控件库的录制器视图，报告，代码模块等等 新增视图 有关所有可用视图的列表，请单击Ranorex Studio菜单栏中的View。 Studio菜单中的View菜单 提示 用户指南的相应章节中描述了不同的视图。 更改和选择视图 使用Studio菜单栏的View菜单向工作环境添加视图。 要在活动视图之间切换，单击文件视图中相应的选项卡。 Studio文件视图中不同文件的可用选项卡 测试套件视图(*.rxtst) 测试套件有这样的文件后缀rxtst=Ranorex test suite 录制器视图(*.rxrec) 录制器文件有这样的后缀rxrec=Ranorex Recorder 报告文件 报告文件有这样的后缀rxlog=Ranorex Logfile 贴士 通过单击选项卡中文件名旁边的[x]，从工作环境中删除活动视图。 &#x1F448;创建一个新的测试项目 © 2018 ranorex.xyz            updated: 2020-06-18 "},"ranorex-studio-fundamentals/ranorex-recorder/":{"url":"ranorex-studio-fundamentals/ranorex-recorder/","title":"Ranorex 录制器","keywords":"","body":"本页说明本页说明 为了可以和官方同步URL，gitbook默认章节的README.md内容暂时不放翻译内容。 待日后放置本章节的实践示例！ 吼吼！加油！！！ © 2018 ranorex.xyz            updated: 2020-06-18 "},"ranorex-studio-fundamentals/ranorex-recorder/introduction.html":{"url":"ranorex-studio-fundamentals/ranorex-recorder/introduction.html","title":"介绍","keywords":"","body":"[译] Ranorex 录制器集成录制独立录制集成录制 vs 独立录制[译] Ranorex 录制器 Ranorex Recorder允许你录制用户界面测试所需的键盘和鼠标动作。这些动作显示在Recorder的动作表中，你可以在其中编辑或添加更多动作。这样，你就可以创建录制以满足你的测试需求。Ranorex Recorder可作为Ranorex Studio中的集成工具使用，也可作为独立版本使用。 本章导视 集成录制 独立录制 集成录制 vs 独立录制 集成录制 当你开始一个新的测试项目时，工作环境将显示一个空的录制模块被打开。 集成录制 激活Recording1.rxrec录制模块 集成录制器控制面板 独立录制 Ranorex还提供独立的录制器。它可以独立于Ranorex Studio启动。 独立录制器 打开Windows开始菜单 点击Ranorex > Ranorex Recorder 8 按照需求（32位或是64位）启动独立录制器 集成录制 vs 独立录制 两种版本的录制器基本功能都相同。但是独立录制器具有较少的功能。这就是我们建议你使用集成录制器的原因。 一个主要的区别是独立的录制器不允许用户代码动作（这在自动化测试中很流行），独立的Recorder默认情况下也使用嵌入式控件库。在处理更复杂的测试任务时，这可能会受到限制。 出于这些原因，“用户指南”侧重于集成的录制器器。                                        你开始录制之前&#x1F449; © 2018 ranorex.xyz            updated: 2020-06-18 "},"ranorex-studio-fundamentals/ranorex-recorder/before-you-start-recording.html":{"url":"ranorex-studio-fundamentals/ranorex-recorder/before-you-start-recording.html","title":"你开始录制之前","keywords":"","body":"[译] 你开始录制之前录制建议我们的待测应用--Ranorex演示程序下载演示程序启动ATU录制规划使用录制脚本考虑录制的大小计划如何录制鼠标移动测试定义录制器默认设置[译] 你开始录制之前 无论您的测试是简单还是复杂，准备工作都是测试自动化的关键。从长远来看，准备工作可以防止错误并节省时间。本章介绍开始录制测试之前要采取的步骤。 本章导视 录制建议 我们的待测应用--Ranorex演示程序 录制规划 测试定义 录制器默认设置 录制建议 花点时间考虑以下建议。 它们可以使您的测试生活更轻松，您的工作更有效率。 名称 解释 Application under test (AUT) 您是想每次都自己启动AUT，还是希望Ranorex在录制开始时自动启动它？ 在任何一种情况下，您都需要知道安装路径和任何所需的启动参数 Test data & parameters 确保您拥有可用于测试的所有测试数据和参数，例如登录名和密码 Test instances 在录制期间仅运行一个AUT实例 Recording interaction 在录制期间捕获所有用户动作，甚至是与AUT无关的意外动作。 确保禁用任何可能干扰录制的内容，例如弹出窗口 录制建议 章节预览白名单可以确保Ranorex仅与您的测试相关的过程进行交互。在 > Ranorex Studio 基础教程 > &#x1F449; 白名单章节中了解详情 我们的待测应用--Ranorex演示程序 为了更好地演示本用户指南中的概念和方法，我们创建了一个特殊应用程序--Ranorex演示应用程序。它将作为我们的AUT，用于本用户指南的基础和高级章节中的解释和示例。 下载演示程序 在这下载最新版的演示程序 &#x1F449; Ranorex Demo Application在你的系统上解压到任一目录。出于我们教程的目的，我们假设它位于/ Downloads /文件夹中 演示应用程序放在默认目录 提示 在本用户指南的基础和高级章节中，所有可下载的示例解决方案都包含演示应用程序的链接。 启动ATU 在详细规划测试之前，请启动AUT以确保其安装正确且正常工作。 打开保存目录并解压文件 双击打开 打开的Ranore Demo Application 出现演示程序的欢迎界面 录制规划 规划你的录制。它有助于防止繁琐的重组和编辑。 使用录制脚本 想好你需要录制的步骤 准备好必要的录入数据（用户名，密码等） 在没有录制时，至少进行一次手动测试 考虑录制的大小 使录制尽可能的小 更大、模块化的测试用例可以用较小的、可重复使用的录制构建 计划如何录制鼠标移动 默认情况下，不点击鼠标就不会录制鼠标移动。 当在菜单中导航对于测试很重要时，可以使用鼠标单击进行检测，或者在录制器器控制中心中使用录制鼠标移动的选项。 章节预览在 > Ranorex Studio 基础教程 > Ranorex Recorder > &#x1F449; 录制器控制中心&热键章节中详细介绍和解释了UI元素的高级概念 测试定义 根据上述建议，我们已经定义了一个简单的测试，包括五个步骤。这个相同的测试在即将到来的Ranorex Recorder章节中作为一个例子。 打开Ranorex演示程序 在Enter your name区域输入Harry并点击Submit 验证欢迎信息是否相应更改 重置欢迎信息 关闭演示应用程序并停止录制 录制器默认设置 您可以配置一些设置来自定义录制器的动作。默认设置通常适用于大多数录制任务，包括本章中的任务。但是对于某些录制任务，您可能需要更改录制器设置。要访问它们，请单击Recorder工作环境工具栏或Ranorex Studio工具栏中的“设置”。 全局&本地录制器设置 全局录制器设置 本地录制器设置只对当前录制模块生效 章节预览在 > Ranorex Studio 系统详情 > 设置和配置 > &#x1F449; Ranorex录制器设置章节中可以了解录制器设置及其对录制的影响 &#x1F448;介绍                                    录制一个测试&#x1F449; © 2018 ranorex.xyz            updated: 2020-06-18 "},"ranorex-studio-fundamentals/ranorex-recorder/recording-a-test.html":{"url":"ranorex-studio-fundamentals/ranorex-recorder/recording-a-test.html","title":"录制一个测试","keywords":"","body":"[译] 录制一个测试成功录制的步骤录制测试验证测试完成并结束录制结果下载示例解决方案[译] 录制一个测试 在本章中，您将学习如何录制测试并熟悉基础自动化概念。 本章导视 成功录制的步骤 录制测试 验证测试 完成并结束录制 下载示例解决方案 成功录制的步骤 Ranorex Studio支持各种环境，规格和设置。无论您的环境如何，为了使您的首次录制成功，我们建议您执行以下动作： 录制时，只使用鼠标进行导航 避免使用其他输入设备，如图形平板电脑，触摸板，笔等 点击每一步骤 不要使用Tab键浏览表单 关闭其他应用程序 关闭您不需要进行测试的任何其他应用程序或工具 在其他机器上打开用户手册 如果可能，请在另一台计算机或平板电脑上打开用户指南，以便在录制测试时参考 在录制器中点击暂停/继续 要查看用户指南或执行您不想录制的动作，只需单击录制器控制中心中的暂停按钮 将显示缩放设置为100％ 在Windows显示设置中，将所有显示器的显示比例设置为100％ 录制测试 贴士 请记住，如果您不使用白名单，则一旦开始录制，即使未在AUT上执行，也会捕获所有用户交互 点击Pause暂停录制，点击Continue恢复录制 点击Stop终止录制 在 > Ranorex Studio 基础教程 > Ranorex 录制器 > &#x1F449; Ranorex控制中心&热键章节中了解关于录制器控制中心的相关内容 在 > Ranorex Studio 基础教程 > &#x1F449; 白名单章节中了解白名单相关内容 点击Record开始录制，Ranorex Studio自动最小化到任务栏，录制器控制器中心显示录制激活 开始录制 待测应用程序成为焦点 在文本区域，输入Harry并点击Submit 验证测试 我们已经录制了UI交互。现在是时候验证交互是否导致了期望的结果，即欢迎消息是否相应地改变了。 章节预览在 > Ranorex Studio 基础教程 > 测试验证 > &#x1F449; 介绍章节中解释了测试验证的概念 点击Validate，录制暂停并切换到验证模式 激活测试验证 选择要验证的UI元素： 将鼠标悬停在更改的欢迎消息上鼠标移动后会出现紫色框架 紫色框表示当前选择哪个元素进行验证 一旦选择的内容与欢迎消息匹配后，单击它 选择要验证的元素 确认UI元素后，点击Next 选择验证属性： Text和Visible是基于文本的验证的默认验证属性，不需要其他属性 。 确认选择后，点击OK 确认元素和选择的属性 完成并结束录制 完成验证动作后，Ranorex会自动继续录制。下一步是完成并结束测试录制。 点击Reset重置欢迎信息到初始状态 在录制控制中心，点击Stop终止录制 完成并结束录制 结果 录制结束，然后返回“录制器”视图。如果您完全按照说明动作，则应该看到5个录制的动作和4个已识别的UI元素，组织在两个文件夹中，如下所示。 录制器视图中的录制结果 下载示例解决方案 您可以根据本章中的说明构建自己的测试解决方案。或者也可以下载准备好的示例解决方案。 示例解决方案 主题：录制一个测试时间：10min以内下载：点我下载 安装 解压项目目录到你的计算机任一文件夹 使用RanorexStudi打开Introduction.rxsln解决方案 贴士 示例解决方案适用于Ranorex版本8.0或更高版本。你需要将解决方案自动升级同意到8.2及更高版本的。 &#x1F448;你开始录制之前                                 分析录制&#x1F449; © 2018 ranorex.xyz            updated: 2020-06-18 "},"ranorex-studio-fundamentals/ranorex-recorder/analyzing-recordings.html":{"url":"ranorex-studio-fundamentals/ranorex-recorder/analyzing-recordings.html","title":"分析录制","keywords":"","body":"[译] 分析录制录制器的工作环境1. 项目视图2. 模块浏览器3. 动作表4.控件库动作表分析控件库分析动作和控件库项之间的链接下载示例解决方案[译] 分析录制 在本章中，您将了解有关Recorder工作环境的更多信息，并分析示例测试的录制内容。 本章导视 录制器的工作环境 动作表分析 控件库分析 动作和控件库项之间的链接 下载示例解决方案 录制器的工作环境 录制器工作环境有四个区域。 1. 项目视图 项目视图位于左上角，显示在文件夹层次结构中作为测试项目的一部分创建和管理的所有文件。 章节预览在 > Ranorex Studio 基础教程 > Ranorex Studio > &#x1F449; Ranorex Studio起始页章节中介绍了有关内容 2. 模块浏览器 模块浏览器位于左下方，它显示了用于构建测试的所有模块和模块组。 章节预览在 > Ranorex Studio 基础教程 > &#x1F449; 测试套件章节中介绍了有关内容 3. 动作表 您录制的步骤在动作表中显示为动作 它们按照执行顺序列出 在我们的示例中，列表包含5个动作 章节预览在 > Ranorex Studio 基础教程 > &#x1F449; 动作章节中介绍了有关内容 4.控件库 控件库项表示UI元素 受录制期间动作影响的每个UI元素由相应的控件库项引用 在我们的示例中，在两个文件夹中组织了4个UI元素 章节预览在 > Ranorex Studio 基础教程 > &#x1F449; 控件库章节中介绍了有关内容 动作表分析 让我们仔细看看动作表中的5个动作。 示例动作表 鼠标点击动作 该动作表示单击名称文本字段 该动作的最后一列包含对控件库项的引用，该控件库项表示UI元素EnterYourName（即名称文本字段） 键盘序列动作 该动作表示输入文本到名称文本字段 在我们的示例中，Harry是输入，UI元素EnterYourName目标 鼠标点击动作 动作＃4表示单击演示应用程序中的“提交”按钮 提交按钮UI元素在最后一列中由相应的控件库项引用 验证动作 验证动作也表示为一个动作 Ranorex将更改后的欢迎消息中的文本与参考文本进行匹配 鼠标点击动作 该动作表示单击Reset以重置欢迎消息 章节预览在 > Ranorex Studio 基础教程 > &#x1F449; 动作章节中介绍了有关内容 控件库分析 我们的示例包含组织在两个文件夹中的4个控件库项，每个控件库项对应于测试中的应用程序中的UI元素，让我们仔细看看它们。 控件库项#1 -- EnterYourName 该控件库项表示演示程序的名称文本字段 控件库项#2 -- BtnSubmitUserName 该控件库项表示演示程序的Submit 控件库项#3 -- Reset 该控件库项表示演示程序的Reset 控件库项#4 -- LblWelcomeMessage 该控件库项表示演示程序欢迎消息的文本标签 章节预览在 > Ranorex Studio 基础教程 > &#x1F449; 控件库章节中介绍了有关内容 动作和控件库项之间的链接 录制的动作和控件库项目分别进行管理和存储，但它们相互链接。 动作和控件库项之间的链接 动作引用的UI元素 鼠标单击名称文本字段（动作＃1）和输入Harry到名称文本字段（动作＃2）都会影响相同的UI元素。因此，它们都链接到表示此UI元素的EnterYourName（控件库项＃1）的控件。 表示UI元素的控件库项 UI元素表示控件库项 控件库项有个名称（例如：EnterYourName）和在GUI中的路径 章节预览在 > Ranorex Studio 基础教程 > 动作 > &#x1F449; 动作和控件库项目章节和> Ranorex Studio 基础教程 > 控件库 > &#x1F449; 控件库项目和动作章节中对动作和控件库项之间的链接相关内容有说明介绍 视频向导要了解如何手动将UI元素添加到控件库，并将动作添加到未连接到控件库库项目的录制中去，请观看我们的视频—>RanorexStudio Recorder基础知识5：手动添加元素和动作(视频来自Youtube) 下载示例解决方案 你可以下载准备好的示例解决方案。 示例解决方案 主题：分析录制时间：10min以内下载：点我下载 安装 解压项目目录到你的计算机任一文件夹 使用RanorexStudi打开Introduction.rxsln解决方案 贴士 示例解决方案适用于Ranorex版本8.0或更高版本。你需要将解决方案自动升级同意到8.2及更高版本的。 &#x1F448;录制一个测试                               运行和调试录制&#x1F449; © 2018 ranorex.xyz            updated: 2020-06-18 "},"ranorex-studio-fundamentals/ranorex-recorder/run-debug-recordings.html":{"url":"ranorex-studio-fundamentals/ranorex-recorder/run-debug-recordings.html","title":"运行和调试录制","keywords":"","body":"[译] 运行和调试录制开启加速模式运行一个录制模块运行一个测试用例切换测试套件视图执行测试用例全局运行按钮运行选项调试-失败时开启/关闭调试-插入一条日志信息开启/关闭调试模式下载示例解决方案[译] 运行和调试录制 在本章中，您将学习如何运行和调试录制。 目前，我们将专注于以最简单的形式运行测试录制：一个接一个地执行录制的动作。在更大的测试自动化环境中，运行测试意味着基于不同的用户数据，参数和测试场景集执行迭代。我们将在后面的章节中讨论这个问题。 视频向导视频“运行并调试测试”将引导您完成本章中的信息。立即观看(视频来自Youtube) 本章导视 开启加速模式 运行一个录制模块 运行一个测试用例 全局运行按钮 运行选项 调试-失败时开启/关闭 调试-插入一条日志信息 开启/关闭调试模式 下载示例解决方案 视频向导要了解如何运行单个录制，运行测试用例或测试套件，在录制中执行各个步骤，并启用Turbo模式或调试模式，请观看我们的视频⇢RanorexStudio Recorder基础知识4：运行并调试测试(视频来自Youtube) 开启加速模式 默认情况下，Ranorex Studio在动作之间使用预定义延迟来控制它们重放的速度。 您可以通过将此延迟减少到几乎为零来启用Turbo模式以加快重放速度。 在录制模块工具栏中，单击Turbo mode以打开或关闭turbo模式 在Ranorex录制器里的Turbo模式按钮 提示 在激活的录制模块中，Turbo模式将会应用于所有的动作 运行一个录制模块 本节演示如何运行单个录制模块 在录制器视图中，点击RUN 看到开始运行和进度框 运行完成后，将显示测试报告。 贴士 请记住：在测试运行期间请勿触摸鼠标或键盘，否则可能会导致测试失败。 运行一个录制模块 章节预览在 > Ranorex Studio 基础教程 > &#x1F449; 报告章节中详细介绍和解释了测试报告的结构、内容。 运行一个测试用例 运行单个录制模块通常仅在编辑或排除故障时完成。测试一般基于测试套件视图中的测试用例运行。测试套件是模块化和测试用例管理的中心控制点。 章节预览在 > Ranorex Studio 基础教程 > 测试套件 > &#x1F449; 介绍章节中详细介绍和解释了测试套件及其用法。 切换测试套件视图 有两种方法切换测试套件视图 a. 在Studio工具栏上，点击View查看测试套件按钮 b. 或者，点击Introduction.rxtst标签页(rxtst = Ranorex test suite file) 切换测试套件视图 贴士 示例测试套件具有与测试项目相同的名称:Introduction当前测试套件包含一个默认名称TestCase的测试用例测试用例包含安装和拆卸区域测试用例包含一个带有默认名称Recording1的录制模块勾选的复选框意味着测试用例将在测试运行期间执行 执行测试用例 在测试套件视图中，点击RUN，将运行全部测试套件。在我们的示例中，测试套件包含一个测试用例，所以只有这个测试用例被执行。 看到运行开始和进度框 运行一个测试用例 当运行结束，生成报告 测试报告显示运行成功 章节预览在 > Ranorex Studio 基础教程 > 报告> &#x1F449; 介绍章节中详细介绍和解释了测试套件及其用法。 视频向导视频“进度对话框”向您介绍进度对话框提供的实时信息立即观看 全局运行按钮 您不必在测试套件视图中运行或停止测试套件。您还可以单击Studio工具栏中的全局运行和停止按钮。它们总是可见的，不管您当前的视图如何。 Ranorex Studio工具栏上全局运行和停止按钮 运行选项 有时候，您不希望运行整个录制，或者您可能希望控制运行，类似于调试计算机程序，如下所述。 切换到录制器视图 右键一个动作，选择一个选择，解释如下 动作4的上下文菜单 运行选择项 只运行选择的动作 运行到这儿(不包括选择项) 从动作1开始运行到所选的动作，但不包括所选的动作 从这儿运行 在选择的动作处开始运行 从这儿录制(所选之后) 开始录制，并将所录制的动作添加到所选择的动作和下一个动作之间 调试-失败时开启/关闭 当某个动作在测试期间导致异常时，默认动作是测试中止。有时，您可能希望继续运行，这是“失败时继续”选项很有用的地方。 章节预览在 > Ranorex Studio 基础教程 > 动作 > &#x1F449; 管理动作章节中详细介绍和解释了调试选项Continue on fail概念。 调试-插入一条日志信息 当测试变得复杂时，向报表添加特殊的日志消息通常很有帮助。 章节预览在 > Ranorex Studio 基础教程 > 报告 > &#x1F449; Ranorex标准报告章节中详细介绍了有关概念。 开启/关闭调试模式 Ranorex Studio包含一个专门的调试模式，通过在编程代码中设置断点来工作。这是一个专家主题，这就是为什么我们在这里只简单地讨论一下。 Ranorex Studio调试模式 开启/关闭调试模式 调试模式要求Ranorex Studio作为管理员运行。如果不是这样，就会出现在管理员模式下重启的提示。 贴士 调试模式将Ranorex Studio性能降低约30％ 章节预览在 > Ranorex Studio 专家教程 > Ranorex Studio集成开发环境 > &#x1F449; 调试章节中详细介绍了有关概念。 下载示例解决方案 下载我们的示例解决方案，亲自尝试本章中介绍的步骤和选项。 主题：运行和调试录制时间：10min以内下载：点我下载 安装 解压项目目录到你的计算机任一文件夹 使用RanorexStudi打开Introduction.rxsln解决方案 贴士示例解决方案适用于Ranorex版本8.0或更高版本。你需要将解决方案自动升级同意到8.2及更高版本的。 &#x1F448;分析录制                                  管理录制模块&#x1F449; © 2018 ranorex.xyz            updated: 2020-06-18 "},"ranorex-studio-fundamentals/ranorex-recorder/managing-recording-modules.html":{"url":"ranorex-studio-fundamentals/ranorex-recorder/managing-recording-modules.html","title":"管理录制模块","keywords":"","body":"[译] 管理录制模块重命名一个录制模块剪切/复制/粘贴/删除一个模块在文件夹中组织录制模块录制模块中的动作结构添加一个新的录制模块结果使用现有的动作上创建一个新的录制模块结果[译] 管理录制模块 在本章中，您将学习如何在Ranorex Studio中管理和构建录制内容。 本章导视 重命名一个录制模块 剪切/复制/粘贴/删除一个模块 在文件夹中组织录制模块 录制模块中的动作结构 添加一个新的录制模块 使用现有的动作上创建一个新的录制模块 重命名一个录制模块 录制模块的默认名称总是RecordingX.rxrec，其中X为录制模块数。您可以在几个地方更改录制模块的名称。 更改录制模块名称 在项目文件视图中重命名 使用上下文菜单或是按F2 所有关联文件的名称将自动更改 在模块浏览器视图中重命名 使用上下文菜单或是按F2 剪切/复制/粘贴/删除一个模块 使用标准Windows键盘快捷键或上下文菜单在项目视图中剪切，复制，粘贴和删除录制模块。 剪切/复制/粘贴/删除动作元素 在上下文菜单剪切/复制/粘贴/删除 提示 你不能再模块浏览器里剪切/复制/粘贴/删除 在文件夹中组织录制模块 您可以在项目视图中的文件夹中组织录制模块 在项目视图中创建一个新的文件夹 在项目视图中，选择要在其中创建新文件夹的项目 打开上下文菜单 点击Add > New Folder 给文件夹一个有意义的名称（例如：MyRecordings） 将录制模块移到新的文件夹 将录制模块拖到新的文件夹中 结果 项目视图中的录制模块在新的文件夹中 模块浏览器的录制模块在新的文件夹中 录制模块中的动作结构 您可以将分隔符添加到动作表中的可视结构动作中，这纯粹是表面文章，它对动作或执行没有影响。 在两个动作之间添加分隔符 点击Add new action > Separator 分隔符被添加到选中的动作之后 提示 分隔符也将在报告中显示为日志消息 在报告中的分隔符信息 视频向导您可以编辑录像以使其更易于维护和重复使用。了解如何组合键序列，使用添加条目功能替换键序列，通过选择和移动录制的动作创建新模块，将模块添加到测试用例，删除不必要的动作以及清理视频中的控件库⇢RanorexStudio录制基础3：编辑录制(视频来自Youtube) 添加一个新的录制模块 努力使您的录制模块尽可能小。这就是为什么迟早你需要额外的录制模块来保持你良好的测试结构。 添加一个新的录制模块 在Studio的工具栏上，点击Add recording module按钮 选择你要保存模块的文件夹并点击OK 给模块一个有意义的名称，然后点击Create 结果 录制模块将会显示在项目视图和模块浏览器里 在项目视图和模块浏览器里新的录制模块 在项目于视图中新的录制模块 在模块浏览器中新的录制模块 使用现有的动作上创建一个新的录制模块 有时，录制的测试可能包含太多动作。这使得录制难以重用。Ranorex Studio允许您使用移动动作到新的录制模块，将大的录制分割成模块化的、可重用的。 选择要移动到新录制的动作，然后右键单击打开上下文菜单 移动动作到新的录制模块 点击Move to new recording module。如果您有自定义文件夹，也可以选为新模块的目标文件夹 给模块一个有意义的名称， 然后点击Create 结果 使用所选的动作创建新的录制模块。新的模块将会出现在项目视图和模块浏览器中。 移动动作后创建的新录制模块 &#x1F448;运行和调试录制                           录制器控制中心和热键&#x1F449; © 2018 ranorex.xyz            updated: 2020-06-18 "},"ranorex-studio-fundamentals/ranorex-recorder/recorder-hotkeys.html":{"url":"ranorex-studio-fundamentals/ranorex-recorder/recorder-hotkeys.html","title":"录制器控制中心和热键","keywords":"","body":"[译] 录制器控制中心和热键最大/最小化视图标准功能在录制器中添加/删除动作启用/关闭热键验证模式热键鼠标移动热键结果工具提示验证热键基于图像录制的热键更改识别级别初始的识别级别：更改识别级别：[译] 录制器控制中心和热键 在本章中，您将学习如何有效地使用Recorder控制中心和热键。 本章导视 最大/最小化视图 标准功能 在录制器中添加/删除动作 启用/关闭热键 验证模式热键 鼠标移动热键 工具提示验证热键 基于图像录制的热键 更改识别级别 最大/最小化视图 录制器控制中心在最大化和最小化的视图中都可用。通过单击窗口右上角的按钮在它们之间切换。 显示所有控件的完整视图和显示最后四个录制动作的动作表 最小化视图，仅显示底部功能区中的控件 标准功能 录制器控制中心有三个激活的按钮控件 录制器控制中心激活的按钮控件 验证模式 在录制中插入一个测试验证动作 暂停/继续 暂停/继续录制 暂停时候不会录制用户交互 停止 停止录制 返回Ranorex Studio 在录制器中添加/删除动作 在完整视图中，控制中心显示最后四个录制的动作。从那里，你可以删除它们或查看它们各自的截图 列表显示最后四个录制的动作 将鼠标放在眼睛上方以显示动作的屏幕截图 单击垃圾箱以删除动作 您还可以通过单击控制中心右下角的Add来添加三种动作类型中的一种 单击Add直接添加三种动作类型之一。在您执行此动作时录制暂停 可用的动作是消息，屏幕截图和延迟。有关这些功能的更多信息，请参阅 &#x1F449; 动作属性章节内容 您可以在此处配置所选动作。根据动作而变化。 单击此按钮可添加动作并恢复录制 启用/关闭热键 通过将相应的开关设置为打开或关闭来打开和关闭热键 切换到打开和关闭热键 将鼠标悬停在此信息元素上以显示可用的热键 提示 启用热键时，您将无法在录制中使用热键字符（v，m，t，i），例如输入文字。大写字符V，M，T，I可以正常使用 验证模式热键 按键盘上的V激活验证模式，方法与点击验证按钮相同 章节预览在 > Ranorex Studio 基础教程 > &#x1F449; 测试验证章节中详细介绍和解释相关概念 鼠标移动热键 通常，不录制鼠标移动。如果需要录制鼠标移动，可以按M键进动作作。按照以下说明练习录制鼠标移动 录制鼠标移动 将鼠标移到“简介”选项卡上，然后按M键 将鼠标移到名称文本字段上，然后按M键 将鼠标移到“提交”按钮上，然后按M键 将鼠标移到“退出”按钮上，然后按M键 结果 一旦停止录制，动作表将列出四个鼠标移动的动作。每个动作都链接到UI元素。 录制的鼠标移动 工具提示验证热键 按T开始工具提示验证 章节预览在 > Ranorex Studio 基础教程 > 测试验证 > &#x1F449; 验证工具提示章节中详细介绍和解释相关概念 基于图像录制的热键 按I激活基于图像的录制 章节预览在 > Ranorex Studio 高级教程 > &#x1F449; 基于图像的自动化章节中详细介绍和解释相关概念 更改识别级别 激活热键时，鼠标滚轮控制UI元素检测的识别级别。我们来看一个简单的例子吧。 初始的识别级别： Ranorex Recorder在录制期间识别每个UI元素 UI元素识别通过录制期间鼠标移动后的红框可见 红框的UI元素 更改识别级别： 滚动鼠标滚轮以在UI元素级别中移动 滚动鼠标滚轮时，识别级别会发生变化 &#x1F448;管理录制模块 © 2018 ranorex.xyz            updated: 2020-06-18 "},"ranorex-studio-fundamentals/test-suite/":{"url":"ranorex-studio-fundamentals/test-suite/","title":"测试套件","keywords":"","body":"本页说明本页说明 为了可以和官方同步URL，gitbook默认章节的README.md内容暂时不放翻译内容。 待日后放置本章节的实践示例！ 吼吼！加油！！！ © 2018 ranorex.xyz            updated: 2020-06-18 "},"ranorex-studio-fundamentals/test-suite/introduction.html":{"url":"ranorex-studio-fundamentals/test-suite/introduction.html","title":"介绍","keywords":"","body":"[译] 测试套件下载示例解决方案测试套件文件添加一个测试套件测试套件视图[译] 测试套件 测试套件是构建、组织和运行你在Ranorex Studio中测试的地方。测试套件主要由测试用例组成，而测试用例又是由模块构建的。您可以添加智能文件夹来构建您的测试。测试套件也可以配置变量和绑定数据 &#x1F449; 数据驱动测试。您可以在Ranorex Studio或独立的Ranorex测试套件运行器中运行测试套件。 本章导视 下载示例解决方案 测试套件文件 测试套件视图 视频向导视频“Ranorex Studio测试套件简介”将向您介绍本章中的信息。立即观看(视频来自Youtube) 下载示例解决方案 测试套件一章中的解释基于一个示例解决方案。 你可以在下面下载。 示例解决方案 主题：测试套件时间：10min以内下载：点我下载 安装 解压项目目录到你的计算机任一文件夹 使用RanorexStudi打开RxDatabase.rxsln解决方案 贴士示例解决方案适用于Ranorex版本8.0或更高版本。你需要将解决方案自动升级同意到8.2及更高版本的。 测试套件文件 每个测试套件包含在一个特殊的文件的扩展名.rxtst（Ranorex测试套件）。测试套件文件是项目的一部分，你可以在项目视图中找到。一个项目可能包含多个测试套件文件， 在你的硬盘上，测试套件文件存储在相应项目的文件夹中，例如： %USERPROFILE%\\RanorexRanorexStudio Projects\\RxDatabase\\RxDatabase.rxtst 测试套件文件是XML文件，可以在任何XML查看器或编辑器中打开。 注意 在用户指南中，我们将为测试套件本身和.rxtst文件使用术语“测试套件”。当我们只指其中一个的时候，我们会指出来。 项目视图中的测试套件文件 添加一个测试套件 有些项目默认情况下不包含测试套件，或者您可能希望向项目添加多个测试套件，按照下面的说明去做。 在Studio工具栏上，点击Add test suite按钮 如果你的解决方案包含多个项目，选择一个所要添加的项目，点击OK 在下一步对话框，赋予测试套件一个名称 点击Create 章节预览在 > Ranorex Studio 基础教程 > 测试套件 > &#x1F449; 管理多个测试套件一文中介绍和解释了相关概念 测试套件视图 要打开测试套件，双击测试套件文件。出现测试套件视图，这是您在测试套件中工作的地方。 ADD按钮：单击此处可显示要添加到测试套件的下拉列表，例如测试用例或智能文件夹。您还可以通过在测试套件层次结构中右键单击添加项。如果不能在测试套件层次结构的当前级别上添加项，则下拉列表中的项将变为灰色。 RUN按钮：点击此按钮选择的运行配置中运行测试套件 run configuration选择器：在这里您可以选择和管理运行配置(见下文) maintenance mode开关：启用或禁用的维护模式(见下文)。 MANAGE DATA SOURCES按钮：添加和管理测试数据源，Ranorex Studio支持使用一个简单数据表，也支持链接到CVS、Excel、或是SQL数据文件。 测试套件工具栏，具体包括以下内容 剪切/复制/粘贴/删除和取消/重做按钮 数据源按钮打开测试用例或智能文件夹的数据源对话框 搜索框：使用搜索框来定位项目的测试套件 测试套件工作空间，具体包括以下内容 Item列：显示测试套件及其包含的项，在这里构建测试 Data binding/ iterations列：显示应用于相应项的数据绑定和迭代(参见下文) Description列：在这里输入一个项目的可选描述，例如测试用例所涵盖的AUT方面 章节预览在 > Ranorex Studio 基础教程 > 测试套件 > &#x1F449; 管理多个测试套件一文中介绍和解释了相关概念 章节预览在 > Ranorex Studio 高级教程 > &#x1F449; 数据驱动测试一文中介绍和解释了相关概念 章节预览在 > Ranorex Studio 高级教程 > &#x1F449; 维护模式一文中介绍和解释了相关概念                                        测试套件结构&#x1F449; © 2018 ranorex.xyz            updated: 2020-06-18 "},"ranorex-studio-fundamentals/test-suite/test-suite-structure-elements.html":{"url":"ranorex-studio-fundamentals/test-suite/test-suite-structure-elements.html","title":"测试套件结构","keywords":"","body":"[译] 测试套件结构添加测试套件项目测试套件项目测试套件测试用例智能文件夹Setup/teardown区域模块模块组单独添加模块测试套件层次结构[译] 测试套件结构 本章导视 添加测试套件项目 测试套件项目 测试套件层次结构 添加测试套件项目 有三种方法可以将项添加到测试套件中。 a.使用ADD按钮。 b.使用测试套件工作区中的上下文菜单。 c.从模块浏览器拖放,这仅适用于模块和模块组。 提示 您只能在测试套件层次结构允许的情况下将项添加到测试套件中。如果无法在所需位置添加项目，则菜单中的项目将显示为灰色。本章末尾将介绍测试套件层次结构。 测试套件项目 在本节中，您将了解构成测试套件的项目。测试套件项可以分为两组，即结构项 和 测试动作项目。 结构项构成了测试的框架。 测试动作项包含测试期间要执行的动作。 测试套件 test suit测试套件项用作根结构项。它包含所有其他项目，无法剪切，复制，粘贴或删除。它可以只包含其他结构项，如直接子项，即没有模块或模块组。 您可以在测试套件项中配置测试套件的全局参数和报告设置。通过菜单访问这些。 测试用例 test case是一个结构化项目。 每个测试用例代表 测试套件的主要功能，例如向数据库添加条目。通过使用模块和模块组填充测试用例来构建测试用例。您还可以添加smart folder以测试案例以进一步组织它们。测试用例不能包含其他测试用例。 您可以通过其上下文菜单配置测试用例的错误行为，数据绑定和条件。 测试用例是测试报告成功计数器中计算的唯一项目 。 智能文件夹 smart folder像在文件夹层次结构中一样。您可以使用模块和模块组填充智智能文件夹是结构化项目。使用智能文件夹来组织测试套件，就能文件夹，但前提是智能文件夹是测试用例的子项。 您可以通过其上下文菜单配置智能文件夹的错误行为，数据绑定和条件。 Setup/teardown区域 Setup和teardown区域是结构化项目。您可以将其中一个添加到测试套件项，测试用例和智能文件夹中。在设置区域将始终放置在开始的项目和的拆卸区域在年底。 要添加设Setup或teardown的区域： 右键单击所需的项目。 单击添加Setup或添加teardown。 添加Setup和teardown区域 Setup区域始终在直接父项中的任何其他项之前执行。使用所需的模块和模块组填充设置区域，以使AUT达到运行以下模块所需的状态，例如启动AUT并登录。 teardown区域始终在其他所有区域之后执行，或者在直接父项目中发生错误时执行 。使用在测试运行后清理AUT所需的模块和模块组填充teardown区域，例如删除所有输入的数据并关闭AUT。 模块 模块是测试数据项。它们包含在测试期间执行的动作。您可以将模块添加到除测试套件项目之外的所有结构项目以及不是测试用例子项的智能文件夹。 有两种类型的模块： 录制和代码模块 1.录制模块 包含你用Ranorex Recoder所录制或者添加的动作和他的动作表 2.代码模块 包含在代码中的编程动作。 您可以通过其上下文菜单为模块配置数据绑定。您也可以将几个模块创建模块组，说明如下。 提示 将模块添加到测试套件时，只需添加对它的引用。同样，当您从测试套件中删除模块时，您只删除该引用而不删除模块本身。 模块组 模块组是测试数据项。使用它们对逻辑上属于一起的模块进行分组，例如通常一起出现的数据验证。您可以将模块组添加到除测试套件项目之外的所有结构项目以及不是测试用例子项的智能文件夹。 所有模块组都存储在单独的文件中。您可以在项目视图中的项目下找到此文件。默认情况下，它的命名为：[Project name].rxtmg 模块组文件 添加模块组有两种方法： 直接分组 在测试套件视图中，选择要分组的一个或多个模块。 右键单击其中一个，然后单击“Group selected modules”。 新创建的模块组将在模块组视图中打开。 将打开模块组视图，并选择新模块组。新模块组也出现在模块浏览器中。 使用直接分组创建模块组 单独添加模块 在测试套件视图中，右键单击结构项以包含新模块组。 单击add>new module group。将打开模块组视图，并选择新模块组。 3.从模块浏览器中拖放所需的模块至 模块组。 新模块组出现在模块浏览器中。您可以重命名模块组，并组织他们在文件夹中的模块组视图。 提示 将模块组添加到测试套件时，只需添加对它的引用。同样，当您从测试套件中删除模块组时，您只删除该引用而不删除模块组本身。 测试套件层次结构 测试套件项目按层次结构组织。此层次结构控制可以添加或移动项目的位置，如下所示： 测试套件层次结构 提示 测试用例永远不会是另一个测试用例的子项。 当您将测试用例移动到另一个测试用例时，Ranorex会自动将其转换为智能文件夹。 智能文件夹只有在它是测试用例的子项时才能包含模块或模块组。 &#x1F448;介绍                                    建立一个测试&#x1F449; © 2018 ranorex.xyz            updated: 2020-06-18 "},"ranorex-studio-fundamentals/test-suite/build-a-test.html":{"url":"ranorex-studio-fundamentals/test-suite/build-a-test.html","title":"建立一个测试","keywords":"","body":"[译] 建立一个测试下载示例解决方案定义测试查看录制模块组装测试添加Setup区域添加数据库测试创建模块组添加智能文件夹运行测试[译] 建立一个测试 在本章中，您将在前面的章节中应用您对测试套件的了解。为此，您将使用各种测试套件项构建一个简单的测试。 本章导视 下载示例解决方案 定义测试 查看录制模块 组装测试 运行测试 视频向导“手动构建Ranorex Studio测试套件”将引导您完成本章中的信息。立即观看 下载示例解决方案 要继续学习本教程，请从以下链接下载示例解决方案文件。 示例解决方案 主题：分析录制时间：10min以内下载：点我下载 安装示例解决方案： 解压缩到计算机上的任何文件夹。 启动 Ranorex Studio并打开解决方案文件RxDatabase.rxsln 贴士 样本解决方案适用于Ranorex 8.0或更高版本。您必须同意8.2及更高版本的自动解决方案升级。 定义测试 在我们开始构建测试之前，我们需要定义它的功能。我们保持简单，所以我们的测试只会在数据库中添加一个条目，然后验证它是否已被添加。我们的AUT将是Ranorex演示应用程序。所需的步骤是： 启动Ranorex演示应用程序。 单击test database选项卡。 在First name字段中输入名字。 在Last name字段中输入姓氏。 从Department拉列表中选择部门。 在Age字段中输入年龄。 从Gender框中选择性别。 单击Add Entry。 验证Number of entries已从0更改为1。 退出Ranorex演示应用程序。 动画测试定义 查看录制模块 我们的示例解决方案已包含所需的录制模块。我们来看看他们。 这些模块分为两个文件夹。应用功能文件夹包含控制应用程序本身，即进入和离开Ranorex演示应用程序所需要的模块。数据库的功能文件夹包含有关添加到数据库中的条目的模块。 这些文件夹中的模块非常具体，您可以从名称中看到。它们每个都只包含测试定义中单个步骤所需的动作。以这种方式构建的模块更易于重用。这使您在构建测试时具有更大的灵活性。 组装测试 我们已经拥有了我们需要的一切，所以让我们开展业务并开始构建我们的测试。我们的项目中有一个测试套件RxDatabase.rxtst。它应该已经开放了。如果不是，只需在项目视图中双击该文件即可。 添加Setup区域 在测试套件视图中，您将看到测试套件基本上是空的，除了具有默认名称的单个测试用例。我们的测试定义列出了将AUT作为第一步的启动，这就是我们首先要添加的内容。启动AUT是包含在全局设置区域中的模块的完美示例，因为没有它，没有其他测试步骤可以工作。要添加全局设置区域： 在测试套件视图中，右键单击测试套件，然后单击“Add setup”。 使用上下文菜单添加设置区域 从模块浏览器中，将模块StartAUT 拖到设置区域。除了启动演示应用程序之外，StartAUT模块还单击Test数据库选项卡，这是我们的测试定义中的第2步。 添加数据库测试 测试定义中的步骤3到9表示向数据库添加条目并验证它。这是我们测试的核心，因此它应该有自己的测试用例。我们可以使用现有的测试用例，但我们首先给它一个更有意义的名称。 要重命名它： 单击Test case，然后按F2。 将其重命名为SimpleDatabaseTest，然后按 Enter键。 重命名测试用例 现在我们可以用所需的模块填充测试用例。这些是测试定义顺序：InsertName，SelectDepartment，InsertAge，SelectGender，AddEntry和 ValidateEntries。您可以按照自己喜欢的顺序添加前四个模块，但AddEntry必须是倒数第二个，而ValidateEntries 必须是最后一个。 要添加模块： 从模块浏览器中，将模块拖到测试用例中。 您可以单独添加它们，也可以使用Ctrl + Click 一次选择多个模块。 如果您在测试套件视图中放置了一个模块，只需将其拖动到正确的位置即可。 创建模块组 模块InsertName，InsertAge，SelectGender和SelectDepartment都是同一过程的一部分：定义将添加到数据库的数据，换句话说，插入一个人。这就是为什么在模块组中组织它们是有意义的。这样，当您创建需要此过程的更多测试用例时，您不必反复添加所有四个模块。要将模块添加到模块组： 在测试套件视图中，使用Ctrl +单击或Shift +单击选择四个模块。 右键单击模块; 然后单击“ 组选定的模块”。 新创建的模块组将在模块组视图中打开。 使用直接分组创建模块组 将模块组重命名为InsertPerson并关闭它。 测试用例现在包含模块组InsertPerson，模块组也出现在模块浏览器中以供重用。 添加智能文件夹 随着测试变得越来越大，越来越复杂，管理测试套件变得很困难。智能文件夹是一个有用的结构项，可以解决此问题。而不是使用50个模块填充测试用例，这些模块在逻辑上属于同一个测试，将智能文件夹添加到测试用例并组织其中的模块。智能文件夹还可以在测试执行期间轻松排除测试用例的特定部分。这正是我们将在我们的示例中使用智能文件夹的内容。我们可能并不总是希望执行验证，因此它将获得自己的智能文件夹。要将ValidateEntries添加到智能文件夹： 右键单击测试用例SimpleDatabaseTest，然后单击添加>New smart folder。 添加智能文件夹 将ValidateEntries拖动到新的智能文件夹。 使用录制模块填充智能文件夹 将智能文件夹重命名为Validation。 贴士 在Ranorex Studio基础知识>测试套件>&#x1F449;执行测试套件中解释了从测试运行中排除项目。 添加teardown区域 我们的测试几乎完成了。我们只需要添加最后一步，退出Ranorex演示应用程序。这是应该在全局teardown区域中的步骤的完美示例，因为在此之后，没有其他测试动作可以执行。系统恢复到测试前的状态。通常，这还包括删除所有条目，但我们的数据库在退出时不保存任何条目，因此我们不需要包含此操作。要添加teardown区域： 在测试套件视图中，右键单击测试套件，然后单击“添加teardown”。 添加teardown区域 从模块浏览器中,将模块ExitAUT拖动到teardown区域。 运行测试 恭喜，您刚刚在测试套件中构建了一个测试。您可以将本教程的基本原则应用于您将创建的任何其他测试。 这是您运行 测试的关键。我们将在下一章中介绍运行测试的详细信息和高级选项。现在，只需按下测试套件视图中的大RUN按钮，即可享受数据库测试！ 贴士 Ranorex Studio基础知识>测试套件>&#x1F449;执行测试套件详细介绍了运行测试。 &#x1F448;测试套件结构                                执行测试套件&#x1F449; © 2018 ranorex.xyz            updated: 2020-06-18 "},"ranorex-studio-fundamentals/test-suite/running-tests.html":{"url":"ranorex-studio-fundamentals/test-suite/running-tests.html","title":"执行测试套件","keywords":"","body":"[译] 执行测试套件下载示例解决方案安装：管理运行配置结果禁用/启用测试套件项目配置运行迭代结果：配置自动重试配置报告级别配置错误行为继续迭代继续兄弟继续父母停止Setup/teardown区域的错误行为测试套件视图运行测试结果：Ranorex Test Suite Runner[译] 执行测试套件 在本章中，您将了解控制测试运行和在测试套件视图中执行测试的各种选项。 本章导视 下载示例解决方案 管理运行配置 禁用/启用测试套件项目 配置运行迭代 配置自动重试 配置报告级别 配置错误行为 从测试套件视图运行测试 Ranorex Test Suite Runner 视频向导视频“测试套件执行选项”将引导您完成本章中的信息。立即观看 下载示例解决方案 本章中的解释基于示例解决方案。你可以在下面下载。 示例解决方案主题：测试套件运行时间：不到10分钟下载示例文件 安装： 解压缩到计算机上的任何文件夹。 启动 Ranorex Studio并打开解决方案文件RxDatabase.rxsln 贴士 样本解决方案适用于Ranorex 8.0或更高版本。您必须同意8.2及更高版本的自动解决方案升级。 管理运行配置 您可以在测试运行中包含和排除测试用例和智能文件夹。为此，只需在测试套件中选中或取消选中它们即可。 要包含/排除的复选框 来执行测试 已检查/未检查的测试用例和智能文件夹的当前状态称为运行配置。您可以保存运行配置以便重复使用，并使用测试套件视图中的下拉菜单在它们之间切换。 管理运行配置 单击运行配置下拉菜单。 单击Manage run configurations... 添加新的运行配置 单击Add。 给新的运行配置一个有意义的名字。 单击OK。 结果 可以从下拉菜单中选择运行配置。 不同的运行配置 TestRun配置包括所有测试套件元素 TestWithoutValidation配置不包括验证智能文件夹 禁用/启用测试套件项目 与包含/排除测试用例和智能文件夹类似，您还可以启用和禁用录制模块，代码模块，模块组和Setup和teardown地区。在测试运行期间不执行禁用的项目。 禁用录制模块 右键单击要禁用的项目。 单击禁用,该项目将显示为灰色。 贴士 禁用模块组会禁用此模块组中的所有模块。 禁用Setup/teardown区域将禁用其中的所有项目。 配置运行迭代 默认情况下，测试用例和智能文件夹在测试执行期间运行一次。但是，您可能希望多次运行它们。您可以通过运行迭代来完成此动作。 配置运行迭代 选择测试用例或智能文件夹后，按F4。 该属性垫出现在测试套件的权利。 在迭代计数旁边，设置所需的迭代次数。 迭代次数的属性。 结果： 迭代次数显示在测试套件项旁边。 在我们的示例中，测试用例重复5次。 配置自动重试 在UI测试中，有时会发生错误，因为测试中的应用程序没有响应。在这些情况下，一种解决方案是简单地重新运行部分测试。您可以使用自动重试执行此动作。具有自动重试计数的测试用例或智能文件夹将重新运行，直到它们成功 或 所有重试都已用完为止。 配置自动重试 选择所需的测试用例或智能文件夹。 按F4。该属性垫出现在测试套件的权利。 在Retry count旁边，设置所需的重试次数。 1.在属性中重试计数。 贴士 如果存在数据绑定或运行迭代，则重试将从失败点开始。例如，如果失败发生在5的迭代3，那就是重试开始的地方只有在每次重试失败的测试用例或智能文件夹才会在报告中标记为失败。 配置报告级别 您还可以在测试套件中设置测试用例和智能文件夹的报告级别。通过报告级别，您可以控制 报告中显示的信息及其显示位置。这对于包含许多测试用例和智能文件夹的复杂测试尤其有用，可以保持报表的结构化。 章节预览报告级别超出了本章的范围。他们的相关内容在Ranorex Studio基础知识>报告>&#x1F449;报告等级。 配置错误行为 错误是测试的一部分。这就是为什么告诉Ranorex在发生错误时该怎么做很重要。您可以通过在测试套件中配置测试用例和智能文件夹的错误行为来实现。 错误行为在测试用例或智能文件夹的上下文菜单中设置。有四种不同的类型，如下所述。 错误行为的规范 贴士 默认错误行为是Continue with sibling。 继续迭代 错误行为：继续迭代 继续迭代 测试运行将继续智能文件夹验证的下一次迭代。 继续兄弟 错误行为：继续兄弟 继续兄弟 测试测试运行将继续下一个兄弟测试用例或智能文件夹。在我们的例子中，这是智能文件夹 DatabaseCleanUp。 继续父母 错误行为：继续父级 停止 选择Stop错误行为时，错误会立即停止整个测试运行。 Setup/teardown区域的错误行为 设置和拆卸区域遵循特殊的固定错误行为。 Setup区域中的错误会立即停止测试。 如果模块在teardown区域中出现故障，则运行下一个模块。 测试套件视图运行测试 运行测试 单击Run。 观看 Ranorex Studio执行测试。 在测试期间观察进度信息。 贴士 单击RUN后，请勿使用键盘或鼠标。这样做会干扰测试动作并导致测试失败。 结果： 一旦测试 跑 完成后，报告出现了。 章节预览Ranorex Studio基础知识>报告>&#x1F449;简介中描述了报告 。 Ranorex Test Suite Runner Test Suite Runner是一个独立的程序，可以在没有Ranorex Studio的情况下执行测试套件。当你打开双击Windows中的测试套件文件时，它会自动执行。 您可以使用Ranorex Test Suite Runner来执行整个测试套件，运行某些测试用例和智能文件夹，或者只运行特定模块。 此外，您还可以创建新的运行 配置 与Ranorex Studio相同。 但是，您无法对测试套件本身进行更改。 在Windows中，双击测试套件文件。该文件将在Test Suite Runner中打开。 单击Run。 1.独立测试套件运行器 2.当前加载的测试套件 &#x1F448;建立一个测试                              管理多个测试套件&#x1F449; © 2018 ranorex.xyz            updated: 2020-06-18 "},"ranorex-studio-fundamentals/test-suite/multiple-testsuites.html":{"url":"ranorex-studio-fundamentals/test-suite/multiple-testsuites.html","title":"管理多个测试套件","keywords":"","body":"[译] 管理多个测试套件创建一个新的测试套件结果：剪切/复制/粘贴/删除/移动多个测试套件设置测试序列管理测试序列文件和参数测试序列文件测试序列文件内容和语法添加命令行参数多个测试套件 - 功能列表传输测试套件内容数据的完整性TestRail集成Ranorex远程[译] 管理多个测试套件 本章导视 创建一个新的测试套件 剪切/复制/粘贴/删除/移动多个测试套件 设置测试序列 管理测试序列文件和参数 多个测试套件——功能列表 视频向导视频“管理多个测试套件”将引导您完成本章中的信息。立即观看 创建一个新的测试套件 要将测试套件添加到现有项目，请按照以下说明动作： 添加新的测试套件 在Studio工具栏中，单击“添加测试套件”按钮。 在出现的对话框中，确认该测试套件被选为模板。 命名测试套件。 点击Create。 结果： 新的测试套件出现在项目视图中。通常，它也会在测试套件视图中自动打开。 新增测试套件 项目视图中的初始测试套件。 项目视图中的新加入的测试套件。 该测试套件选项卡的Ranorex工作室工具栏的下方。 新的测试套件文件也会出现在测试解决方案的Ranorex Studio Projects文件夹中。 Ranorex Studio Projects文件夹中的测试套件文件 剪切/复制/粘贴/删除/移动多个测试套件 为确保项目的完整性，您无法剪切，复制或粘贴整个测试套件。但是，您可以删除并重命名测试套件。在项目视图中选择一个测试套件，然后打开上下文菜单以使用删除和重命名选项： 测试套件上下文菜单 剪切，复制，粘贴 无法剪切，复制或粘贴整个测试套件 。 同样，您无法将 整个测试套件移动到另一个项目。 删除，重命名 可以删除测试套件。 测试套件可以重命名。 贴士虽然您无法移动整个测试套件，但您可以在测试套件之间移动测试套件内容。只需剪切/复制并粘贴所需的测试用例，智能文件夹，模块等。 设置测试序列 一旦项目包含至少两个测试套件，您就可以为测试套件指定序列。 如果您的项目包含至少两个测试套件，则会在RUN按钮中添加一个上下文菜单。单击它以打开测试序列配置对话框。 多个测试套件 - 测试序列配置 启动项目选择 如果您有多个具有多个测试套件的项目，请选择要在此处配置的项目。 默认情况下，预先选择当前测试项目。 使用左侧的顺序按钮 更改测试序列中测试套件的位置。 使用ON / OFF按钮从测试运行中排除选定的测试套件。 选择每个测试套件的运行配置。 章节预览Ranorex Studio基础知识>测试套件>&#x1F449;执行测试套件中描述了运行配置。 单击“Run”按钮以启动指定的测试序列。 管理测试序列文件和参数 本节介绍存储测试序列的配置文件，并介绍如何将测试套件运行参数添加到此文件。 测试序列文件 当项目包含至少两个测试套件时，将自动创建包含所有配置信息的测试序列文件，并将其添加到项目文件夹中。 测试序列文件存储位置 项目视图中的测试序列文件 项目文件夹中的测试序列文件 贴士 以.rxsqc为后缀的测试序列，可以使用任何文本编辑器进行编辑。 测试序列文件内容和语法 测试序列文件内容 要打开测试序列文件，请双击它。它出现在自己的标签中。 1.文本内容测试序列文件： [ ] 附上测试序列文件 { } 包含一个测试套件的所有配置 多个测试套件由' , '（JSON格式化语法）分隔 配置参数遵循语法 \"\":\"\" 多个参数由\" , \"分隔 贴士 您可以在测试序列文件打开时在配置对话框中配置测试序列。更改将实时反映在文件中。插入的命令行参数将保持不变。 添加命令行参数 命令行参数可以添加到测试序列文件中，并在测试运行期间执行。 测试序列文件中的命令行参数 示例命令行参数 /testcase 命令行参数遵循先前引入的JSON语法定义 两个或多个参数必须用' , '分隔 上面的示例/testcase使用名为InsertName参数值的测试用例调用命令行参数 章节预览Ranorex Studio基础专家>运行时和远程执行>&#x1F449;[在没有Ranorex Studio的情况下运行测试][1]，解释了测试套件的命令行参数。 暗示 虽然运行时环境中的命令行参数需要文件后缀（即.rxtst）文件参数，但这些后缀将在测试序列文件中被丢弃。 多个测试套件 - 功能列表 本节介绍Ranorex Studio 中多个测试套件的主要功能。它列出了通过多个测试套件可以做什么和不可以做什么。 传输测试套件内容 可以将一个测试套件的内容传输（复制，移动）到同一项目或另一个项目的任何其他测试套件中。这意味着可以轻松地将测试用例，智能文件夹，Setup和teardown区域，模块等从一个测试套件复制或移动到另一个测试套件。 数据的完整性 将测试套件内容复制或移动到另一个测试套件时，关于变量和数据绑定的数据完整性将保持不变。没有数据绑定丢失。 注意 如果满足以下任一条件，数据绑定将保持不变： data绑定到全局参数，这些参数也可在目标测试套件中使用 复制完整的数据环境。如果数据绑定到未复制的父测试用例或父智能文件夹，则数据绑定将丢失！ TestRail集成 TestRail还可以为每个项目导出/同步多个测试套件。 章节预览在接口和连接> TestRail集成> &#x1F449;简介中描述了与Ranorex的 TestRail集成。 Ranorex远程 测试序列也可以从远程控制器上运行Ranorex代理。 章节预览Ranorex Studio高级> Ranorex远程>&#x1F449;简介中介绍了Ranorex远程 &#x1F448;执行测试套件 © 2018 ranorex.xyz            updated: 2020-06-18 "},"ranorex-studio-fundamentals/actions/":{"url":"ranorex-studio-fundamentals/actions/","title":"动作","keywords":"","body":"本页说明本页说明 为了可以和官方同步URL，gitbook默认章节的README.md内容暂时不放翻译内容。 待日后放置本章节的实践示例！ 吼吼！加油！！！ © 2018 ranorex.xyz            updated: 2020-06-18 "},"ranorex-studio-fundamentals/actions/introduction.html":{"url":"ranorex-studio-fundamentals/actions/introduction.html","title":"介绍","keywords":"","body":"[译] 动作基本动作智能动作动作表中的动作[译] 动作 动作是由模块执行的单个活动。在Ranorex中，有两种动作：基本动作和智能动作。基本动作表示直接用户输入，例如鼠标单击。智能动作代表更复杂的输入或特殊功能，例如运行浏览器或执行验证。大多数动作都在控件库项目上执行。动作在“录制器”视图的动作表中进行管理。 本章导视 基本动作 智能动作 动作表中的动作 视频向导视频“动作简介”将引导您完成本章中的内容。立即观看（视频来自Youtube） 基本动作 基本动作表示在设备上或在设备上的直接用户输入，例如鼠标点击或键盘输入。在录制期间执行这些动作时会自动录制这些动作，但也可以在动作表中手动添加。下表列出了每个基本动作的名称。有关每个基本动作的更多详细信息&#x1F449;动作属性。请参阅以下页面： Mouse 鼠标 Mouse wheel 鼠标滚轮 Touch 触摸 Swipe gesture 滑动手势 Key shortcut 关键捷径 Key sequence 键序列 Mobile key press 移动按键 智能动作 智能动作代表更复杂的UI交互和功能。例如，“Run”应用程序动作直接从特定路径运行可执行文件，而不需要通过鼠标单击或键盘交互来执行此动作。在录制期间，除验证动作外，这些动作都不可用。有关每个智能动作的更多详细信息&#x1F449;动作属性，请参阅以下页面： Validation 验证 Invoke action 调用动作 Get value 获取值 Set value 设定值 Open browser 打开浏览器 Run application 运行应用程序 Run mobile application 运行移动应用程序 Deploy Android app 部署Android应用 Deploy iOS app 部署iOS应用程序 Set device orientation 设置设备方向 Close application 关闭应用程序 Wait for 等待 Log message 记录消息 Capture screenshot 捕获截图 Create snapshot 创建快照 Separator 分隔器 Delay 延迟 User code 用户代码 动作表中的动作 动作在“录制器”视图的动作表中进行管理。 Ranorex Studio动作表 注意 动作总是按时间顺序列出，即动作＃4在动作＃5之前执行。                                      动作和控件库项目&#x1F449; © 2018 ranorex.xyz            updated: 2020-06-18 "},"ranorex-studio-fundamentals/actions/actions-repository-items.html":{"url":"ranorex-studio-fundamentals/actions/actions-repository-items.html","title":"动作和控件库项","keywords":"","body":"[译]动作和控件库项目动作和动作表UI元素和控件库项动作和控件库项目[译]动作和控件库项目 本章导视 动作和动作表 UI元素和控件库项 动作和控件库项目 动作和动作表 动作在录制器视图中的录制模块的动作表中进行管理。 Ranorex Studio中录制器视图的动作列表中的动作 UI元素和控件库项 控件库项是UI元素的表示。Ranorex使用控件库项来存储UI的结构并访问它。这样，Ranorex就可以对控件库项执行动作，从而对UI元素执行动作。控件库项目与“录制器”视图中控件库中的动作分开存储和管理。控件库以类似文件夹的层次结构组织。 例如，查看Ranorex演示应用程序的欢迎屏幕。每个UI元素由控件库项表示。请注意如何在控件库中组织项目。 UI元素和控件库项 章节预览控件库的描述在>Ranorex Studio基础>&#x1F449;控件库 动作和控件库项目 控件库项本身不做任何事情。只有当它们与动作相关联时才能实现其功能。虽然有一些动作无法链接到控件库项目，例如“Run”应用程序动作，但大多数动作可以并且在大多数情况下应该链接到控件库项目。试想一下，你有一个键序列，这不是链接到库项目，按键顺序总是在任何字段中输入成为关注焦点的时刻动作。这会使您的测试不可靠。 每一个动作告诉Ranorex做什么; 控件库项目告诉它在UI中的位置。 下图说明了鼠标单击动作和表示按钮的控件库项之间的链接。 动作和控件库项之间的链接 动作 动作＃4是鼠标单击UI元素，即Submit按钮。 此动作需要指向表示此按钮的控件库项的链接。 控件库项目 控件库项BtnSubmitUserName表示UI元素，即Submit按钮。 每当对此按钮执行动作时，都会调用此控件库项。 在动作和控件库项之间建立连接 动作和UI元素之间的链接是通过相应的控件库项建立的。 这在动作的第6列中指示，其中引用了控件库项。 &#x1F448;介绍                                      管理动作&#x1F449; © 2018 ranorex.xyz            updated: 2020-06-18 "},"ranorex-studio-fundamentals/actions/managing-actions.html":{"url":"ranorex-studio-fundamentals/actions/managing-actions.html","title":"管理动作","keywords":"","body":"[译] 管理动作添加新动作从菜单添加动作配置动作行动组件动作截图上下文菜单设置单动作设置多动作设置属性标准属性[译] 管理动作 在本章中，您将学习手动添加动作，配置动作和管理动作。 本章导视 添加新动作 配置动作 动作组件 上下文菜单设置 属性 视频向导视频“管理动作”将引导您完成本章中的内容。立即观看 添加新动作 录制期间会自动生成许多动作。但是，必须手动添加某些动作。手动添加动作有两种方法：使用菜单选项或将控件库项拖放到动作表。 从菜单添加动作 添加新动作 - 菜单 在动作表工具栏中添加新的动作菜单。 在动作表上下文菜单中添加新的动作菜单选项。 将控件库项拖放到actions表 选择一个库项目，并移动至在动作表。 这将打开上下文菜单，其中包含此控件库项的所有可能动作，单击所需的动作。 注意 新动作将自动链接到控件库项目。 配置动作 动作表是您配置动作的位置。您可以通过动作的组件、上下文菜单及其属性（其中一些重叠）输入不同的设置。 行动组件 动作表包含七个不同的列。这些列表示动作的五个不同组件。某些动作组件较少，其他组件更多。组件分组如下： 行动组件 动作符号和序列号 每个动作都有自己的符号。 序列号告诉您执行动作的顺序。 动作类型 动作类型指示动作执行的动作或动作的UI设备的哪个部分。 动作细节 列3-5的内容根据动作类型而变化。 它们详细定义了动作的作用：例如，键序列的确切文本字符串或鼠标单击的类型。 控件库项目 执行动作的控件库项目，即动作的目标。 控件库项表示AUT中的UI元素。 控件库项目与动作分开管理，但它们彼此链接。 章节预览Ranorex Studio基础>&#x1F449;控件库中引入了控件库和控件库项。 备注 您可以在此处添加注释以记录动作的作用。这对动作本身没有影响。 动作截图 当您使用Ranorex Recorder录制针对UI元素的动作时，将保存动作的屏幕截图。您可以在动作表旁边查看此屏幕截图。单击屏幕截图以查看或隐藏它。 打开/关闭屏幕截图 上下文菜单设置 动作的上下文菜单可让您快速访问多个设置，其中一些设置仅适用于某些动作。您还可以一次选择多个动作以将上下文菜单设置应用于它们。选择多个动作时，可以使用不同的设置。 上下文菜单包含所有可用选项 贴士 前四项称为运行选项。它们在Ranorex Studio基础> Ranorex 录制器>&#x1F449;运行和调试录制中进行了解释。 单动作设置 Highlight element：突出显示AUT中的链接控件库项。AUT必须正在运行。仅适用于链接到控件库项目的动作。 Add new action：在当前动作后添加新动作。 Make repository item variable…：使链接的控件库项成为变量。仅适用于链接到控件库项目的动作。 Set search timeout…：定义Ranorex在动作失败之前尝试查找链接控件库项的时间。仅适用于链接到控件库项目的动作。 Enable/Disable continue on fail：设置Ranorex是否将进入下一个动作，或者如果此测试失败，则中止测试。默认设置已禁用。如果启用此选项，受影响的动作将在动作表中以斜体显示。 Enable/Disable：设置在测试执行期间是运行还是跳过动作。默认设置已启用。已禁用的动作在动作表中显示为灰色。 View code：在代码编辑器中显示动作的基础代码。对专家配置和&#x1F449;用户代码动作很有用。 Convert to user code：将动作转换为&#x1F449;用户代码动作。 Move to new recording module：创建包含所选动作的新录制模块。 Cut/Copy/Paste/Delete：剪切，复制，粘贴或删除所选动作。 Properties：打开动作的属性，本章稍后将对此进行说明。 多动作设置 多动作设置的上下文菜单 将项目合并到用户代码项：将动作代码合并为单个&#x1F449;用户代码动作。用于组合高级方案的多个动作。 合并选定的键盘项：当两个或多个键序列动作或键快捷键动作链接到同一控件库项时，您可以将键按下组合为单个动作以合并它们，这对于组合无意中分成几个动作的键盘输入很有用。 属性 动作属性是用于控制动作的各种选项。有两组动作属性：标准属性和特定于动作的属性。标准属性定义适用于大多数动作类型的动作，如下所述。特定于动作的属性定义仅适用于特定动作类型的动作。 贴士 在Ranorex Studio基础>动作> &#x1F449;动作属性中描述了特定于动作的属性及其相关动作。 有两种方法可以访问动作的属性： a.右键单击某个动作，然后单击“Properties”。 b.单击一个动作，然后按 F4。 这些也适用于多个动作。然后，属性面板将显示所选动作之间共享的所有属性。 访问动作属性的一种方法 标准属性 在这里，您可以找到所有标准属性的列表以及有关它们的详细信息。可以为几乎所有动作类型配置它们。默认值以粗体显示。 标准动作属性 备注 可能的值：空或文本。 添加备注。也可以直接在动作表中设置。 适用于除分隔符动作之外的所有动作 失败后继续 可能的值：false或true 如果设置为false，则此动作失败时测试执行将停止。 如果设置为true，则当此动作失败时，测试执行将继续执行下一个动作。 持续时间 可能的值：以毫秒为单位的时间（默认值因动作而异） 定义的动作持续时间 适用于除报告和分隔符动作之外的所有动作 启用 可能的值：true或false 启用或禁用动作。您也可以选择一个动作，然后按 Ctrl + E 启用或禁用它。 控件库项目 可能的值：对控件库项的引用 动作链接到的控件库项。 适用于可以链接到控件库项目的所有动作。 使用日志记录 可能的值：Default，true或false 设置是否将动作记录到报告中。 设置为“默认”时，此值将从“使用”项目记录中继承默认设置&#x1F449;记录默认，它是默认启用的。因此，默认情况下会记录所有动作。 可用于除Separator动作之外的所有动作，该动作始终记录。 &#x1F448;动作和控件库项                                 动作属性&#x1F449; © 2018 ranorex.xyz            updated: 2020-06-18 "},"ranorex-studio-fundamentals/actions/action-properties.html":{"url":"ranorex-studio-fundamentals/actions/action-properties.html","title":"动作属性","keywords":"","body":"[译]详细的动作列表鼠标描述组件按键动作点特定于动作的属性鼠标滚轮描述组件触摸描述组件特定于动作的属性滑动手势描述组件特定于动作的属性快捷键描述组件特定于动作的属性键序列描述组件特定于动作的属性移动按键描述组件特定于动作的属性验证描述共享验证属性验证类型和特殊属性调用动作描述组件获取值描述组件设定值描述组件特定于动作的属性打开浏览器描述组件特定于动作的属性运行应用程序描述组件运行移动应用描述组件部署Android应用描述组件特定于动作的属性部署iOS应用程序描述组件特定于动作的属性设置设备方向描述组件关闭申请描述组件等待描述记录消息描述组件特定于动作的属性分隔器描述延迟描述用户代码描述[译]详细的动作列表 在本章中，您将找到所有动作的列表，其中包含有关其组件和属性的详细信息。可以在动作表中配置的所有组件也可在动作的属性中使用。我们将在本章中仅解释特定于动作的属性。该标准的特性在&#x1F449;管理动作中得到解释。 本章导视 鼠标 鼠标滚轮 触摸 滑动手势 快捷键 键序列 移动按键 验证 调用动作 获取值 设定值 打开浏览器 运行应用程序 部署Android应用 部署iOS应用程序 设置设备方向 关闭应用 等待 记录报告 分隔器 延迟 用户代码 鼠标 摘要：执行鼠标动作。 类型：基本动作 是否可为变量:是 是否可以连接到控件库:是 描述 按下鼠标上的按钮或将鼠标移动到指定位置。 组件 子动作 向上/向下：向下按住并按住指定的鼠标按钮，向上按下它。 单击/双击 移动：将鼠标移动到指定的动作点。 按键 指定按下哪个按钮。XButtons指的是鼠标上的侧面按钮。 动作点 定义屏幕上按下按钮的位置或鼠标移动的位置。可以是相对位置，x; y像素坐标，或变量。 特定于动作的属性 禁用绑定警告：禁用报告中的“超出范围”警告。默认值为False。 基于图像：配置参数&#x1F449;基于图像的自动化。 移动时间：鼠标移动动作需要多长时间。默认值为300毫秒。可以绑定到变量。 鼠标滚轮 摘要：执行鼠标滚轮动作 类型：基本动作 是否可为变量:是 是否可以连接到控件库:否 描述 在垂直或水平方向上执行鼠标滚轮动作。 组件 取向 水平垂直 三角洲 滚轮垂直或水平移动的距离为正整数或负整数。可以绑定到变量。 触摸 摘要：执行触摸屏动作 类型：基本动作 是否可为变量:否 是否可以连接到控件库:是，必需 描述 触摸屏设备上的各种触摸滑动动作，必须链接到控件库项目。 组件 触摸式 触摸 双击 长按 触摸开始/ 触摸移动 / 触摸结束 动作点 定义屏幕上将进行触摸动作的位置，或者对于TouchMove类型，定义移动位置。可以是相对位置，x; y像素坐标，或变量。 特定于动作的属性 禁用绑定警告：禁用报告中的“超出范围”警告。默认值为False。 基于图像：配置参数&#x1F449;基于图像的自动化。 触摸持续时间长：持久触摸多长时间。默认值为1秒。可以绑定到变量。 移动时间：触摸移动动作需要多长时间。默认值为100毫秒。可以绑定到变量。 触摸持续时间：触摸持续多长时间。默认值为100毫秒。可以绑定到变量。 滑动手势 摘要： 执行触摸屏滑动手势 类型： 基本动作 是否可为变量: 是 是否可以连接到控件库: 是，必需 描述 对特定控件库项执行滑动动作。您可以配置滑动的方向，距离和持续时间。 组件 滑动方向 滑动方向的度数。可以设置为任何值或绑定到变量。 距离 滑动覆盖的距离（以像素为单位）。可以设置为任何值或绑定到变量。 滑动持续时间 滑动需要多长时间。可以设置为任何值或绑定到变量。 特定于动作的属性 禁用绑定警告：禁用报告中的“超出范围”警告。默认值为False。 基于图像：配置参数&#x1F449;基于图像的自动化。 开始位置：滑动开始的位置。默认为中心。各种预定义值。也可以是x; y像素值。可以绑定到变量。 步骤：滑动手势执行的次数。可以绑定到变量。 快捷键 摘要： 执行键盘快捷键 类型： 基本动作 是否可为变量： 是 是否可以连接到控件库: 是 描述 使用一个或多个键执行键盘快捷键。 组件 键代码 按：按下并释放键盘快捷键。 向上，向下：按下并按住，向上释放键盘快捷键。 快捷键 键盘快捷键本身。单击该字段旁边的...以打开助理。您也可以直接输入快捷方式。例如，要执行复制快捷方式，请输入：ctrl+c并按Enter键。您还可以在动作属性中使用快捷方式配置程序，也可以是一个变量。 特定于动作的属性 关键数据：执行的快捷方式。包含一个简单的快捷键配置器，包含所有可能的组合。可以绑定到变量。 按时间：按下后键盘快捷键保持多长时间。可以绑定到变量。 键序列 摘要： 输入一个键序列 类型： 基本动作 是否可为变量: 是 是否可以连接到控件库: 是 描述 输入任意长度的键序列。您可以在动作的属性中屏蔽输入的序列。 组件 序列 输入时的关键序列。单击该字段旁边的...以打开助理。 特定于动作的属性 掩码序列：掩码输入的序列。默认值为False。 按时间：按下序列中的每个键多长时间。可以绑定到变量。 移动按键 摘要： 按下移动键。 类型： 基本动作 是否可为变量: 是 是否可以连接到控件库: 是，必需 描述 按下移动动作键，例如Home或Back按钮。 组件 键 要按的动作键。 特定于动作的属性 基于图像：配置参数&#x1F449;基于图像的自动化。 键：按下的动作键。可以绑定到变量。 验证 摘要： 执行验证。 类型： 智能动作 是否可为变量: 是 是否可以连接到控件库: 是，必需 描述 对控件库项执行验证，即检查预期状态和实际状态是否匹配。根据结果​​，此动作将记录报告的成功或失败。可以使用几种不同类型的验证，每种验证都有自己的参数。 验证动作很复杂。不同的验证类型共享一组特定于动作的属性，但有些属性具有自己的附加属性。 共享验证属性 动作：验证的类型。其余属性根据此属性而更改。 消息：将记录到报告以进行验证的消息。保留为空以使用默认的Ranorex消息。 失败时的报告等级]：失败消息&#x1F449;报告等级。 成功报告等级：成功消息&#x1F449;报告等级。 报告屏幕截图：报告消息中是否包含屏幕截图。 验证类型和特殊属性 存在 检查控件库项是否存在。如果项目存在则记录成功，如果项目不存在则记录失败。 不存在 检查控件库项是否不存在。如果项目不存在则记录成功，如果项目不存在则记录失败。 AttributeEqual： 检查属性（列匹配名称）是否等于定义的值（列匹配值）。可用属性根据引用的控件库项而更改。同样，可能的匹配值也会根据属性而改变。例如，属性Text仅采用文本字符串，而属性Valid采用true / false值。匹配名称和匹配值都可以绑定到变量。 特殊属性：匹配名称和匹配值，如上所述。 AttributeNotEqual： 检查属性（列匹配名称）是否不等于定义的值（列匹配值）。可用属性根据引用的控件库项而更改。同样，可能的匹配值也会根据属性而改变。例如，属性Text仅采用文本字符串，而属性Valid采用true / false值。匹配名称和匹配值都可以绑定到变量。 特殊属性：匹配名称和匹配值，如上所述。 AttributeRegEx： 检查属性（列匹配名称）是否与定义的正则表达式匹配（列匹配值）。可用属性根据引用的控件库项而更改。匹配名称和匹配值都可以绑定到变量。 特殊属性：匹配名称和匹配值，如上所述。 AttributeContains 检查属性（列匹配名称）是否包含已定义的值（列匹配值）。可用属性根据引用的控件库项而更改。匹配名称和匹配值都可以绑定到变量。 特殊属性：匹配名称和匹配值，如上所述。 AttributeNotContains 检查属性（列匹配名称）是否不包含定义的值（列匹配值）。可用属性根据引用的控件库项而更改。匹配名称和匹配值都可以绑定到变量。 特殊属性：匹配名称和匹配值，如上所述。 ContainsImage 这是一个基于图像的自动化验证。执行验证时，它会创建控件库项目当前状态的屏幕截图。然后它检查此图像是否包含预定义的屏幕截图（列屏幕截图名称）。单击屏幕截图名称列中的...以打开一个对话框，以帮助您定义屏幕截图。 特殊属性： 基于图像：配置参数&#x1F449;基于图像的自动化。 报告相似性：定义是否将两个图像的相似性记录到报告中。 CompareImage 这是一个基于图像的自动化验证。执行验证时，它会创建控件库项目当前状态的屏幕截图。然后它检查此图像是否与预定义的屏幕截图（列屏幕截图名称）相同。单击屏幕截图名称列中的...以打开一个对话框，以帮助您定义屏幕截图。 特殊属性： 基于图像：配置参数&#x1F449;基于图像的自动化。 报告差异图像：定义是否将显示不同像素的差异掩码以及差异图像记录到报告中。 报告相似性：定义是否将两个图像的相似性记录到报告中。 章节预览Ranorex Studio基础知识>测试验证>&#x1F449;简介中介绍了测试验证的概念。 调用动作 摘要： 调用一个动作 类型： 智能动作 是否可为变量: 是 是否可以连接到控件库: 是，必需 描述 直接调用引用的控件库项目上的特定动作，无需通过鼠标单击，按键等进行任何模拟的UI交互。特别适用于访问不可立即显示的UI元素，例如列表中的项目; 或窗口中没有焦点的下拉菜单或按钮。 组件 动作名称 调用的动作。根据引用的控件库项进行更改。 各种参数 大多数动作不需要任何参数。但有些人会这样做。参数出现在动作名称后面的括号中，例如InvokeMethod（Name）。在动作表或属性中定义它们。它们可以绑定到变量。 章节预览有关使用Invoke动作的示例，请参阅Ranorex Studio基础知识>动作>&#x1F449;调用动作。 获取值 摘要： 从控件库项属性中检索值。 类型： 智能动作 是否可为变量: 是 是否可以连接到控件库: 是，必需 描述 从控件库项属性中检索值并将其传递给变量。根据分配的控件库项目，可用属性会更改。在传递给变量之前，还可以使用RegEx修改检索到的值。 使用此动作的常见方案是检索特定交互结果的值。然后，将此值传递给在验证中使用的变量，该变量用于检查交互结果是否正确。 组件 GetValue动作示例 将检索其值的属性。 将检索到的值传递给变量。 正则表达式，在将值传递给变量之前将根据该正则表达式进行修改。 引用的控件库项。 设定值 摘要： 将存控件项的属性设置为定义的值。 类型： 智能动作 是否可为变量: 是 是否可以连接到控件库: 是，必需 描述 将控件库项属性设置为已定义的值。根据分配的控件库项目，可用属性会更改。该值也可以被屏蔽。 组件 SetValue动作示例 将设置为已定义值的属性。 属性将设置为的值。可以绑定到变量。 引用的控件库项。 特定于动作的属性 掩码值：掩盖值。默认值为False。 打开浏览器 摘要： 打开浏览器并导航到指定的URL。 类型： 智能动作 是否可为变量: 是 是否可以连接到控件库: 否 描述 启动浏览器，对其进行检测并打开指定的网站。 组件 打开浏览器的动作 浏览器启动后将导航到的URL。可选的。可以绑定到变量。 该浏览器启动。可以绑定到变量。 浏览器窗口是否最大化。 特定于动作的属性 参数：定义在启动浏览器时使用的命令行参数，例如-ProfileManager在打开概要文件管理器的情况下启动Firefox。可以绑定到变量。 清除缓存：启动时是否清除浏览器的缓存。 默认是假的。可以绑定到变量。 清除cookie：浏览器的cookie是否会在启动时被清除。 默认是假的。可以绑定到变量。 隐身模式：浏览器是否以隐身模式启动。 默认是假的。可以绑定到变量。 仪器：自动检测浏览器。通过XCOPY或Ranorex代理在运行时环境中部署测试时特别有用。默认为True。 关闭现有：以前打开的浏览器实例是否会在启动时关闭。 默认是假的。可以绑定到变量。 运行应用程序 摘要： 从给定目录运行应用程序 类型： 智能动作 变量可能： 是 可链接到控件库： 否 描述 直接从指定目录运行应用程序。 组件 运行应用程序动作 应用程序的路径。如果应用程序与测试套件可执行文件位于同一文件夹中，则可以是相对的。可以绑定到变量。 将运行应用程序的命令行参数。可能的参数取决于应用程序。可以绑定到变量。 工作目录： 应用程序工作目录的可选信息 可以设置为常量值，也可以设置为变量 如果没有更改，则类似于应用程序可执行文件的目录 特定于动作的属性 返回值类型/变量：这两个字段用于处理“运行”应用程序动作的返回值。返回值始终是已执行应用程序的进程ID。因此，类型始终为System.Int32，即整数。返回值变量允许您选择要将进程ID传递到的变量。 运行标志：允许您设置NoElevation标志。此标志运行没有Windows管理员权限的应用程序，例如作为普通用户。可以绑定到变量。 运行最大化：应用程序是否将最大化运行。默认值为False。 运行移动应用 摘要： 在移动设备上运行应用程序。 类型： 智能动作 变量可能： 是 可链接到控件库： 否 描述 在移动设备上运行应用。 组件 端点 将运行应用程序的端点（即移动设备）。可以绑定到变量。 启动参数 应用程序将运行的命令行参数。可能的参数取决于应用程序。可以绑定到变量。 重启应用 如果应用程序已在运行，请重新启动它。可以绑定到变量。 章节预览从Web和移动测试>移动测试>&#x1F449;简介开始详细解释移动测试。 部署Android应用 摘要： 使用Android应用程序并将其部署到移动设备。 类型： 智能动作 变量可能： 是 可链接到控件库： 否 描述 使用Android应用程序并将其部署到指定的移动设备。 组件 端点 应用程序将部署到的端点（即移动设备）。可以绑定到变量。 文件名 用于检测和部署的应用程序的路径。可以绑定到变量。 特定于动作的属性 仪器APK：是否在部署之前对应用程序进行检测。默认为True。可以绑定到变量。 仪表选项：定义各种仪表选项。 超时：在动作失败之前，检测和部署可能需要的最长时间。可以绑定到变量。 章节预览从Web和移动测试>移动测试>&#x1F449;简介开始详细解释移动测试。 部署iOS应用程序 摘要： 仪器是iOS应用程序并将其部署到移动设备。 类型： 智能动作 变量可能： 是 可链接到控件库： 否 描述 使用iOS应用程序并将其部署到指定的移动设备。 组件 端点 应用程序将部署到的端点（即移动设备）。可以绑定到变量。 App档案 用于检测和部署的app存档的路径。可以绑定到变量。 应用程序ID 用于检测和部署的应用程序的应用程序ID。可以绑定到变量。 特定于动作的属性 仪表设置：定义各种仪表设置。 章节预览从Web和移动测试>移动测试&#x1F449;简介开始详细解释移动测试。 设置设备方向 摘要： 设置控件库项目的移动设备的方向。 类型： 聪明的动作 变量可能： 是 可链接到控件库： 是，必需 描述 设置指定控件库项的移动设备的方向。 组件 取向设备将设置的方向。提供纵向和横向方向。横向左侧表示设备顶部向左旋转。反之亦然。可以绑定到变量。 章节预览从Web和移动测试>移动测试> &#x1F449;简介开始详细解释移动测试 。 关闭申请 摘要： 关闭应用程序或网站。 类型： 智能动作 变量可能： 是 可链接到控件库： 是，必需 描述 关闭应用程序或网站。 此动作可用于关闭应用程序和网站。如果'Close Method'设置为'CloseWindow'或“CloseWindowByProcessID”，则尝试关闭应用程序。如果参数'宽限期'设置为大于0毫秒的值，则在“宽限期”之后，如果关闭应用程序失败，则该进程将被终止。如果'Close Method'设置为'KillProcess'，应用程序的进程将立即终止，并忽略宽限期。 组件 关闭申请动作 该close方法。CloseWindow和CloseWindowByProcessID尝试关闭窗口。如果失败，它将在宽限期后终止进程。 KillProcess忽略宽限期并立即终止进程。CloseWindowByProcessID与“运行”应用程序动作的ReturnValue属性一起使用。 如果应用程序的正常关闭失败，则宽限期是Ranorex在终止进程之前将等待的时间。可以绑定到变量。 将关闭其父应用程序的引用控件库项。 等待 摘要： 等待指定的UI状态发生。 类型： 智能动作 变量可能： 是 可链接到控件库： 是，必需 描述 等待直到在特定时间内达到定义的状态。有几种不同的等待类型可供选择。 存在 等待引用的存控件项存在于指定的超时（列Timeout）中。超时可以绑定到变量。 不存在 等待引用的控件库项在指定的超时（列超时）内停止存在。超时可以绑定到变量。 AttributeEqual 等待引用的控件库项的属性（列匹配名称）等于指定超时内的指定值（列匹配值）。匹配名称和匹配值可以绑定到变量。可用属性根据控件库项目而更改。如果值在超时内不匹配，则动作将失败。 在动作属性中配置超时（等待超时）。它可以绑定到变量。 AttributeNotEqual 等待引用的控件库的属性（列匹配名称）停止等于指定超时内的指定值（列匹配值）。匹配名称和匹配值可以绑定到变量。可用属性根据控件库项目而更改。如果值在超时内未停止匹配，则动作将失败。 在动作属性中配置超时（等待超时）。它可以绑定到变量。 AttributeContains 等待引用的控件库项的属性（列匹配名称）包含指定超时内的指定值（列匹配值）。匹配名称和匹配值可以绑定到变量。可用属性根据控件库项目而更改。如果属性在超时内不包含匹配值，则动作将失败。 在动作属性中配置超时（等待超时）。它可以绑定到变量。 AttributeNotContains 等待所引用的控件库项的属性（列匹配名称）停止包含指定超时内的指定值（列匹配值）。匹配名称和匹配值可以绑定到变量。可用属性根据控件库项目而更改。如果属性未在超时内停止包含匹配值，则动作将失败。 在动作属性中配置超时（等待超时）。它可以绑定到变量。 记录消息 摘要： 将项目记录到报告中。 类型： 智能动作 变量可能： 是 可链接到控件库： 是 描述 将消息记录到报告中，或捕获屏幕截图或Ranorex快照。 组件 子动作 日志：将消息记录到报告中。 屏幕截图：捕获屏幕截图并将其添加到报告中。 快照：捕获Ranorex快照并将其添加到报告中。 信息 将出现在报告中的消息。也适用于截图/快照捕获。可以绑定到变量。 水平 记录项目的&#x1F449;报告等级。 特定于动作的属性 类别：定义项目在报告中显示的类别。默认为用户。 分隔器 摘要： 在actions表的当前位置插入分隔线。 类型： 智能动作 变量可能： 否 可链接到控件库： 否 描述 在actions表的当前位置插入分隔线。使用它可以直观地分离或分组相关的动作。您可以添加标题文本来描述分隔符。分隔符及其标题文本也将显示在报表中。此动作对测试执行本身没有影响。它纯粹是增加美感。 章节预览Ranorex Studio基础知识>报告> &#x1F449;动作与报告中也说明了分隔符动作。 延迟 摘要： 延迟执行下一个动作。 类型： 智能动作 变量可能： 是 可链接到控件库： 控件库 描述 在指定的时间内延迟执行下一个动作。实质上，此动作会暂停测试执行一段时间（但AUT仍将正常运行）。时间值可以绑定到变量。延迟不受涡轮模式的影响。 用户代码 摘要： 添加用户代码动作。 类型： 智能动作 变量可能： 是 可链接的控件库： 是 描述 添加用户代码动作。您可以从用户代码库添加现有用户代码动作，也可以自己编写代码。 章节预览基础知识>动作> &#x1F449;用户代码动作中进行了说明。 Ranorex Studio专家>用户代码库> &#x1F449;简介中介绍了用户代码库。 &#x1F448;管理动作                                    调用动作&#x1F449; © 2018 ranorex.xyz            updated: 2020-06-18 "},"ranorex-studio-fundamentals/actions/invoking-actions.html":{"url":"ranorex-studio-fundamentals/actions/invoking-actions.html","title":"调用动作","keywords":"","body":"[译] 调用动作单击简单按钮结果：列出项目选择结果：[译] 调用动作 Invoke动作允许您对控件库项执行动作，而无需任何直接交互，如鼠标单击或键盘输入。这对于动作不可见的 UI元素特别有用，例如失焦的窗口或需要滚动的列表项。在本章中，您将通过两个示例学习如何使用Invoke动作。 本章导视 单击简单按钮 列出项目选择 视频向导视频“调用动作”将引导您完成本章中的内容。立即观看 单击简单按钮 在此示例中，您将使用Invoke动作执行简单的按钮单击。下图中的动作＃1在AUT 的添加条目按钮上执行鼠标单击。 鼠标单击添加条目按钮上的动作 要使用执行相同动作的Invoke动作替换它： 单击Add new action> Invoke action。 动作表中将显示空的Invoke动作。 添加Invoke动作 从控件库中，将表示添加条目按钮的项目BtnAddPerson 拖到 Invoke动作。 将存控件项链接到Invoke动作 在Invoke动作的Action name列中，选择 PerformClick（）。 指定调用动作类型 最后，右键单击常规鼠标单击动作，然后单击disable以禁用它。 结果： 现在可以直接执行单击Add Entry按钮而无需任何鼠标交互。 列出项目选择 自动列表项选择可能具有挑战性，因为通常，某些项目不会立即可见。使用Invoke动作而不是常规鼠标交互通常可以使您的测试更加稳健。下图显示了使用鼠标单击动作选择的标准列表项。 列出项目选择 1.鼠标单击动作，打开Department下拉列表。 2.鼠标单击从列表项中选择Project Management的动作。 要使用Invoke动作执行此动作： 单击Add action> Invoke action两次以添加两个空Invoke动作。 从系统信息库，拖动该项目打开代表的下拉按钮，第一Invoke动作。 使用表示Project Management列表项的ProjectManagement项重复第二次Invoke动作。 在第一个Invoke动作的Action name列中，选择Press（）。使用Select（）重复第二次Invoke动作。 最后，右键单击常规鼠标单击动作，然后单击disable以禁用它们。 调用列表项选择的动作 结果： 现在直接执行列表项选择，无需任何鼠标交互。 &#x1F448;动作属性                                  用户代码动作&#x1F449; © 2018 ranorex.xyz            updated: 2020-06-18 "},"ranorex-studio-fundamentals/actions/user-code-actions.html":{"url":"ranorex-studio-fundamentals/actions/user-code-actions.html","title":"用户代码动作","keywords":"","body":"[译] 用户代码动作找到用户代码文件查看基础动作代码将标准动作转换为用户代码用户代码动作和参数用户代码返回值将动作合并到用户代码动作中结果：[译] 用户代码动作 用户代码动作扩展了基本和智能动作的功能。示例包括自定义验证，访问与测试用例相关的数据和参数以及扩展报告。 在本章中，您将学习如何 在actions表中管理用户代码动作。编写自己的用户代码需要编程知识，因此超出了本章的范围。您可以然而利用其他人通过用户代码库编写的用户代码动作。 章节预览用户代码库是Ranorex Studio专家>用户代码库> &#x1F449;[简介]中介绍的专家主题。 本章导视 找到用户代码文件 查看基础动作代码 将标准动作转换为用户代码 用户代码动作和参数 用户代码返回值 将动作合并到用户代码动作中 视频向导视频“用户代码动作”将引导您完成本章中的内容。立即观看 找到用户代码文件 每个录制模块由三个文件组成。您可以在Ranorex Studio的项目视图中找到这些文件，也可以直接在项目文件夹中的硬盘驱动器上找到这些文件。双击打开它们。 录制模块 - 代码文件 在Recorder视图中具有控件库的动作表。 录制模块的代码表示。 机器生成的录制模块的代码表示。 由Ranorex自动更新。您所做的任何修改都将被丢弃。 只读。 录制模块的用户代码表示。 用于录制模块和用户代码动作的用户代码文件。 将所有用户代码写入此文件。 用户代码库中的用户代码方法将自动添加到此文件中。 查看基础动作代码 要查看动作的基础代码： 查看动作代码 选择一个动作。 右键单击它并单击“view code”，或按 Ctrl + Enter。 出现动作的代码。 贴士 该文件已被锁定，因此您无法更改它。它由Ranorex自动更新。 将标准动作转换为用户代码 您可以将标准动作转换为用户代码动作。 为此： 转换为用户代码动作 右键单击某个动作。 单击convert to user code。 该动作显示为具有默认方法名称的用户代码动作。 双击用户代码动作以在代码编辑器中查看其代码。 示例用户代码动作 用户代码动作和参数 您可以在参数编辑器或代码中为用户代码动作配置参数。 用户代码动作参数和参数 用于打开代码方法的参数编辑器的按钮。 论证编辑。 动作代码中的参数。 参数名称： 可以是任何名字。 使用命名约定是最好的，尤其是在团队中工作时。 可用的参数类型： String（value）可以绑定到变量 Boolean（true，false）可以绑定到变量 DateTime（值“YYYY / DD / MM”）可以绑定到变量 持续时间（以ms为单位的值）可以绑定到变量 Int32（整数值），可以绑定到变量 位置（值中心，中间，......）可以绑定到变量 点（坐标值）可以绑定到变量 Rectangle（维度值），可以绑定到变量 TimeSpan（时间格式），可以绑定到变量 Double（double value），可以绑定到变量 适配器（Ranorex适配器），链接到控件库项目 RepoItemInfo（控件库项），链接到控件库项 用户代码返回值 默认情况下，用户代码方法不返回值。但是，您可以将其中一个可用数据类型指定为方法返回值。 为此： void用您想要的数据类型替换默认返回值。 添加一行以返回指定的值。 这会导致返回值列显示在动作表中。它包含用户代码方法的返回值，并允许您使其变量。 或者，您可以使用上下文菜单创建具有返回值的用户代码方法： 1.右键单击某个动作。 2.单击转换为具有返回值的用户代码。 3.新动作将显示在动作表中，包括“return value”列 将动作合并到用户代码动作中 可以将两个或多个动作合并为单个用户代码动作，如下所示： 将动作合并到用户代码 选择要合并的动作。 右键单击它们以打开上下文菜单。 a. 单击“将项目合并到用户代码项”以创建不带返回值的默认用户代码方法。 b. 单击“将项目合并到具有返回值的用户代码项”以创建具有返回值的用户代码方法。 给新用户代码的动作命名并按 Enter键。 结果： 动作代码显示在新用户代码动作的代码中。 用户代码中的合并动作 默认合并用户代码方法，不带返回值 合并用户代码方法的Boolean返回值。 &#x1F448;调用动作 © 2018 ranorex.xyz            updated: 2020-06-18 "},"ranorex-studio-fundamentals/repository/":{"url":"ranorex-studio-fundamentals/repository/","title":"控件库","keywords":"","body":"控件库控件库 © 2018 ranorex.xyz            updated: 2020-06-18 "},"ranorex-studio-fundamentals/repository/introduction.html":{"url":"ranorex-studio-fundamentals/repository/introduction.html","title":"介绍","keywords":"","body":"[译] 控件库UI元素控件库和控件库项控件库结构控件库文件添加控件库删除控件库[译] 控件库 控件库包含测试中使用的用户界面（UI）元素的表示，称为“控件库项目”。控件库项目以树状结构组织。每个项目都有一个RanoreXPath，它唯一地标识它，并允许Ranorex将项目与AUT的相应UI元素链接。 在本章中，您将学习如何创建，管理和构建控件库项目。您还将学习如何使用多个控件库以及特殊用例，例如嵌入控件库。 本章导视 UI元素 控件库和控件库项 控件库结构 控件库文件 UI元素 Ranorex Studio测试包含与应用程序用户界面中的元素的一系列交互。UI元素包括按钮，选项卡，下拉菜单，文本字段等。Ranorex Studio将UI元素表示为控件库项目，以便与它们一起使用。 Ranorex Studio演示应用程序中的UI元素 简介注册标签 欢迎文字标签 文本输入字段 提交按钮 重置链接 退出按钮 控件库和控件库项 控件库项目以类似树的结构在控件库中存储和管理。要访问控件库，请从项目视图中打开控件库文件。打开录制模块时，控件库文件也会自动打开。默认情况下，控件库显示在Ranorex Studio工作区的下半部分。 控件库和控件库项目 树状结构中的控件库项目 每个控件库项都有一个名称。默认情况下，此名称继承自AUT内部结构中调用UI元素的内容。 您可以根据需要重命名控件库项。 控件库项目在树状结构中的位置（即它所在的文件夹）建议相应UI元素在AUT中的位置。 控件库项的路径 每个控件库项由其路径定义。 该路径源自AUT中UI元素的物理位置。 该路径遵循特殊语法RanoreXPath。 章节预览在Ranorex Studio高级> &#x1F449;RanoreXPath中描述了RanoreXPath。 控件库结构 控件库以树状结构组织，遵循AUT UI的内部结构。包含其他UI元素的UI元素在控件库中表示为文件夹，其中app文件夹充当顶级元素，而根文件夹充当子元素。 UI部分由控件库结构表示 RxMainFrame RxMainFrame是一个app文件夹。它表示包含所有其他UI元素的应用程序的完整程序窗口。 在示例中，它唯一不包含任何其他项的直接子项是右下角的“Exit”按钮。 RxTabIntroduction RxTabIntroduction是一个有根文件夹。它代表“Introduction”选项卡的屏幕区域。 在示例中，它是RxMainFrame的直接子项，并包含“Introduction”选项卡中的所有UI元素。 控件库文件 控件库的内容存储在控件库文件中。与其他Ranorex文件一样，您可以从项目视图或Windows中的项目文件夹中访问它。每个控件库文件还有两个子文件。 项目视图中的控件库文件和子文件 这是图像的标题 控件库文件 控件库文件的文件结尾.rxrep，代表Ranorex repository。 默认文件名是父测试解决方案（即Introduction）和的组合Repository。您可以根据自己的喜好重命名文件。 控件库代码表示 带有结尾的文件.cs是C＃中控件库的代码表示。 图像托管文件 带有结尾的文件.rximg托管链接到控件库项目的所有屏幕截图。 所有这些文件也可以在Windows的相应项目文件夹中找到。 控件库文件在项目的文件夹中 添加控件库 如果您的项目不包含控件库，则可以添加一个控件库。您还可以将&#x1F449;多个控件库添加到项目中。 在Studio工具栏中，单击 “Add repository”按钮。 将打开一个对话框，其中预先选择了控件库模板。 命名控件库。 点击创建。 删除控件库 在项目视图中，选择主控件库文件（.rxrep）。 按 DEL。 如果控件库不包含任何链接到动作的项目，则只需删除它。 如果至少有一个控件库项链接到某个动作，则会出现一个对话框通知您后果，您必须确认 缺失。 贴士 删除控件库时要小心。Ranorex Studio只能在当前打开的解决方案中找到控件库项目的引用。如果在另一个解决方案中使用控件库，则使用其控件库项的测试将会中断。 删除包含链接项的控件库时的确认对话框                                      控件库项目和动作&#x1F449; © 2018 ranorex.xyz            updated: 2020-06-18 "},"ranorex-studio-fundamentals/repository/repository-items-actions.html":{"url":"ranorex-studio-fundamentals/repository/repository-items-actions.html","title":"控件库项目和动作","keywords":"","body":"[译] 控件库项目和动作[译] 控件库项目和动作 章节预览 动作和控件库项之间的链接解释如下： Ranorex Studio基础>动作> &#x1F449;动作和控件库项目 &#x1F448;介绍                                   创建控件库项目&#x1F449; © 2018 ranorex.xyz            updated: 2020-06-18 "},"ranorex-studio-fundamentals/repository/creation-repository-items.html":{"url":"ranorex-studio-fundamentals/repository/creation-repository-items.html","title":"创建控件库项目","keywords":"","body":"[译] 创建控件库项目录制期间自动创建使用“Track”按钮创建控件库项目使用即时跟踪创建控件库项目使用Ranorex Spy创建控件库项目在控件库中手动创建一个控件库项目[译] 创建控件库项目 在本章中，您将了解创建控件库项目并将其添加到控件库的各种方法。 本章导视 录制期间自动创建 使用“Track”按钮创建控件库项目 使用即时跟踪创建控件库项目 使用Ranorex Spy创建控件库项目 在控件库中手动创建一个控件库项目 视频向导视频“创建控件库项目”将引导您完成本章中的内容。立即观看 录制期间自动创建 当您使用Ranorex Recorder录制测试并对UI元素执行动作时，将创建相应的控件库元素并自动添加到控件库中。 在录制期间自动创建的控件库项目 使用“Track”按钮创建控件库项目 Track按钮在控件库视图和Ranorex Spy中可用。使用此按钮可以手动跟踪UI元素并创建控件库项目。当您需要更新已更改的UI元素的定义时，这尤其有用。 贴士 关于使用“Track”按钮将在下面详细说明Ranorex Studio高级>跟踪UI元素>&#x1F449;Track按钮 使用即时跟踪创建控件库项目 即时跟踪是手动创建控件库项目的另一种方法。这对于手动识别不易访问的UI元素（如下拉菜单中的项目）尤其有用。要激活即时跟踪，请将鼠标悬停在所需的UI元素上，然后按快捷键Ctrl + WIN 。 贴士 关于使用即时跟踪将在下面详细说明Ranorex Studio高级>跟踪UI元素>&#x1F449;即时跟踪。 使用Ranorex Spy创建控件库项目 您还可以从Ranorex Spy手动添加控件库项目，Ranorex Spy是一种用于映射和识别UI元素的专用工具。 章节预览Ranorex Spy在 Ranorex Studio高级>&#x1F449;RanorexSpy中介绍RanorexSpy。 在控件库中手动创建一个控件库项目 最后，您可以在控件库视图本身中手动创建控件库项。 为此： 右键单击应用程序文件夹，有根文件夹或简单文件夹。 单击Add new iteam>Iteam。 手动跟踪项目的路径并为其命名。 贴士以下章节讲述了用于识别控件库项的RanoreXPathRanorex Studio高级> RanoreXPath>&#x1F449;简介 &#x1F448;控件库项目和动作                             管理控件库项目&#x1F449; © 2018 ranorex.xyz            updated: 2020-06-18 "},"ranorex-studio-fundamentals/repository/managing-repository-items.html":{"url":"ranorex-studio-fundamentals/repository/managing-repository-items.html","title":"管理控件库项目","keywords":"","body":"[译] 管理控件库项目重命名控件库项目复制/移动/删除控件库项目跨越逻辑边界删除链接的控件库项目更新截图突出显示元素添加验证截图保存截图查找引用查找测试模块参考查找代码引用控件库项属性属性列表[译] 管理控件库项目 一旦他们成为您的控件库的一部分，您就可以编辑和管理编辑和管理控件库项目的多种方法。本章介绍了可用的选项。 本章导视 重命名控件库项目 复制/移动/删除控件库项目 更新截图 突出显示元素 添加验证截图 查找指引 控件库项属性 重命名控件库项目 Ranorex Studio根据在跟踪的应用程序中调用相应的UI元素自动分配控件库项目名称。有时，这些名称可能含糊不清或过于通用，导致难以浏览控件库。您可以重命名控件库项目，以使其更清晰。 重命名控件库项目 选择控件库项目，然后按 F2。 重命名控件库项目，然后按Enter键。 控件库项的名称已更改。 复制/移动/删除控件库项目 可以像往常一样复制，移动和删除控件库项目。但是，移动和删除可能会导致以下问题： 您将控件库项移动到控件库中的逻辑边界。 您删除链接到一个或多个动作的控件库项目。 跨越逻辑边界 Ranorex将控件库项目组织在称为文件夹的逻辑组中。文件夹始终包含对UI元素的引用，这些元素在UI中共享相同的基本位置。这个概念在章节&#x1F449;构建控件库项目中有详细解释。 将控件库项目从一个文件夹移动到具有不同基本路径的文件夹时，还会更改控件库项目的基本路径。因此，Ranorex可能无法再找到UI元素，并且在测试执行期间链接到此存控件库项的任何动作都将失败。当您尝试以这种方式移动项目时，Ranorex会要求您确认。 跨逻辑边界移动控件库项目 当您使用不同的基本路径将控件库项目从一个文件夹移动到另一个文件夹时... ... Ranorex将通知您有关后果并要求您进行确认。 贴士 这仅适用于app folder和root folder。simple fold不受影响，因为它们没有基本路径。 删除链接的控件库项目 删除链接到一个或多个动作的控件库项时，动作将停止工作。如果要删除未使用的控件库项，请改用清除功能 删除控件库项目 选择控件库项并将其删除。 控件库项目将从链接到的动作中删除。这些动作将不再有效。 更新截图 创建控件库项时，还会保存相应UI元素的屏幕截图。它可以在控件库中查看。当UI元素在外观上发生变化时，您可能需要更新它。选项更新屏幕截图允许您快速执行此动作，而无需回溯UI元素。 更新控件库项屏幕截图 更新截图选项 右键单击要更新其屏幕截图的控件库项 单击update screenshot 截图 3.失败弹窗 只有在UI元素的路径仍然有效且包含的应用程序正在运行且UI元素可见时，才能更新屏幕截图。如果不是这种情况，则会显示错误失败弹窗。 突出显示元素 有时，很难确定控件库项目引用的UI元素。单击“Highlight element”时，Ranorex Studio将突出显示包含应用程序中的UI元素。当然，这只有在Ranorex Studio可以找到元素时才会起作用，即如果包含的应用程序正在运行并且元素的路径是正确的。 突出显示控件库项目 突出显示元素 右键单击所需的控件库项。 单击Highlight element。 该UI元素被高亮显示在应用了几秒钟以闪烁的红色帧。 搜索相应的UI元素 搜索相应的UI元素 有时Ranorex可能需要一段时间才能找到相应的UI元素。 如果路径不正确或尚未启动包含的应用程序，Ranorex将无法找到该元素。 添加验证截图 此选项对&#x1F449;图像验证很有用。通常，当您录制图像验证时，将自动创建验证屏幕截图。但是，您也可以手动添加验证屏幕截图。您还可以将多个验证屏幕截图添加到单个控件库项目中。在对不同状态下的相同UI元素进行图像验证时（例如，交通信号灯状态字段），这非常有用。选项添加验证屏幕截图可让您执行此动作。 创建验证屏幕截图 右键单击所需的控件库项。 单击Add validation screenshot UI元素的当前状态的屏幕截图将添加到相应的控件库项目中。 贴士 此选项仅在打开AUT并且相应的UI元素可见时才有效。 保存截图 将验证屏幕截图添加到控件库项目后，您可以将其保存到系统上的任何目标位置。然后，您可以使用&#x1F449;图像编辑器恢复保存的屏幕截图。 保存控件库截图 右键单击屏幕截图，然后单击Save screenshot... 查找引用 在大型测试项目中，可以在许多模块和/或代码段中引用控件库项。这就是为什么在对其进行更改之前检查控件库项目的确切位置是有意义的。两个上下文菜单选项查找测试模块引用和查找代码引用允许您这样做。 查找测试模块参考 此选项显示引用控件库项的所有测试模块。 右键单击所需的控件库项。 单击查找测试模块引用。 引用显示在Ranorex Studio底部的搜索结果中。 查找代码引用 此选项显示引用控件库项的所有代码实例。 右键单击所需的控件库项。 单击“Find code references”，然后选择两个选项之一。 代码引用显示在Ranorex Studio底部的搜索结果中。 控件库项属性 每个控件库项目还具有一组可在其“属性”面板中配置的属性。 打开控件库项属性 右键单击所需的控件库项。 单击Properties。 属性在控件库右侧打开。 属性列表 Absolute Path（绝对路径）表示控件库项的路径，包括所有父文件夹的路径。只读。 Adapter type （适配器类型）允许您选择适配器类型。默认情况下，Ranorex会自动选择最合适的适配器。 Effective timeout（超时有效期）应用于特定控件库项及其所有父文件夹的所有搜索超时的总和。只读。 Comment（备注）允许您向控件库项添加注释。 Live element（活动元素）当控件库项目表示的UI元素处于活动状态时，即打开AUT并且元素可见时，此属性会为其显示一系列不同的参数。 Name （名称）控件库项的名称。 Search timeout（搜索超时时间）定义Ranorex在抛出异常之前搜索元素的时间量。 Use ensure visible （使用确保可见）当被设置为Yes的时候，强制使控件库项表示的UI元素在测试运行期间变为可见。例如，UI元素可能位于网页的底部，您需要先滚动到该网页才能看到它。启用此属性后，Ranorex将自动执行此动作。 设置为“默认”时，该属性将从“常规”设置中默认使用“确保可见”设置继承。 Use cache （使用缓存）仅适用于app folder和rooted folder。 当这是True时，Ranorex会在找到文件夹时缓存文件夹所代表的UI元素。这可以加快自动化速度，因为Ranorex将不再搜索元素的路径。但是，如果UI元素定期更改，我们建议您将其设置为False。在这些情况下，缓存会降低测试运行速度并在报告中生成警告消息。这是因为缓存的元素与实际元素不匹配，Ranorex将使用绝对路径搜索它。这也适用于返回两个或更多UI元素的文件夹。Ranorex将始终缓存它找到的第一个UI元素，然后使用绝对路径再次搜索其余元素，从而导致速度减慢。 手动创建的文件夹的默认值： App folder：False Rooted folder：False 自动创建的文件夹的默认值是根据UI元素的技术设置的。在大多数情况下，这意味着错误。 &#x1F448;创建控件库项目                               构建控件库项&#x1F449; © 2018 ranorex.xyz            updated: 2020-06-18 "},"ranorex-studio-fundamentals/repository/structuring-repository-items.html":{"url":"ranorex-studio-fundamentals/repository/structuring-repository-items.html","title":"构建控件库项目","keywords":"","body":"[译] 构建控件库项目App文件夹创建一个app文件夹重命名app文件夹根文件夹创建一个rooted文件夹将项目分组到新的有根文件夹中重命名根文件夹优化文件夹的路径简单文件夹[译] 构建控件库项目 随着测试套件变得越来越大，越来越复杂，您的控件库也将包含越来越多的项目。通常，它们是自动构建的，即Ranorex Studio将自动创建app folder和rooted folder。但是，这可能会使许多项目变得混乱。您可能更喜欢自己构建控件库。本章介绍可用文件夹的类型以及如何使用它们构建您的控件库。 本章导视 App文件夹 根文件夹 简单文件夹 视频向导视频“构建控件库项目”将引导您完成本章中的内容。立即观看 App文件夹 app文件夹是根文件夹。它们表示控件库元素的树结构中的顶级数据容器。他们永远不可能是另一个文件夹的子文件夹。在下面的示例中，文件夹RxMainFrame和List1000是app文件夹。 RxMainFrame RxMainFrame是包含Ranorex Studio演示应用程序的所有UI元素的顶级文件夹。 List1000 List1000是顶级文件夹，其中包含“部门”下拉列表中的所有可选项。 贴士 要使用app文件夹，您需要对&#x1F449;UI元素和&#x1F449;RanoreXPath有基本的了解。 创建一个app文件夹 在“Item”列中，右键单击空白区域。 点击Add new item > app folder或按Ctrl键 + P。 新的app文件夹将显示默认名称。 贴士 您还可以单击控件库视图的菜单栏中的Add new item > App foldee。 重命名app文件夹 重命名app文件夹 选择所需的app文件夹，然后按 F2。 输入名称。 贴士 请注意，controlname控件库项目的路径中的内容保持不变。仅更改控件库中的显示名称。 根文件夹 根文件夹表示UI的不同部分，其中包含一组单独的UI元素。根文件夹中的控件库项目都共享相同的基本路径，即根文件夹的路径。在下面的示例中， RxTabStandard是一个根文件夹。 RxTabStandard 根文件夹及其在演示应用程序的UI中表示的内容，即“测试数据库”选项卡。 根文件夹中的所有项共享根文件夹的路径。 根文件夹中的控件库项目 表示测试数据库选项卡左侧部分中UI元素的控件库项目，后者又由根文件夹表示。 创建一个rooted文件夹 右键单击要添加根文件夹的位置。 单击“add new item”。 点击根文件夹，或按Ctrl键 + R 。 贴士 您还可以单击控件库视图菜单栏中的添加新项目> Rooted文件夹。 将项目分组到新的有根文件夹中 您还可以将现有控件库项目分组到新的根文件夹中。 选择要分组的控件库项目。 右键单击它们，然后单击Group in new rooted folder。 命名文件夹。控件库项目分组在新文件夹中。 1.分组控件库项的路径规范 rooted文件夹的路径是所选控件库项的共享路径。 控件库项目以其各自的路径结尾显示。 重命名根文件夹 单击所需的根文件夹，然后按 F2。 输入名称。 优化文件夹的路径 根节点文件夹的路径应始终是它包含的所有控件库项目之间共享的最长路径。要确保这种情况，请使用“优化文件夹路径”选项。 根文件夹SelectGender及其两个控件库项ButtonFmale和ButtonMale。 根文件夹的基本路径为空。 两个控件库项的完整路径。请注意，它们仅在末尾的控件名称上有所不同。 右键单击根文件夹。 单击Optimize folder path。 同样，相同的根文件夹SelectGender及其两个控件库项ButtonFmale和ButtonMale。 根文件夹的基本路径现在是两个控件库项目的最长共享路径。 仅显示唯一标识两个控件库项所需的路径部分。 简单文件夹 简单文件夹没有基本路径。这些文件夹允许您使用自己的逻辑类别，例如Windows中的文件夹。永远不会自动创建简单文件夹。需要手动创建和管理它们。 创建一个简单文件夹 右键单击要添加简单文件夹的位置。 单击Add new item > Simple folder或按 Ctrl键 + d。 命名该文件夹并用控件库项填充它。 &#x1F448;管理控件库项目                                清理控件库&#x1F449; © 2018 ranorex.xyz            updated: 2020-06-18 "},"ranorex-studio-fundamentals/repository/repository-cleanup.html":{"url":"ranorex-studio-fundamentals/repository/repository-cleanup.html","title":"清理控件库","keywords":"","body":"[译] 清理控件库[译] 清理控件库 在更新记录中的动作并更改测试时，先前链接到操作的控件库项可能会取消链接，因此不会使用。要使控件库保持整洁，可以使用控件库工具栏中的“ 清理”按钮删除这些未使用的项目。这通常比手动删除项目更好，因为它更快，更不容易出错。 控件库清理 单击控件库工具栏中的“CleanUp”。 a.将显示包含所有未使用的控件库项目的结果，并要求您确认删除。 b.如果未找到未使用的控件库库项，则会显示一条消息。 贴士 如果在多个项目中使用控件库，请注意清理功能。在执行清理之前，请确保使用此控件库的所有项目都已加载到当前解决方案中。否则，您可能会无意中删除仍在卸载的项目中使用的控件库项目。 &#x1F448;构建控件库项目                       使用单个控件库项表示多个元素&#x1F449; © 2018 ranorex.xyz            updated: 2020-06-18 "},"ranorex-studio-fundamentals/repository/Represent-multiple-elements-with-a-single-repository-item.html":{"url":"ranorex-studio-fundamentals/repository/Represent-multiple-elements-with-a-single-repository-item.html","title":"使用多个控件库表示多个元素","keywords":"","body":"[译] 使用单个控件库项表示多个元素必要的背景示例定义跟踪控件库项目概括RanoreXPath规范多个控件库项检测将跟踪的项添加到控件库命名通用控件库项[译] 使用单个控件库项表示多个元素 有时，单个控件库项表示多个UI元素可能会有所帮助。示例包括单选按钮和复选框等元素。此功能通常与代码模块一起使用。 本章导视 必要的背景 示例定义 跟踪控件库项目 概括RanoreXPath规范 多个控件库项检测 将跟踪的项添加到控件库 命名通用控件库项 视频向导视频“使用单个控件库项表示多个元素”将引导您完成本章中的信息：立即观看 必要的背景 本章介绍的概念通常与代码模块一起使用，代码模块是一个专家级别的主题。此外，如果您熟悉RanoreXPath语法和Ranorex Spy工具，您会发现该示例更容易理解。使用以下链接了解有关这些高级主题的更多信息。 章节预览代码模块在> Ranorex Studio专家> &#x1F449;代码模块中引入。RanoreXPath语法在> Ranorex Studio高级> &#x1F449;RanoreXPath中描述。在> Ranorex Studio高级> &#x1F449;RanorexSpy中了解Ranorex Spy工具 。 示例定义 在以下示例中，一个控件库项表示两个单选按钮。这些单选按钮显示在演示应用程序中数据库的性别选择区域内。 演示应用程序中的性别选择按钮 跟踪控件库项目 创建表示多个元素的控件库项的过程与常规控件库项的过程相同。请参阅以下说明： 打开Ranorex间谍 开始的演示应用程序 ，并单击测试数据库中注册标签 跟踪的性别选择一个单选按钮 跟踪演示应用程序中的单选按钮 在演示应用程序中跟踪和识别女性单选按钮的UI元素 在Ranorex Spy中女性单选按钮的唯一Ranorexpath规范 在Ranorex Spy中UI元素浏览器树显示了定义过的女性单选按钮路径 在Ranorex Spy中女性单选按钮的路径编辑器 概括RanoreXPath规范 按照以下步骤概括RanoreXPath规范，使其包含演示应用程序的第二个性别选择单选按钮。 更改RanoreXPath规范，如下所示 RanoreXPath规范的推广 1.初始RanoreXPath规范，仅包括女性单选按钮 2.修改后，包含两个单选按钮的通用RanoreXPath规范 多个控件库项检测 推广RanoreXPath规范可以同时跟踪演示应用程序中的性别选择单选按钮。这可以在Ranorex Spy中看到。 多个控件库项跟踪 3.匹配到的两个被跟踪的单选按钮 在Ranorex Spy中找到元素信息 4.Ranorex Spy在工作环境的左下角显示匹配结果 将跟踪的项添加到控件库 最后，将匹配的项添加到控件库。 将匹配的项添加到控件库 选择一个匹配的控件库项，打开上下文菜单，然后单击“Add to repository” 命名通用控件库项 与所有控件库项一样，可以重命名通用控件库项以使其更有意义。 命名通用控件库项 选择表示多个UI元素的控件库项。 打开上下文菜单以更改控件库项目名称。 &#x1F448;清理控件库                                管理多个控件库&#x1F449; © 2018 ranorex.xyz            updated: 2020-06-18 "},"ranorex-studio-fundamentals/repository/Manage-multiple-repositories.html":{"url":"ranorex-studio-fundamentals/repository/Manage-multiple-repositories.html","title":"管理多个控件库","keywords":"","body":"[译] 管理多个控件库需要多个控件库的原因测试不同的用户界面模块化控件库同一个项目上有多个测试复杂点添加新控件库结果：将控件库分配给模块目前已分配控件库分配不同的控件库[译] 管理多个控件库 默认情况下，Ranorex Studio项目包含一个控件库文件，该文件自动用于每个新的录制模块。您可以管理模块在单个控件库中引用的所有控件库项，但也有充分的理由在单个项目中拥有多个控件库。本章解释了这些原因并描述了如何使用多个控件库。 本章导视 需要多个控件库的原因 添加新控件库 将控件库分配给模块 视频向导视频“管理多个控件”将引导您完成本章中的信息：立即观看 需要多个控件库的原因 测试不同的用户界面 假设您的测试套件包含Web应用程序的测试用例和客户端应用程序用户界面的测试用例。在这种情况下，使用两个控件库是有意义的。一个包含Web应用程序的控件库项目，另一个包含客户端应用程序的控件库项目。您还可以使用简单文件夹将单个控件库中的两个应用程序的控件库项目分开，但使用两个控件库更方便，尤其是在团队中工作时。 模块化控件库 以类似于录制和代码模块的方式模块化控件库是个好主意。例如，当您考虑具有主菜单，功能区或工具栏的客户端应用程序时，你可以创建小型可重用录制，以便在主菜单中单击UI元素，如文件> 打开 >处理打开文件对话框等。 所有这些可重复使用的模块都可以使用主菜单，主工具栏或类似工具，即共享控件。因此，最好还将它们建立在专门代表这些共享控件的控件库上。 同一个项目上有多个测试 在单独处理项目时，单个控件库通常就足够了，通常不会成为问题。但是，在与他人合作时，这很快就会导致冲突。这可以通过使用多个控件库来规避。还要确保设置规则和职责，例如：谁可以重命名控件库项目？谁可以重组控件库？谁可以删除物品？ 复杂点 我们的一些客户拥有数千个控件库项目的测试。显而易见的是，将所有这些存储在一个控件库中会使其难以维护，更不用说这种控件库的文件大小了。随着测试变得越来越大，请考虑如何将控件库项目明智地划分到不同的控件库中，以保持其可维护性和高性能。 添加新控件库 添加新控件库 在Studio工具栏中，单击 “Add repository”按钮。 控件库模板已预先选定。 命名控件库。 点击Create。 结果： 添加了新的空控件库，可以在项目视图中看到。 添加了控件库 新添加的控件库文件，包含代码表示和图像托管文件。 默认控件库。 将控件库分配给模块 一旦拥有多个控件库，就可以将它们分配给不同的录制模块。然后，您可以在录制中使用该控件库的控件库项。 目前已分配控件库 打开录制模块时，当前分配的控件库将显示在控件库的工具栏中。 当前控件库分配 录制模块Recording1.rxrec...... 把控件库IntroductionRepository分配给他们。 分配不同的控件库 在控件库工具栏中，单击当前分配的控件库。 在下拉菜单中，单击要分配的控件库。 分配不同的控件库 当前分配的控件库。在这种情况下，它是默认控件库。 另一个可用的控件库DatabaseTesting。 如果录制模块包含链接到当前分配的控件库中的控件库项目的动作，则可以选择让Ranorex将这些控件库项目传输到新分配的控件库。 &#x1F448;使用单个控件库项表示多个元素                         嵌入控件库&#x1F449; © 2018 ranorex.xyz            updated: 2020-06-18 "},"ranorex-studio-fundamentals/repository/embedded-repositories.html":{"url":"ranorex-studio-fundamentals/repository/embedded-repositories.html","title":"嵌入控件库","keywords":"","body":"[译] 嵌入控件库嵌入控件库[译] 嵌入控件库 通常，控件库与录制模块分离。这种分离具有许多优点，容易在不同录制模块中重新使用控件库项目只是其中之一。 但是，有时您可能希望在存储模块中嵌入控件库。当您想要向其他人发送您制作的录制时，嵌入非常有用。没有它，你必须分别发送录制和控件库。由于这个原因，独立的Ranorex Recorder也总是创建带有嵌入式控件库的记录。 本章导视 嵌入控件库 嵌入控件库 打开要在其中嵌入控件库的录制模块。 在控件库工具栏中，单击当前分配的控件库的名称，然后单击“嵌入控件库”。如果您有多个控件库，则还可以先分配不同的控件库。 项目视图中的控件库文件及其子文件。 录制模块Recording1及其子文件。 带有嵌入式控件库文件的录制模Recording1 贴士 您对具有嵌入式控件库的录制模块所做的任何更改仅限于该模块和该控件库。原始控件库不受影响，使用它的其他录制模块将继续工作。 &#x1F448;管理多个控件库 © 2018 ranorex.xyz            updated: 2020-06-18 "},"ranorex-studio-fundamentals/test-validation/":{"url":"ranorex-studio-fundamentals/test-validation/","title":"测试验证","keywords":"","body":"本页说明本页说明 为了可以和官方同步URL，gitbook默认章节的README.md内容暂时不放翻译内容。 待日后放置本章节的实践示例！ 吼吼！加油！！！ © 2018 ranorex.xyz            updated: 2020-06-18 "},"ranorex-studio-fundamentals/test-validation/introduction.html":{"url":"ranorex-studio-fundamentals/test-validation/introduction.html","title":"介绍","keywords":"","body":"[译] 测试验证了解验证间接验证验证过程激活验证选择验证元素确认验证元素确认对话框组件确认动作定义验证属性验证示例[译] 测试验证 在软件测试中，验证是验证被测应用程序产生的动作和/或响应是否与预期结果匹配的过程。本章介绍Ranorex Studio中提供的测试验证方法。 为简单起见，本章演示了使用常量值来确定应用程序是否返回预期结果的验证。实际上，您通常希望使用变量进行验证而不是常量值。 贴士要了解如何在验证操作中使用变量，请参阅以下部分：Ranorex Studio高级>变量和参数> &#x1F449;验证变量。 本章导视 了解验证 间接验证 验证过程 激活验证 选择验证元素 确认验证元素 定义验证属性 验证示例 了解验证 让我们从一个简单的测试验证示例开始。想象一下你用来添加两个数字的标准袖珍计算器： 示例计算 如果计算器返回预期结果，则测试验证成功，57.79。 然而，袖珍计算器的制造商需要保证不仅这个结果是正确的，而且还要保证所有其他结果，从最简单的添加到任何其他复杂的内置数学公式。 这是测试验证发挥作用的地方。自动化测试可以根据需要使用不同的输入数据和结果覆盖尽可能多的不同计算，以证明计算器正常工作。 间接验证 重要的是要了解GUI测试自动化仅提供间接测试验证。这意味着我们验证用户输入的序列是否为： 导致结果： 间接验证验证显示的结果与基于用户输入的预期结果类似。它无法确保计算器是否正常工作。 用户输入和屏幕上结果的显示之间可能存在许多操作和处理步骤。 我们只能将显示的结果与用户输入操作的初始序列进行匹配，并确定结果或动作是否符合预期。 换句话说，如果测试验证失败，则没有证据表明出现了什么问题。它可能是软件正确处理所有内容，但结果显示有点错误。测试数据可能包含错误数据。您始终需要注意，我们无法验证计算机系统中的内部处理步骤，而只能验证“外部”可见结果。在设计测试用例时请记住这一点。 验证过程 测试验证是一个包含四个连续步骤的过程，如下所示。您可以在录制期间创建测试验证操作，也可以稍后手动添加。 这是图像的标题 激活验证 在Ranorex中，验证被视为一种特殊类型的操作。因此，“激活”测试验证只是意味着将验证操作添加到当前录制模块。以下说明描述了在录制会话期间添加测试验证。如前所述，还可以在录制后手动添加验证操作。 贴士 如果您不熟悉测试操作，我们建议您阅读 Ranorex Studio基础知识&#x1F449;动作 激活验证 要配置基于文本的验证： 单击“Validate”以激活基于文本的验证模式。 要配置基于图像的验证： 激活开关基于图像的录制。 单击“Validate”以激活基于图像的验证模式。 贴士 录制会话会自动暂停，以允许您插入测试验证操作。这由录制器控制中心的紫色条表示。 选择验证元素 验证过程的第二步是选择要验证的UI元素。选择过程与验证类型无关（即文本/属性/基于图像的验证）。 将鼠标移到要验证的UI元素上。寻找在UI元素周围出现的紫色框架，表明Ranorex Studio已经识别出它。单击以选中UI元素。 选择基于文本的验证元素。 选择基于图像的验证元素。 贴士 识别正确的UI元素可能具有挑战性，尤其是当它与其他UI元素紧密嵌套时。 如果您错误地选择了错误的UI元素，则可以在下一步中轻松更改它。 确认验证元素 验证过程的第三步是确认选择了正确的UI元素进行验证。如果是这样，单击下一步。否则，请更正选择。 确认对话框组件 验证确认对话框的组件 GUI中的UI元素位置 Ranorex识别被测应用程序中的每个UI元素。 所有UI元素都以分层结构进行管理。 UI元素的名称源自其基础类型和内容。 UI元素状态和属性 每个UI元素由一组属性和状态定义。 状态的示例是Enabled，其当前值为True。 属性的示例是UI元素的名称。在上面的示例中，text属性具有当前值lblWelcomeMessage。 UI元素的屏幕截图 显示所选UI元素的屏幕截图以进行确认。 贴士 UI元素，它们在Ranorex中的表示以及它们的状态和属性都包括在内Ranorex Studio高级> &#x1F449;UI元素 确认动作 单击下一步以确认验证元素 确认基于文本的验证元素。 确认基于图像的验证元素。 定义验证属性 每个UI元素由状态和属性定义。在最后一步中，指定要用于验证的特定属性或状态，如下所示。 验证UI元素的属性/子图像选择 基于文本/属性的验证的属性/状态选择 可以选择任何可用的属性/状态。 text属性是基于文本的验证的默认属性。 选择属性，然后单击“OK”进行确认。 （子）的图像选择为图像 - 基于验证 可以通过在图像内绘制粉红色矩形来选择图像的子区域。 如果未选择子区域，则完整图像将用于测试验证。 图像验证模式 无=没有基于图像的验证; 验证被丢弃。 Contains =检查匹配的图像是否包含在参考验证图像中。 比较=检查匹配的图像与完整的参考验证图像。 验证示例 要了解有关这三种验证类型的更多信息，请参阅下面链接的示例： 贴士 验证示例：&#x1F449;基于文本的验证示例&#x1F449;基于属性的验证示例&#x1F449;基于图像的验证示例 章节预览要了解有关UI元素的更多信息，请参阅Ranorex Studio高级> &#x1F449;UI元素。要了解有关基于图像的自动化的更多信息，请参阅Ranorex Studio高级> &#x1F449;基于图像的自动化。                                     基于文本的验证示例&#x1F449; © 2018 ranorex.xyz            updated: 2020-06-18 "},"ranorex-studio-fundamentals/test-validation/text-based-validation-example.html":{"url":"ranorex-studio-fundamentals/test-validation/text-based-validation-example.html","title":"基于文本的验证示例","keywords":"","body":"[译] 基于文本的验证示例下载示例解决方案安装示例解决方案：测试定义基于文本的验证激活验证选择验证元素确认验证元素定义验证属性结果解释验证[译] 基于文本的验证示例 本章使用一个简单的例子来解释基于文本的验证的概念。在使用此示例之前，请确保您熟悉测试验证的基本概念。 本章导视 下载示例解决方案 测试定义 基于文本的验证 结果 视频向导视频“基于文本的验证”将引导您完成本章中的信息。立即观看 下载示例解决方案 要按照本章中的步骤动作，请从以下链接下载示例解决方案文件。 示例解决方案 主题：录制一个测试时间：10min以内下载：点我下载 安装示例解决方案： 解压缩到计算机上的任何文件夹。 启动Ranorex Studio并打开解决方案文件Introduction.rxsln 贴士 样本解决方案适用于Ranorex 8.0或更高版本。您必须同意8.2及更高版本的自动解决方案升级。 测试定义 在我们开始录制测试之前，让我们来定义它。测试包括5个步骤： 打开 Ranorex演示应用程序。 在“Enter your name”字段中，输入Harry并单击“Submit”。 在演示应用程序中更改欢迎消息 验证欢迎消息是否相应更改。 重置 欢迎消息。 结束 演示应用程序并停止 录制。 基于文本的验证 此示例中的测试验证的目的是验证我们的测试定义的步骤＃2中的交互是否导致期望的结果，即欢迎消息是否相应地改变。由于这需要我们验证文本字段中包含的文本，因此我们正在执行基于文本的验证。 我们来看看这些步骤： 激活验证 单击“Validate”。录制暂停，录制器切换到验证模式。 选择验证元素 选择要验证的UI元素： 将鼠标移到已更改的欢迎消息上 鼠标移动后会出现紫色框。 紫色框表示当前选择哪个元素进行验证。 选择与欢迎消息匹配后，单击它。 确认验证元素 要确认UI元素，请单击“Next”。 GUI中的UI元素位置 在这里，您可以通过选择任何其他UI元素进行验证来更正先前的选择。 UI元素树表示应用程序的分层GUI结构。 UI元素状态和属性 这里，显示所选UI元素的所有属性。 验证UI元素的屏幕截图 使用屏幕截图快速检查您是否选择了正确的UI元素。 定义验证属性 通常预先选择Text属性。如果不是，请选择它。单击“OK”以确认。 选择文本作为验证属性。 其他可用于验证的属性。 贴士 描述和定义UI元素的所有属性和状态都可以在验证中使用。您还可以一次验证多个属性和状态，以使验证更具体。 结果 完成的录制包含五个动作。动作＃4是验证动作。 录制基于文本的验证示例的结果 验证动作 验证类型动作符 该运算符定义将执行哪种类型的验证。 有9种不同的验证类型运算符。 验证类型运算符 章节预览有关所有验证类型运算符的详细说明，请参阅Ranorex Studio基础知识>动作> &#x1F449;动作属性。 验证属性 第4列显示验证属性。 在我们的示例中，这是Text属性。 您可以从下拉菜单中选择其他属性。 匹配值 匹配值可以是常量（即文本，数字等）或变量。 链接的控件库项目 第6列显示了动作链接到的控件库项，即执行验证的UI元素。 解释验证 详细说明，验证内容如下： 如果Text引用的UI元素的属性LblWelcomeMessage等于（AttributeEqual）欢迎，Harry！“然后验证返回值True。 &#x1F448;介绍                                 基于属性的验证示例&#x1F449; © 2018 ranorex.xyz            updated: 2020-06-18 "},"ranorex-studio-fundamentals/test-validation/attribute-based-validation-example.html":{"url":"ranorex-studio-fundamentals/test-validation/attribute-based-validation-example.html","title":"基于属性的验证示例","keywords":"","body":"[译] 基于属性的验证示例下载示例解决方案安装示例解决方案：测试定义录制准备录制测试：第一部分基于属性的验证激活验证选择验证元素确认验证元素定义验证属性完成录制结果解释验证[译] 基于属性的验证示例 在本章中，我们将基于一个简单的例子演示基于属性的验证的概念。在使用此示例之前，请确保您熟悉测试验证的基本概念。 当然，&#x1F449;基于文本的验证也是基于属性的验证的一个例子，但我们专门为它设置了一章，因为它可能是最常见的验证类型。 本章导视 下载示例解决方案 测试定义 录制准备 录制测试：第一部分 基于属性的验证 完成录制 结果 视频向导视频“基于属性的验证”将引导您完成本章中的内容。立即观看 下载示例解决方案 要继续学习本教程，请从以下链接下载示例解决方案文件。 下载示例解决方案 主题：建立测试 时间：15分钟点我下载 安装示例解决方案： 解压缩到计算机上的任何文件夹。 启动 Ranorex Studio并打开解决方案文件AttributeBasedValidation.rxsln 贴士 样本解决方案适用于Ranorex 8.0或更高版本。您必须同意8.2及更高版本的自动解决方案升级。 测试定义 在我们开始录制测试之前，让我们来定义它。测试包括5个步骤： 打开 Ranorex Studio演示应用程序。 单击选项卡UI元素测试区域。 单击单选按钮组框中的单选按钮Green light。 确认单选按钮旁边出现绿色方块。 结束演示应用程序并停止录制。 基于属性的示例测试定义 录制准备 使用解决方案向导创建桌面测试解决方案，并在设置的第2步中选择演示应用程序作为AUT。 1.演示应用程序被选为AUT，并在您开始录制时自动启动。 2.解决方案向导完成后，单击 Ranorex Studio工作环境中的Recording1选项卡。 录制测试：第一部分 贴士 请记住，如果您不使用白名单，则一旦开始录制，即使未在AUT上执行，也会捕获所有用户交互。 单击“Pause”以暂停录制。单击继续以继续录制。 单击“Stop”以结束录制。了解有关更多录制器控制中心和热键：Ranorex Studio基础知识> Ranorex Recorder> &#x1F449;录制器控制中心和热键 阅读Ranorex Studio基础知识中的白名单 > &#x1F449;白名单。 在Recording1的录像模块视图中，单击RECORD。Ranorex Studio自动最小化到任务栏。 录制器控制中心显示录制处于活动状态。 开始测试录制 被测试的应用程序成为焦点。 在单选按钮组框中，单击单选按钮Green light。 基于属性的验证 此示例中的测试验证的目的是在单击单选按钮后验证彩色方块是否以正确的颜色显示。 由于这需要我们验证UI元素的颜色属性，因此我们正在执行基于属性的验证。 我们来看看这些步骤： 激活验证 单击“Validate”。录制暂停，录制器切换到验证模式。 选择验证元素 2.选择要验证的UI元素： 将鼠标悬停在绿色方块上。鼠标移动后会出现紫色框。 紫色框表示当前选择哪个元素进行验证。 选择与绿色方块匹配后，单击它。 确认验证元素 要确认UI元素，请单击“Next”。 选定的验证元素： UI元素具有角色Container和ControlName pnlColourPanel 所选UI元素的屏幕截图，显示绿色方块。 定义验证属性 选择Exists（通常是预选）和BackColor属性，然后单击OK确认。 General属性里的 Exists通常被预选。 将Dynamic属性里的带着Green值得BackColor选上 完成录制 完成验证动作后，Ranorex会自动继续录制。下一步是结束测试录制。 在“Recorder”控制中心中，单击“Stop”以结束录制。 结果 录制停止后，您将返回Ranorex Studio。动作表包含三个录制的动作。动作＃3是验证。 录制基于属性的验证示例的结果 验证动作 验证类型动作符 此运算符标识要执行的验证类型。 有九种不同的验证类型运算符。 验证类型运算符 章节预览有关所有验证匹配运算符的详细说明，请参阅Ranorex Studio基础知识>动作> &#x1F449;动作属性。 验证属性： 此列显示验证属性。 在我们的示例中，这是BackColor属性。 您可以从下拉菜单中选择其他属性。 匹配值： 匹配值可以是常量（即文本，数字等）或变量。 控件库项目： 此列显示链接到动作的控件库项，即执行验证的UI元素。 解释验证 如果作为陈述书写，则验证内容如下： 如果属性BackColor的UI元素的PnlColourPanel是EQUAL的值Green，THEN验证返回值“ True”。 &#x1F448;基于文本的验证示例                         基于图像的验证示例&#x1F449; © 2018 ranorex.xyz            updated: 2020-06-18 "},"ranorex-studio-fundamentals/test-validation/image-based-validation-example.html":{"url":"ranorex-studio-fundamentals/test-validation/image-based-validation-example.html","title":"基于图像的验证示例","keywords":"","body":"[译] 基于图像的验证示例下载示例解决方案安装示例解决方案：测试定义录制准备录制测试：第一部分基于图像的验证激活基于图像的验证选择验证元素确认验证元素定义验证属性完成录制结果解释验证[译] 基于图像的验证示例 基于图像验证的简单教程。在使用此示例之前，请确保您熟悉测试验证的基本概念。 本章导视 在这一章当中 下载示例解决方案 测试定义 录制准备 录制测试：第一部分 基于图像的验证 完成录制 结果 视频向导视频“基于图像的基本验证”将引导您完成本章中的信息。立即观看 下载示例解决方案 要继续学习本教程，请从以下链接下载示例解决方案文件。 示例解决方案 主题：建立测试时间：15分钟点我下载 安装示例解决方案： 解压缩到计算机上的任何文件夹。 启动 Ranorex Studio并打开解决方案文件ImagebasedValidation.rxsln 贴士 样本解决方案适用于Ranorex 8.0或更高版本。您必须同意8.2及更高版本的自动解决方案升级。 测试定义 在开始录制之前，让我们定义测试。它包括5个步骤： 启动演示应用程序。 点击该图片为基础的自动化选项卡。 使图像可见。 验证是否显示图像。 退出演示应用程序。 录制准备 使用解决方案向导创建桌面测试解决方案，并在设置的第2步中选择演示应用程序作为AUT。 演示应用程序被选为AUT，并在您开始录制时自动启动。 解决方案向导完成后，单击 Ranorex Studio工作环境中的Recording1选项卡。 录制测试：第一部分 贴士 请记住，如果您不使用白名单，则一旦开始录制，即使未在AUT上执行，也会捕获所有用户交互。 单击“Pause” 以暂停录制。单击 继续 以继续录制。 单击“Stop” 以结束录制。了解有关Ranorex Studio基础知识> Ranorex Recorder> &#x1F449;录制器控制中心和热键的录制仪控制中心的更多信息。阅读Ranorex Studio基础知识中的白名单 > &#x1F449;白名单。 1.在Recording1的录像模块视图中，单击RECORD。Ranorex Studio自动最小化到任务栏。 录制器控制中心显示录制处于活动状态。 开始测试录制 被测试的应用程序成为焦点。单击基于图像的自动化选项卡。 要显示图像，请单击复选框显示图像。 基于图像的验证 示例验证的目标是验证选中复选框时是否显示猫的图像。由于这需要我们验证图像，因此它是基于 图像的验证。 请按照以下步骤动作： 激活基于图像的验证 在Recorder控件中，激活基于图像的开关录制。 单击“Validate”。录像机暂停录制并切换到基于图像的验证模式。 选择验证元素 选择要验证的UI元素： 将鼠标悬停在猫的图像上。鼠标移动后会出现紫色框。 紫色框表示当前选择哪个元素进行验证。 选择与图像匹配后，单击它。 确认验证元素 要确认UI元素，请单击“Next”。 GUI中的UI元素位置 UI元素树表示应用程序的分层GUI结构。 如果需要，您可以单击其他UI元素以选择它进行验证。 UI元素状态和属性 所选UI元素的所有属性都显示在此区域中。 验证UI元素的屏幕截图 使用屏幕截图快速检查您是否选择了正确的UI元素。 定义验证属性 定义将用于验证的图像。对于我们的示例，只需保留所有内容，然后单击“OK”进行确认。 在“验证”对话框中选择“ 图像”选项卡，而不是“ 属性”选项卡。 使用“包含”验证模式时，绘制一个矩形以选择图像的一部分。 提供不同的图像验证模式： None： 停用图像验证。 Contains： 确定验证图像是否包含在测试期间找到的实际图像中。 Compare：确定验证图像和测试期间找到的实际图像是否相同。 完成录制 完成验证动作后，Ranorex会自动继续录制。下一步是结束测试录制。 在“Recorder”控制中心中，单击“Stop”以结束录制。 结果 录制停止后，您将返回Ranorex Studio。您将看到包含三个录制动作的动作表。动作＃3是验证动作。 录制基于图像的验证示例的结果 验证类型运算符 此运算符标识要执行的验证类型。 有九种不同的验证类型运算符。 用于基于图像的验证的验证类型运算符 章节预览有关所有验证匹配运算符的详细说明，请参见> Ranorex Studio基础知识>动作> &#x1F449;动作属性。 将匹配测试期间找到的实际图像的验证屏幕截图。 动作链接到控件库项，即执行验证的UI元素。 解释验证 作为陈述书写，验证内容如下： 如果在控件库项引用的UI元素中Screenshot1包含（ContainsImage）TheCat，那么验证将返回值' True'。 &#x1F448;基于属性的验证示例                             验证工具提示&#x1F449; © 2018 ranorex.xyz            updated: 2020-06-18 "},"ranorex-studio-fundamentals/test-validation/validation-tool-tips.html":{"url":"ranorex-studio-fundamentals/test-validation/validation-tool-tips.html","title":"验证工具提示","keywords":"","body":"[译] 验证工具提示测试定义激活工具提示验证验证工具提示结果下载示例解决方案安装示例解决方案：[译] 验证工具提示 验证工具提示比验证其他类型的UI元素更具挑战性。在本章中，您将学习如何动作。 本章导视 测试定义 激活工具提示验证 验证工具提示 结果 下载示例解决方案 视频向导视频“工具提示验证”将引导您完成本章中的信息。立即观看 测试定义 我们想验证当用户将鼠标悬停在Shuffle按钮上时，下图中显示的工具提示正确显示。 激活工具提示验证 要激活工具提示验证： 录制器热键激活 激活启用热键。 章节预览Ranorex Studio基础> Ranorex Recorder> &#x1F449;录制器控制中心和热键中介绍了录制器热键。 验证工具提示 将光标 放在要验证其工具提示的UI元素上。 出现工具提示时，按 T 键。 指定工具提示验证 在下一个屏幕中，检查是否已选择正确的工具提示元素，然后单击“Next”进行确认。 确保选中“Exists”属性，然后单击“确定”进行确认。 指定工具提示验证 结果 动作表中有两个录制的动作。动作＃2是工具提示验证。 工具提示验证结果 动作表和工具提示验证动作。 表示工具提示UI元素的链接控件库项。 下载示例解决方案 您可以在此处下载本章的示例解决方案。它包含已完成的所有录制动作的解决方案。 示例解决方案 主题：工具提示验证时间：15分钟点我下载 安装示例解决方案： 解压缩到计算机上的任何文件夹。 启动 Ranorex Studio并打开解决方案文件TooltipValidation.rxsln 贴士 样本解决方案适用于Ranorex Studio 8.0或更高版本。您必须同意8.2及更高版本的自动解决方案升级。 &#x1F448;基于图像的验证示例 © 2018 ranorex.xyz            updated: 2020-06-18 "},"ranorex-studio-fundamentals/whitelisting/":{"url":"ranorex-studio-fundamentals/whitelisting/","title":"白名单","keywords":"","body":"本页说明本页说明 为了可以和官方同步URL，gitbook默认章节的README.md内容暂时不放翻译内容。 待日后放置本章节的实践示例！ 吼吼！加油！！！ © 2018 ranorex.xyz            updated: 2020-06-18 "},"ranorex-studio-fundamentals/whitelisting/whitelisting.html":{"url":"ranorex-studio-fundamentals/whitelisting/whitelisting.html","title":"白名单","keywords":"","body":"[译] 白名单编辑白名单结果[译] 白名单 在识别UI元素时，Ranorex Studio及其组件默认扫描计算机上的所有正在运行的进程。通过白名单，您可以将Ranorex Studio专注于与测试相关的流程。 这有两个好处： 它可以在测试录制，测试执行和Ranorex Spy中提高性能 它可以帮助您创建干净的录制，因为您只能与白名单进程进行交互。 贴士 提前计划哪些流程将成为您测试的一部分，并将其添加到白名单中。 编辑白名单 在Ranorex工作室，View>whitelist。白名单打开。 如果白名单为空，请单击编辑白名单...或单击打击垫右上角的白名单图标。 出现编辑窗口。在里面： a. 将进程添加到白名单或使用按钮删除它们。 b. 如果左侧未列出进程，请单击“Add process...”以浏览到该进程并直接添加。 c. 单击“Advanced...”以打开一个对话框，您可以在其中粘贴进程名称列表或使用正则表达式语句指定一系列进程名称。 完成后，单击“Apply whitelist”。Ranorex Studio及其组件现在只能在白名单进程中识别UI元素。 贴士 端点不受白名单的影响，因此仍会出现在Spy中。 章节预览了解有关端点的更多信息 Web和移动测试>端点> &#x1F449;入门 结果 没有白名单的Ranorex Spy浏览器窗口 具有活动白名单的Ranorex Spy浏览器窗口和白名单中的Ranorex Studio演示应用程序 © 2018 ranorex.xyz            updated: 2020-06-18 "},"ranorex-studio-fundamentals/reporting/":{"url":"ranorex-studio-fundamentals/reporting/","title":"报告","keywords":"","body":"报告报告 © 2018 ranorex.xyz            updated: 2020-06-18 "},"ranorex-studio-fundamentals/reporting/introduction.html":{"url":"ranorex-studio-fundamentals/reporting/introduction.html","title":"介绍","keywords":"","body":"[译] 报告基本特征章节结构[译] 报告 Ranorex Studio中的每个测试都以报告结束。然而，你怎么知道测试运行是否成功？该报告详细介绍了从开始到开始的整个测试运行，即有多少测试用例成功，失败或被阻止; 提出了什么错误和警告; 给定测试容器的迭代; 等等。例如，您可以自定义报告以更改显示的信息或添加自己的标记。最后，您还可以导出报告。 观看我们的点播网络研讨会掌握Ranorex Studio报告： Ranorex Studio报告是测试自动化不可或缺的一部分。然后，你怎么知道测试运行是否成功？在我们的免费点播网络研讨会中了解报告现在查看 基本特征 一旦测试运行开始，报告就会开始收集数据。 &#x1F449;报告等级控制报告中包含的数据。 报告将在测试运行时生成 进展并且您可以在运行期间随时查看它。这对于需要数小时运行的超大型测试套件特别有用。 报告可以自定义。 章节预览Ranorex Studio基础知识>报告> &#x1F449;Ranorex标准报告，&#x1F449;报告等级探讨了这些基本特征。，和&#x1F449;定制化报告。 章节结构 报告是一个相当复杂的主题，这就是为什么我们在下面概述了本章的结构。 报告章节结构                                         动作和报告&#x1F449; © 2018 ranorex.xyz            updated: 2020-06-18 "},"ranorex-studio-fundamentals/reporting/actions-and-the-report.html":{"url":"ranorex-studio-fundamentals/reporting/actions-and-the-report.html","title":"动作和报告","keywords":"","body":"[译] 动作和报告如何报告动作报告中的动作是什么样的验证分隔符所有其他动作[译] 动作和报告 在本章中，您将了解在测试运行期间执行的动作如何在报告中表示。 本章导视 如何报告动作 报告中的动作是什么样的 视频向导视频“动作和报告”将引导您完成本章中的信息。立即观看 如何报告动作 默认情况下，测试运行期间执行的每个动作都会触发报告消息。 测试运行期间报告的动作 如上图所示，一个动作意味着至少一条报告消息，有时甚至更多。在具有数千个动作的大型测试套件中，报告可能会非常快速地混乱。为了防止这种情况，您可以使用&#x1F449;报告等级以控制哪些报告消息进入报告。 您还可以通过其属性完全禁用动作报告。 章节预览禁用报告动作的解释如下：Ranorex Studio基础>动作> &#x1F449;管理动作 报告中的动作是什么样的 根据报告在报告中的显示方式，动作可分为四组： 验证失败或成功 分隔符 用户定义的日志消息 所有其他动作 验证 验证报告消息总是包含两部分。第一部分具有报告级别信息，并且只是已执行验证的通知。 第二个部分告诉您验证是成功还是失败。 成功验证成功验证的报告级别为Success，默认情况下以绿色打印。 验证失败失败的验证具有报告级别失败，具有红色背景，并且通常附带两个屏幕截图，以便更容易找出出错的地方。 章节预览要了解有关验证的更多信息，请参阅以下章节：Ranorex Studio基础>动作> &#x1F449;动作属性 和Ranorex Studio基础> &#x1F449;测试验证 分隔符 分隔符对于在action表和报告中直观地构造动作非常有用。 动作表中的分隔符，接下来是标题验证动作。 在报告中，分隔符具有报告级别Info，其消息显示在actions表中定义的标题。 章节预览有关分隔符的更多信息，请参阅Ranorex Studio基础知识> Ranorex Recorder> &#x1F449;管理录制模块 和Ranorex Studio基础>动作> &#x1F449;动作属性 用户定义的日志消息 使用“log”消息动作，您可以将具有自定义报告级别的自定义消息传递给报告。 在动作表中记录消息。 报告中的相同日志消息。 章节预览有关日志消息动作的更多信息，请参阅Ranorex Studio基础>动作> &#x1F449;动作属性 所有其他动作 所有其他动作都具有报告级别信息，其消息描述了他们正在执行的动作。如果此类动作失败，则报告级别失败的单独消息将以与上面进一步描述的验证相同的方式传递给报告。 鼠标单击动作具有报告级别信息，其文本描述了在指定的屏幕坐标处对指定的控件库项目执行了左键单击。 &#x1F448;介绍                                      报告等级&#x1F449; © 2018 ranorex.xyz            updated: 2020-06-18 "},"ranorex-studio-fundamentals/reporting/concept-report-levels-2.html":{"url":"ranorex-studio-fundamentals/reporting/concept-report-levels-2.html","title":"报告等级","keywords":"","body":"[译] 报告等级下载示例解决方案安装示例解决方案默认报告级别报告级别的目的报告级别阈值识别等级--信息（值=20）识别等级--成功（值=110）设置报告级别阈值应用示例初始状态这是如何做：结果[译] 报告等级 报告级别对测试运行期间发生的事件进行分类，并控制报告中包含哪些信息。当你的测试包含数百个带有数千个模块的测试用例时，报告级别是在细节和简洁之间取得平衡的关键。在本章中，你将了解报告级别是如何工作的以及如何使用它们。 本章导视 下载示例解决方案 默认报告级别 报告级别的目的 报告级别阈值 设置报告级别阈值 应用示例 视频向导视频“报告级别”将引导您完成本章中的信息。立即观看 下载示例解决方案 本章内容基于你在下面下载的示例解决方案。 解决方案 主题：构建一个测试 时间：15min以内下载：点我下载 安装示例解决方案 安装 解压项目目录到你的计算机任一文件夹 使用RanorexStudi打开RxDatabase.rxsln解决方案 贴士示例解决方案适用于Ranorex版本8.0或更高版本。你需要将解决方案自动升级同意到8.2及更高版本的。 默认报告级别 Ranorex Studio提供6个默认报告级别，每个级别都有相应的颜色和整数值。 默认Ranorex报告级别 报告级别的整数值越高，其关注级别越高，即调试通知引起的关注程度低于信息通知 在录制模块中，默认报告级别适用 在代码模块中，你可以自定义报告等级 报告级别的目的 在测试报告中，一个执行的动作意味着至少一个报告消息。在具有数千个动作的大型测试套件中，测试报告很快就会变得混乱。使用报告级别，您可以控制报告中包含的消息。报告级别按重要性对报告消息进行分类，并充当过滤器。 下图说明了这一点。 按报告级别提高报告关注度的动作 动作#1-#4和#6-#7具有报告级别信息(值= 20)。 实际上，验证要么成功，要么失败。因此，成功的测试验证(动作#5)具有报告级别的成功(值= 110)。如果它失败了，它将有报告级别的失败(值= 120)。 报告级别阈值 报告级别阈值是一个整数值，用于定义消息必须包含在报告中的最小报告级别。如果报告级别低于此值，则报告中不会显示该消息。 报告级别阈值在结构项的测试套件中设置，即测试套件项，测试用例和智能文件夹。 下面的图片说明了这一点。 识别等级--信息（值=20） 识别等级设置为Info（值=20） 只包括所有带有报告级别信息和以上信息的状态消息 识别等级--成功（值=110） 识别等级设置为Success（值=110） 只有状态成功的测试验证(值= 110)包含在报告中 设置报告级别阈值 报告级别阈值在结构项的测试套件中设置，即测试套件项，测试用例和智能文件夹。默认情况下，结构项从其直接父级继承该设置。 切换到测试套件视图。 右键单击测试套件，测试用例或智能文件夹。 单击“Report level”，然后选择所需的值。 继承 选择此选项后，报告级别将直接继承父级结构化项目。 应用示例 让我们将上述解释应用于一个例子。 我们将插入一条日志消息并设置其报告级别。 初始状态 示例解决方案中的动作模块包含7个动作的动作，其中一个是验证动作。 测试用例的识别级别设置为Success。这意味着目前只有在测试运行期间才会报告成功或失败的验证。 我们现在想要添加一条日志消息，告诉我们已单击“提交”按钮，当然我们希望它显示在报告中，而除了验证之外的所有其他动作都不应显示。 这是如何做： 在动作#4后面添加一条日志信息 输入消息并将其报告级别设置为“Success”。 结果 录制动作的报告级别和测试用例的识别级别现在看起来是这样的: 示例应用的测试报告 日志消息，报告级别成功。 测试验证成功，报告级别成功。 &#x1F448;动作和报告                               Ranorex标准报告&#x1F449; © 2018 ranorex.xyz            updated: 2020-06-18 "},"ranorex-studio-fundamentals/reporting/ranorex-standard-reporting.html":{"url":"ranorex-studio-fundamentals/reporting/ranorex-standard-reporting.html","title":"Ranorex标准报告","keywords":"","body":"[译] Ranorex标准报告文件名和位置文件名报告文件位置报告标题查看报告详情简单报告结构详细报告内容报告中的数据迭代在测试报告中迭代运行过滤消息过滤测试容器过滤动作消息跳转在Spy中打开视频报告启用视频报告播放报告中的视频报告视频目录渐进式报告预览报告设置和配置[译] Ranorex标准报告 在本章中，您将了解报告的存储位置，报告内容，读取方式以及更改报告设置的位置。 本章导视 文件名和位置 报告标题 查看报告详情 简单报告结构 详细报告内容 报告中的数据迭代 在测试报告中迭代运行 过滤信息 跳转 在Spy中打开 视频报道 渐进式报告预览 报告设置和配置 视频向导视频“标准报道”将引导您完成本章中的信息。立即观看 文件名和位置 文件名 报告名是自动生成，并根据测试是从录制模块还是从测试套件运行而更改。 对于在测试套件开始的运行，文件名将以测试套件的名称开始 对于从录制模块开始的运行，文件名将以记录的名称开始 报告名称的第二部分是生成报告的日期和时间的组合 测试日期 = 21 February 2018 = 2018221 测试时间 = 07:08:36 PM = 190836 日期和时间用下划线分隔。 文件后缀是.rxlog，Ranorex Log的缩写 章节预览你可以自定义生成报告文件名的方式，在 > Ranorex Studio 系统详情 > 设置和配置 > &#x1F449; 报告设置章节中详细介绍和解释了相关内容 报告文件位置 在项目视图中，报告保存在你项目的Reports文件夹中。 在Windows中，您可以从两个不同的文件夹访问报告。原始报告以及报告的布局文件和原始数据文件（稍后作为自定义的一部分进行说明）存储在输出目录的Reports文件夹中。 项目文件夹中的 “ 报告”文件夹仅包含原始报告的快捷方式，不包含任何样式表或原始数据文件。 请看这里的插图： 报告项目文件夹中的文件夹。 报告项目输出目录中的文件夹。 报告的布局文件。 原始报告文件的快捷方式。 包含原始数据文件的原始报告文件。 贴士 对于您在Ranorex Studio 9中使用但在早期版本中创建的解决方案，动作略有不同：原始报告以及布局和原始数据文件直接存储在项目的输出目录中，而不是收集在Reports文件夹中。 报告标题 报告标题显示一系列有用的数据并总结测试结果。 基本的报告数据 测试套件名/录制模块名 运行测试的测试套件或录制模块的名称 系统和测试数据 错误和警告数量 如果报告中至少有一个警告，橙色通知将在下面进一步显示 测试报告中的错误/警告计数器 测试结果 饼图总结了测试结果 提示 此图表仅计算测试用例。智能文件夹被忽略;你可以在下面的报告详细信息中查看其结果。 报告汇总类型 成功的测试 绿色饼图表示所有测试用例都成功 失败的测试 红色饼图表示所有测试用例都失败了 测试总结 包含成功，失败和阻止测试用例的饼图 在该示例中，运行配置包含8个测试用例。前两个测试用例成功通过。第三次失败，之后测试中止，阻止了剩下的5个测试用例 查看报告详情 默认情况下，测试用例、智能文件夹等的详细信息将被折叠。需单击项目名称旁边的箭头以显示详细信息。 简单报告结构 报告的结构基本上遵循测试套件结构和执动作作的顺序。每个测试套件结构元素都存在于报表中，由于报表级别的设置，其内容可见/部分可见/不可见。 测试报告结构代表相应的测试套件结构 报告信息表示相应录制模块的动作列表 详细报告内容 时间 默认情况下，将显示从开始运行测试后的相对执行时间。在 &#x1F449; 报告设置中，默认设置可以更改 级别 第二列显示所执动作作的报告级别 类别 此列显示已执行的动作类型 消息 报告消息包含有关执动作作期间发生的更多详细信息 报告消息，指出在特定控件库项目上执行了键序列'Harry' 如果发生故障，报告还将包括两个屏幕截图，一个在故障时刻，一个在故障发生之前。 失败的测试动作之前的动作截图 测试测试动作的截图 报告中的数据迭代 在数据驱动的测试中，绑定了数据的测试用例或智能文件夹会根据数据源进行多次迭代。在报告中，每个迭代都单独显示。 报告中的数据迭代 数据迭代 数据迭代由＃行和数据行：测试容器旁边的＃标签表示 ＃行表示数据容器将被迭代的次数-每行一次 测试报告中的数据行 每个数据行/迭代及其详细信息都显示在报告中 变量和值 此迭代中使用的变量和值 提示 可以在数据源对话框中屏蔽秘密测试数据。这也适用于报告。 例如，如果屏蔽了年龄和性别，报告将如下所示： 屏蔽的报告数据 章节预览在 > Ranorex Studio 高级教程 > &#x1F449; 数据驱动测试章节中详细介绍和解释了数据迭代和屏蔽数据的概念 在测试报告中迭代运行 如果迭代运行测试用例或智能文件夹，则每个运行迭代都会在报告中显示其详细信息 在测试报告中迭代运行 运行迭代由迭代指示：＃和运行：测试容器旁边的＃标签 迭代：＃告诉你测试容器的运行次数 章节预览在 > Ranorex Studio 基础教程 > 测试套件 > &#x1F449; 执行测试套件章节中详细介绍和解释了数据迭代和屏蔽数据的概念 过滤消息 报告中有两个过滤器：一个用于过滤测试容器，另一个用于过滤动作的消息。 过滤测试容器 使用报表上部的复选框根据测试容器的成功状态对其进行筛选。 过滤报告消息 成功--如果选中，则显示报告级别为“成功”的报告消息，前提是如果这些消息根据报告级别包含在报告中。如果未选中，则隐藏这些消息 失败--选中时显示报告级别为“失败”的报告消息。如果未选中，则隐藏这些消息 阻止--选中时显示测试运行的阻止测试用例。如果未选中，则隐藏阻止的测试用例 提示 被阻止的测试用例或智能文件夹是由于测试中止而未在测试运行期间执行的测试单元，或者未在测试套件中选择用于运行执行的测试单元。 过滤动作消息 您还可以按报告级别过滤模块中的动作消息。 跳转 你可以直接从报告消息跳转到Ranorex Studio中的相应动作或测试套件项目 鼠标移到报表条目上，即测试容器或动作的报表消息 单击报表条目右上角的跳转到项按钮 跳转按钮 与链接的控件库项相关联的动作 在Spy中打开 当你在Ranorex Studio外部打开报告时，Open In Spy按钮将可用。单击按钮以在Ranorex Spy中打开相应的报告项目 在报告中打开Spy的功能 视频报告 视频报告允许您将测试运行记录为视频集合。这也适用于Ranorex代理。 启用视频报告 默认情况下禁用视频报告。您可以在&#x1F449;报告设置中启用和配置它。 播放报告中的视频报告 在报告中，单击测试用例旁边的播放视频以播放相应的视频。 视频目录 视频保存在Reports文件夹的输出目录中。对于每次测试运行，都会创建一个单独的文件夹。 报告输出目录中的文件夹 三个视频文件夹 渐进式报告预览 Ranorex在测试运行过程中生成报告，你可以在测试运行期间的任何时候查看报告。这对于非常长的测试运行特别有用。 Ranorex在测试运行一开始就开始生成报告 一旦设置的自动保存时间结束(默认= 30s)，就会保存报表文件 发生这种情况，只需双击报表文件就可以打开正在进行的报表 渐进式报告，带有两个通知，表明测试仍在进行中 提示 当然，如果你尝试在运行测试的计算机上打开报告，则很可能会导致测试失败，因为你将与UI进行交互。 报告设置和配置 报告有自己的设置。以下方式可以访问： 在测试套件视图中，右键点击测试套件 点击属性 点击报告选项卡 报告设置 章节预览在 > Ranorex Studio 系统详情 > 设置和配置 > &#x1F449; 报告设置章节中详细介绍和解释了测试报告设置的相关内容 &#x1F448;报告等级                                   定制化报告&#x1F449; © 2018 ranorex.xyz            updated: 2020-06-18 "},"ranorex-studio-fundamentals/reporting/report-customization.html":{"url":"ranorex-studio-fundamentals/reporting/report-customization.html","title":"定制化报告","keywords":"","body":"[译] 定制化报告下载示例解决方案从原始数据到报告收集的测试数据CSS和XSL格式HTML报告文件创建一个自定义报告模板结果多个自定义报告模板结果重命名自定义报告模板选择/重新应用报告模板重置到默认报告模板Ranorex如何处理自定义模板输出文件夹\\bin\\Debug\\流程摘要在报告中包含外部文件背景颜色和logo自定义logo替代logo结果用用户名替换计算机/端点结果更改报告消息格式结果从报告中删除信息结果[译] 定制化报告 标准报告通常适用于大多数情况。 但是，为了满足个人需求，它是完全可定制的。 我们将选项分为两个章节，一个用于更简单的自定义，另一个用于更复杂的自定义。 在本章中，你将学习有关自定义的基础知识，主要是如何更改报告的外观，即添加自己的logo和更改模板。 章节预览有关涉及编码的更复杂的自定义，请参阅 > Ranorex Studio 基础教程 > 报告 > &#x1F449; 复杂自定义 本章导视 下载示例解决方案 从原始数据到报告 创建一个自定义报告模板 多个自定义报告模板 重命名自定义报告模板 选择/重新应用报告模板 重置到默认报告模板 Ranorex如何处理自定义模板 在报告中包含外部文件 背景颜色和logo自定义 用用户名替换计算机/端点 更改报告消息格式 从报告中删除信息 视频向导视频“自定义报告简介”将引导您完成本章中的信息。立即观看 下载示例解决方案 本章中的说明基于下述下载的示例解决方案。 示例解决方案 主题：报告自定义时间：15min以内下载：点我下载 安装 解压项目目录到你的计算机任一文件夹 使用RanorexStudi打开RxDatabase.rxsln解决方案 贴士 示例解决方案适用于Ranorex版本8.0或更高版本。你需要将解决方案自动升级同意到8.2及更高版本的 从原始数据到报告 下面的图片说明了在报表中以易于阅读的格式显示原始数据的过程。 Ranorex报告的概念 在测试运行期间，报表引擎以XML格式收集数据。 接着报表引擎将此数据转换为HTML，并根据CSS和XSL规范创建报表文件。 然后，Ranorex Studio可以使用其内置的HTML查看器显示此基于HTML的报告。 收集的测试数据 收集测试运行的数据并以XML格式存储。此原始数据也可以在Ranorex Studio外部使用任何XML查看器/编辑器进行读取和使用。 XML格式的测试数据 原始XML数据总是保存在和对应报告相同的文件夹中，并且具有相同的文件名和添加的后缀.data 报告文件和XML数据文件 CSS和XSL格式 然后使用原始XML数据创建基于CSS和XSL规范的HTML文件。 用于生成HTML文件的XSL和CSS格式也存储在与XML数据和实际报告相同的文件夹中 CSS和XSL文件 章节预览为了能够更改Ranorex标准报告的布局和内容，建议你对HTML，CSS，XSL和XML有基本的了解。 有关详细信息，请参阅www.w3.org上的万维网联盟（W3C） HTML报告文件 由XSL和CSS从XML生成的最终报告是基于HTML的格式存储在项目目录的Reports文件夹中。 基于html的报告文件和报告显示在Ranorex Studio 提示 报告可以在任一Web浏览器中查看 报告文件可以在任一HTML编辑器里编辑 创建一个自定义报告模板 现在我们已经确定了如何生成报告，现在我们可以开始自定义报告了。在Ranorex Studio中有一种方便的方法可以在不影响标准报告的情况下执行此操作： 在测试套件视图，右键测试套件 点击Properties 点击Report选项卡 点击Create custom template 将显示一条消息，告诉你新报告模板文件夹的创建位置，单击确定确认。 结果 在项目视图中，在项目视图中，你可以看到包含复制的报告文件的新模板文件夹。 项目视图中的NewCustomTemplate1文件夹 CSS、XSL和图像文件 这些是你更改的复制文件，用于自定义报告的布局和内容 PNG文件包含Ranorexlogo作为报告的默认logo以及标准报告中使用的其他图像，你可以用自己的图像替换它们 预览文件 这些文件使你能够快速检查在实际报告中其他文件中的定制是什么样子的。打开视图，获得预览 你也可以从Windows打开它，因此你不必启动Ranorex Studio 多个自定义报告模板 你可以根据需要创建任意数量的自定义报告模板。 但是，测试套件一次只能激活一个模板。要创建其他自定义模板： 在测试套件属性的Report选型卡中，点击重置到默认 再点击Create custom template并点击OK 结果 另一个模板文件夹出现在项目视图中。 多个自定义报告模板的示例 重命名自定义报告模板 你可以重命名自定义报告模板 在项目视图中，选择你要重命名的模板 按下F2可以重命名模板文件夹 重命名文件夹 注意报告引擎不会自动识别名称更改。重命名后，你必须应用模板。 重命名一个自定义报告模板 如果模板没有应用将会报错 选择/重新应用报告模板 这个功能有三种用途： 在文件夹中添加一个现有的自定义模板 如果你有多个自定义模板，选择一个并应用一个使用 如果你重命名了一个模板并应用了它，Ranorex可以再次找到它 提示 同一时间，一个测试套件，只有一个报告模板是激活的 在测试报告属性中打开报告选项卡 如果当前有一个自定义模板处于激活状态，单击Reset重置到默认模板 点击Choose custom template 在浏览视图中选择一个自定义模板 点击OK 重置到默认报告模板 如果你想停止使用自定义模板，你可以随时重置到默认的Ranorex模板。 在测试套件属性中的打开报告选项卡 点击Reset重置到默认并确认OK 提示此操作不会删除自定义报表模板。你仍然可以按照上面一节描述的那样重新应用它们 Ranorex标准报告模板 Ranorex如何处理自定义模板 Ranorex有一个特殊的机制来处理定制的报表模板。它涉及到每个项目都有的输出文件夹和报告文件夹。当你想要在报表模板中包含外部文件时，了解这个过程是很重要的，例如包含你标识的PNG，因为这些文件默认情况下不包含在这个过程中。 输出文件夹\\bin\\Debug\\ 执行测试时，Ranorex Studio会将测试运行所需的所有文件复制到指定的输出文件夹中 叫 \\bin\\Debug\\，它位于项目的文件夹中。这包括作为自定义报告模板的一部分创建的标准文件，但不包括外部文件，例如logo。仅当外部文件配置为输出文件夹时，它们才会复制到输出文件夹，因此默认情况下不会显示在报告中。如何执行此操作将在下一节中介绍。 Ranorex输出文件夹 在输出文件夹中复制自定义报告模板文件夹（本例中为FrogConsulting） 报告输出文件夹中的文件夹 报告文件（.rxlog）和相应的原始数据文件（.rxlog.data） CSS和XSL规范文件以及默认logo文件RanorexReport.png 提示 Ranorex在每次后续测试运行时同步输出文件夹的所有文件。 流程摘要 下面的图像和说明说明了该过程。如前所述，外部文件需要特殊配置才能包含在流程中。在这种情况下，我们假设已经完成了。您可以在下面进一步了解如何操作。 自定义报告模板已应用于测试套件。自定义模板的文件夹位于项目的文件夹中，本例中为FrogConsulting。 在第一次测试运行时，自定义模板文件夹将直接复制到项目的输出文件夹中。 报表布局文件（CSS，XSL和自定义文件）也从模板文件夹直接复制到项目输出文件夹中的Reports文件夹。 在后续运行中，项目文件夹和输出文件夹中的自定义模板文件夹将同步，即输出文件夹始终包含自定义模板文件夹中的最新文件。 在报告中包含外部文件 默认情况下，Ranorex仅在报告过程中包含内部文件（.rxlog，rxlog.data，.css，.xsl），即仅将这些文件复制到输出文件夹。对于要在自定义报告中显示的外部文件（如logo），你需要手动将它们包含在此过程中。 将外部文件复制到你希望它们所属的自定义报告模板的文件夹中。 在Ranorex Studio的项目视图中，单击刷新按钮以在模板的文件夹中查看该文件。 项目文件视图工具栏中的“刷新”按钮 右键外部文件 点击Include in project 该文件现在包含在项目中，但我们还没有完成 复制到自定义报表文件夹中的任何文件最初都不是项目的一部分，这意味着它们也不包括在报表过程中 6.选择外部文件并点击F4打开它的属性 7.你可以看到Copy to output folder被设置成Never，因此文件仍然不会包含到报告过程中。将它更改为Always或是Preserve newest。 Never--是任何新包含的外部文件的默认设置。 Always--表示文件将被复制到每个测试运行的输出文件夹中。 Preserve newest--表示只有在/Reports/文件夹中的版本比输出文件夹中的现有版本更新时才会复制该文件。如果输出文件夹中尚不存在任何文件，则始终会复制该文件 背景颜色和logo自定义 在此示例中，你将更改报告的背景颜色，并将Ranorex logo替换为自定义logo。该示例可在本章开头下载。 logo 你的logo不必是特定尺寸，可以尝试不同的尺寸 logo中使用的颜色是十六进制值 我们准备了一个标志样品。绿色背景有十六进制值：#ACDB6B 示例logo已位于FrogConsulting自定义报告模板文件夹中 替代logo 要替换logo，你需要更改CSS文件。 在项目视图中，双击CSS规范文件 它将在新选项卡中打开 滑到文件的末尾，找到自定义区域 删除此行以取消注释自定义部分，然后按如下所述替换其内容 背景自定义 背景颜色设置为与logo背景颜色相同的绿色十六进制值 所有其他设置都保持不变 自定义logo logo的高度和宽度设置为各自的值（请参阅logo大小） 默认logo名称将替换为“frogconsulting.png” 其他设置保持不变 报告信息框对齐方式 最后，为一般信息框设置了40px的上边距 结果 提示 如果报告中缺少logo，请记住在项目和报告过程中包含logo文件，如上所述 用用户名替换计算机/端点 还有各种更改报告内容的选项。我们将通过三个示例介绍基本原理，并根据你自己的想法帮助你自定义报告。在第一个示例中，你将自定义报告，以便“计算机/端点”条目显示“用户名”，而不是计算机名称显示用户名。 用用户名替换计算机/端点 XSL文件中定义条目标题的行。 原始数据文件中的“主机”行。 它包含实际的计算机/端点名称。 XSL文件中的行，它从原始数据文件中的“主机”行获取计算机/端点名称，并将其显示在报告中的“计算机/端点”条目下方。 要用“用户名”替换“计算机/端点”条目并显示用户名： 在XSL文件中，使用\"Frog user\"替代\"计算机/端点\" 也可以在XSL文件中，使用@user替换@host变量 报告用户名自定义 保存关闭文件 结果 自定义用户名的报告 更改报告消息格式 在此示例中，你将更改特定类型的报告消息的格式。 如下图所示，在默认报告中，具有“成功”级别的消息以绿色字体打印。我们将其更改为粗体蓝色字体。 1. 默认成功的信息绿色的 打开CSS文件 找到成功消息的颜色定义并复制它 将其粘贴到CSS文件末尾的定制部分，并像在图像中一样修改它 保存并关闭文件 2. 成功消息的默认字体颜色定义 3. 自定义部分中的新颜色定义，覆盖默认定义。 提示 不要更改默认定义（CSS行＃197 - ＃199）,这样，你就可以轻松恢复默认值。 结果 从报告中删除信息 在本例中，你将从报表中删除信息。当某些内容不相关并且你想在报告中释放空间时，这是非常有用的。 在我们的示例中，我们希望删除报表消息的Time列 打开XSL文件 找到文件中所有Time的实例 1. 这些行定义了XSL文件中的Time列。 通过如下注释来停用所有这些 2. 此代码获取每个操作行的时间值，并将它们显示在正确的位置。 通过如下注释将其取消激活 结果 自定义报告没有时间列 &#x1F448;Ranorex标准报告                             复杂的报告定制&#x1F449; © 2018 ranorex.xyz            updated: 2020-06-18 "},"ranorex-studio-fundamentals/reporting/user-defined-reporting.html":{"url":"ranorex-studio-fundamentals/reporting/user-defined-reporting.html","title":"复杂的自定义","keywords":"","body":"[译] 复杂的报告定制示例解决方案应用Ranorex标准报告类标准报告类用户代码录制的报告自定义报告策略临时定义的自定义报告类别结果永久定义的自定义报告类别结果用户定义报告级别结果格式化用户定义的报告级别设置当前报告级别结果覆盖当前报告级别结果报告截图报告系统摘要添加自定义数据添加自定义数据到测试数据文件结果应用自定义数据自定义XSL文件结果[译] 复杂的报告定制 在本章中，您将找到有关如何执行一系列更复杂的报表自定义的说明。由于它们需要编码技能，因此您应该熟悉Ranorex Studio中的代码模块。 章节预览如果您不熟悉代码模块及其应用程序的概念，请参阅Ranorex Studio专家> &#x1F449;代码模块。 本章导视 示例解决方案 应用Ranorex标准报告类 自定义报告策略 用户定义报告级别 设置当前报告级别 覆盖当前报告级别 报告截图 报告系统摘要 添加自定义数据 应用自定义数据 示例解决方案 本文介绍了用户定义的报告方法的概念，下述提供示例解决方案下载。 示例解决方案 主题：用户定义报告时间：30min以内下载：点我下载 安装 解压项目目录到你的计算机任一文件夹 使用RanorexStudi打开Introduction.rxsln解决方案 贴士示例解决方案适用于Ranorex版本8.0或更高版本。你需要将解决方案自动升级同意到8.2及更高版本的。 应用Ranorex标准报告类 在代码中创建报告消息的最简单方法是使用六种不同的标准报告类之一。 标准报告类 Ranorex Studio有六个标准报告类，如下所示。这些类对应于标准报告级别。 Ranorex.Report.Debug(“Debug message”); Ranorex.Report.Info(“Information message”); Ranorex.Report.Warn(“Warning message”); Ranorex.Report.Error(“Error message”); Ranorex.Report.Success(“Success message”); Ranorex.Report.Failure(“Failure message”); 创建一个代码模块并打开它。 在Run（）方法中添加标准报告类的类实例。 应用Ranorex标准报告类 从测试套件运行代码模块并查看结果 标准报告类的报告信息 贴士 确保将测试套件的错误级别设置为“调试”级别，以显示所有标准报告消息。 用户代码录制的报告 当然，除了可以在代码模块中应用用户定义的报告之外，还可以通过用户代码录制将它们添加到录制模块中。 章节预览如果您不熟悉用户代码录制及其应用程序的概念，我们建议您阅读 > Ranorex Studio 基础教程 > 动作 > &#x1F449; 用户代码动作章节 切换到录制模块Recording1(在示例解决方案中) 插入新的用户代码录制ReportInformation()，然后双击它以将其打开 在录制模块中插入用户代码动作 将新报告信息消息添加到用户代码录制的构造函数中 运行报告模块并在测试报告中查看报告消息 在用户代码中添加报告信息 自定义报告策略 用户定义的报告消息的默认类别是“用户”。 此默认类别可以随意更改。 临时定义的自定义报告类别 创建一个新的代码模块CustomReportCategory，或从示例解决方案中打开它 打开代码模块并添加以下介绍的代码 定义一个零时的自定义报告策略 使用临时定义的自定义报告类别创建报告消息 创建第二个报告消息，不定义自定义报告类别 结果 运行相应的代码模块并查看结果 零时设置自定义报告策略 查看使用临时设置的自定义报告类别的报告消息 永久定义的自定义报告类别 创建一个新的代码模块CustomReportCategory，或者从示例解决方案中打开它 打开代码模块并添加下面介绍的代码 定义永久的自定义报告类别 定义永久的默认自定义报告类别 创建报告消息 结果 永久设置自定义报告类别 查看使用永久设置的自定义报告类别的报告消息 用户定义报告级别 使用Ranorex，可以创建和应用具有名称和值的用户定义报表级别。在示例解决方案的代码模块CustomReportLevel中找到相应的示例。 定义两个用户定义的报告级别MID和LOW 将用户定义的报告级别应用于报告消息 用户定义的报告级别 具有用户定义的报告级别的测试报告 结果 查看测试报告中对应的报告信息 相应地应用用户定义的报告级别 格式化用户定义的报告级别 格式化用户定义的报告级别 在CSS格式语法中定义样式格式 查看测试报告中格式化的结果 设置当前报告级别 只有当报表级别高于或等于测试容器的报表级别时，报表信息才会出现在报表中。在示例解决方案的代码模块CustomReportLevel中找到相应的示例。 定义两种用户定义的报告级别 设置当前的报告级别值为MID和更高 通过创建具有不同报告级别的两个报告消息来应用该设置 设置当前报告级别 结果 测试报告包含经过级别筛选的报告消息 测试报告中仅包含报告级别为MID或更高级别的报告消息 覆盖当前报告级别 通过使用报告级别“始终”记录信息，可以始终覆盖当前报告级别。在示例解决方案的代码模块CustomReportLevel中找到相应的示例。 覆盖当前报告级别 定义两个用户定义的报表级别 将当前报表级别设置为MID或更高 通过创建两个报告消息来应用该设置，第二个消息覆盖当前报告级别 结果 覆盖当前报告级别 看到第二个报告信息覆盖了当前的报告级别MID 报告截图 添加以下代码以将屏幕截图发送到报告。如果您未指定控件库项目，Ranorex Studio会截取代码执行时可见的内容。 报告的桌面截图 添加用于将屏幕截图发送到测试报告的代码 章节预览在 > Ranorex Studio 专家教程 > &#x1F449; 代码模块章节中介绍并解释了通过代码模块寻址控件库项目 报告系统摘要 添加以下代码以在报告中显示系统摘要。 报告系统摘要 系统摘要在报告中显示为Info消息 添加自定义数据 在本节中，我们将向您展示如何在测试运行期间收集自定义数据以及如何将这些数据写入用于生成最终报告的XML测试数据文件中。 添加自定义数据到测试数据文件 触发定制数据收集是通过用户代码动作完成的，该动作具有待定义的方法并且负责跟踪定制数据。您可以在示例解决方案的代码模块CustomData中找到相应的示例。 生成自定义报告数据 活动堆栈对象定义 定义一个引用Ranorex当前活动堆栈的对象 活动堆栈是测试运行期间通过堆栈数据结构收集所有活动的地方 将活动添加到“活动堆栈” 活动堆栈方法CustomProperties将一个报告的活动放到活动堆栈上 该方法由一个自定义字段名(即'myName')和一个自定义字段值(即'myValue')定义，它们都是string类型的 结果 运行代码模块并查看测试报告。 在测试数据文件中的自定义报告数据 测试数据文件中的自定义数据 如果您在Ranorex报告生成之外应用测试数据，请随意以您需要的方式解析XML文件 如果您需要将定制的测试数据包含在Ranorex标准报告中，请参阅下一节 应用自定义数据 如果您希望将XML测试数据文件中的自定义数据包含在Ranorex报告中，请按照此处的说明进行操作。 章节预览为了能够更改Ranorex标准报告的布局和内容，建议你对HTML，CSS，XSL和XML有基本的了解。 有关详细信息，请参阅www.w3.org上的万维网联盟（W3C） 自定义XSL文件 要在Ranorex报告中包含自定义数据，必须定制Ranorex报告的XSL规范。XSL规范的定制可以用任何XML编辑器完成，当然也可以用Ranorex Studio完成。您可以在示例解决方案的项目文件文件夹/CustomDataTemplate/中找到对应的XSL文件。 识别测试数据文件中的字段对 打印定制数据介绍(头)选项 选择对应字段名称的字段值 结果 在测试报告中的自定义数据 根据XSL文件规范中的位置，Ranorex报告包含自定义数据 &#x1F448;定制化报告                           将报告转换为其他数据类型&#x1F449; © 2018 ranorex.xyz            updated: 2020-06-18 "},"ranorex-studio-fundamentals/reporting/converting-reports-data-types.html":{"url":"ranorex-studio-fundamentals/reporting/converting-reports-data-types.html","title":"将报告转换为其他数据类型","keywords":"","body":"[译] 将现有报告转换为PDF下载报告转PDF工具转换现有的一个报告允许的参数[译] 将现有报告转换为PDF 本文介绍如何使用ReportToPDF工具将现有Ranorex报告文件转换为PDF。这将允许您与未安装Ranorex的人共享报告。 提示 如果您希望Ranorex在测试执行期间生成报表时将其转换为PDF，请使用Ranorex Automation Helpers中包含的ReportToPDFModule。 本章导视 下载报告转PDF工具 转换现有的一个报告 视频向导视频“转换报告”将引导您完成本章中的信息。立即观看 下载报告转PDF工具 ReportToPDF工具作为独立的可执行文件进行提供： Ranorex_PDF_Executable.zip: 用于转换现有报告文件的可执行文件(*.rxzlog) style.zip:生成PDF的样式表 转换现有的一个报告 ReportToPDF可执行文件是一个命令行工具，允许您将现有Ranorex报告转换为PDF。报告必须以压缩形式传递给转换器，即所谓的rxzlog。rxzlog是单个存档（.rxzlog扩展名），包括报告和所有相关文件。 使用以下调用从命令行执行ReportToPDF工具： ReportToPDF.exe [input file] [output file] /[argument] 输入和输出文件是必需的，参数是可选的。 [input]:设为需要转换的文件 [output]:设为PDF名 允许的参数 style: 设置一个自定义样式表 detail: 指定生成的PDF中显示的信息量: none: 不显示任何模块动作 failed: 仅显示故障模块的动作 all: 所有的动作都显示（默认值） &#x1F448;复杂的报告定制 © 2018 ranorex.xyz            updated: 2020-06-18 "}}